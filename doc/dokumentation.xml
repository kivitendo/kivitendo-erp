<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<book id="kivitendo-documentation" lang="de">
  <title>kivitendo 3.8.0: Installation, Konfiguration,
  Entwicklung</title>

  <chapter id="Aktuelle-Hinweise">
    <title>Aktuelle Hinweise</title>

    <para>Aktuelle Installations- und Konfigurationshinweise gibt es:</para>

    <itemizedlist>
      <listitem>
        <para>im Community-Forum: <ulink
        url="https://forum.kivitendo.de">https://forum.kivitendo.de</ulink></para>
      </listitem>

      <listitem>
        <para>im Kunden-Forum: <ulink
        url="https://www.kivitendo.de/redmine/projects/forum/boards/">https://www.kivitendo.de/redmine/projects/forum/boards/</ulink></para>
      </listitem>

      <listitem>
        <para>in der doc/UPGRADE Datei im doc-Verzeichnis der
        Installation</para>
      </listitem>

      <listitem>
        <para>Im Schulungs- und Dienstleistungsangebot der entsprechenden
        kivitendo-Partner: <ulink
        url="https://www.kivitendo.de/partner.html">https://www.kivitendo.de/partner.html</ulink></para>
      </listitem>
    </itemizedlist>
  </chapter>

  <chapter id="config">
    <title>Installation und Grundkonfiguration</title>

    <sect1 id="Installation-Übersicht">
      <title>Übersicht</title>

      <para>Die Installation von kivitendo umfasst mehrere Schritte. Die
      folgende Liste kann sowohl für Neulinge als auch für alte Hasen als
      Übersicht und Stichpunktliste zum Abhaken dienen, um eine Version mit
      minimalen Features möglichst schnell zum Laufen zu kriegen.</para>

      <orderedlist>
        <listitem>
          <para><emphasis>Voraussetzungen überprüfen</emphasis>: kivitendo
          benötigt gewisse Ressourcen und benutzt weitere Programme. Das
          Kapitel "<xref linkend="Benötigte-Software-und-Pakete"/>" erläutert
          diese. Auch die Liste der benötigten Perl-Module befindet sich
          hier.</para>
        </listitem>

        <listitem>
          <para><emphasis>Installation von kivitendo</emphasis>: Diese umfasst
          die "<xref linkend="Manuelle-Installation-des-Programmpaketes"/>"
          sowie grundlegende Einstellungen, die der "<xref
          linkend="config.config-file"/>" erläutert.</para>
        </listitem>

        <listitem>
          <para><emphasis>Konfiguration externer Programme</emphasis>: hierzu
          gehören die Datenbank ("<xref
          linkend="Anpassung-der-PostgreSQL-Konfiguration"/>") und der
          Webserver ("<xref linkend="Apache-Konfiguration"/>").</para>
        </listitem>

        <listitem>
          <para><emphasis>Benutzerinformationen speichern können</emphasis>:
          man benötigt mindestens eine Datenbank, in der Informationen zur
          Authentifizierung sowie die Nutzdaten gespeichert werden. Wie man
          das als Administrator macht, verrät "<xref
          linkend="Benutzerauthentifizierung-und-Administratorpasswort"/>".</para>
        </listitem>

        <listitem>
          <para><emphasis>Benutzer, Gruppen und Datenbanken
          anlegen</emphasis>: wie dies alles zusammenspielt erläutert "<xref
          linkend="Benutzer--und-Gruppenverwaltung"/>".</para>
        </listitem>

        <listitem>
          <para><emphasis>Los geht's</emphasis>: alles soweit erledigt? Dann
          kann es losgehen: "<xref linkend="kivitendo-ERP-verwenden"/>"</para>
        </listitem>
      </orderedlist>

      <para>Alle weiteren Unterkapitel in diesem Kapitel sind ebenfalls
      wichtig und sollten vor einer ernsthaften Inbetriebnahme gelesen
      werden.</para>
    </sect1>

    <sect1 id="Benötigte-Software-und-Pakete">
      <title>Benötigte Software und Pakete</title>

      <sect2 id="Betriebssystem">
        <title>Betriebssystem</title>

        <para>kivitendo ist für Linux konzipiert, und sollte auf jedem
        unixoiden Betriebssystem zum Laufen zu kriegen sein. Getestet ist
        diese Version im speziellen auf Debian und Ubuntu, grundsätzlich wurde
        bei der Auswahl der Pakete aber darauf Rücksicht genommen, dass es
        ohne große Probleme auf den derzeit aktuellen verbreiteten
        Distributionen läuft.</para>

        <para>Anfang 2024 (ab Version 3.5.6) empfehlen wir:</para>

        <itemizedlist>
          <listitem>
            <para>Debian</para>

            <itemizedlist>
              <listitem>
                <para>10.0 "Buster"</para>
              </listitem>
              <listitem>
                <para>11.0 "Bullseye"</para>
              </listitem>
              <listitem>
                <para>12.0 "Bookworm"</para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para>Ubuntu</para>
            <itemizedlist>
             <listitem>
              <para>20.04 "Focal Fossa" LTS</para>
             </listitem>
             <listitem>
              <para>22.04 "Jammy Jellyfish" LTS</para>
             </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para>openSUSE Leap 15.x und SUSE Linux Enterprise Server 15 GA</para>
          </listitem>

          <listitem>
            <para>Fedora 29</para>
          </listitem>
        </itemizedlist>
      </sect2>

      <sect2 id="Pakete" xreflabel="Pakete">
        <title>Benötigte Perl-Pakete installieren</title>

        <para>Zum Betrieb von kivitendo werden zwingend ein Webserver (meist
        Apache) und ein Datenbankserver (PostgreSQL) in einer aktuellen
        Version (s.a. Liste der unterstützten Betriebssysteme)
        benötigt.</para>

        <para>Zusätzlich benötigt kivitendo einige Perl-Pakete, die nicht
        Bestandteil einer Standard-Perl-Installation sind. Um zu überprüfen,
        ob die erforderlichen Pakete installiert und aktuell genug sind, wird
        ein Script mitgeliefert, das wie folgt aufgerufen wird:</para>

        <programlisting>./scripts/installation_check.pl</programlisting>

      <note id="List-Moreutils">
        <para>Das Paket <literal>List::MoreUtils</literal> wird benötigt um das Script ausführen zu können!</para>
      </note>
        <para>Die vollständige Liste der benötigten Perl-Module lautet:</para>

        <itemizedlist>
          <listitem>
            <para><literal>Algorithm::CheckDigits</literal></para>
          </listitem>

          <listitem>
            <para><literal>Archive::Zip</literal></para>
          </listitem>

          <listitem>
            <para><literal>CGI</literal></para>
          </listitem>

          <listitem>
            <para><literal>Clone</literal></para>
          </listitem>

          <listitem>
            <para><literal>Config::Std</literal></para>
          </listitem>

          <listitem>
            <para><literal>Daemon::Generic</literal></para>
          </listitem>

          <listitem>
            <para><literal>DateTime</literal></para>
          </listitem>

          <listitem>
            <para><literal>DateTime::Event::Cron</literal></para>
          </listitem>

          <listitem>
            <para><literal>DateTime::Format::Strptime</literal></para>
          </listitem>

          <listitem>
            <para><literal>DateTime::Set</literal></para>
          </listitem>

          <listitem>
            <para><literal>DBI</literal></para>
          </listitem>

          <listitem>
            <para><literal>DBD::Pg</literal></para>
          </listitem>

          <listitem>
            <para><literal>Digest::SHA</literal></para>
          </listitem>

          <listitem>
            <para><literal>Email::Address</literal></para>
          </listitem>

          <listitem>
            <para><literal>Email::MIME</literal></para>
          </listitem>

          <listitem>
            <para><literal>Encode::IMAPUTF7</literal></para>
          </listitem>

          <listitem>
            <para><literal>Exception::Class</literal></para>
          </listitem>

          <listitem>
            <para><literal>FCGI</literal> (nicht Versionen 0.68 bis 0.71
            inklusive; siehe <xref
            linkend="Apache-Konfiguration.FCGI.WebserverUndPlugin"/>)</para>
          </listitem>

          <listitem>
            <para><literal>File::Copy::Recursive</literal></para>
          </listitem>

          <listitem>
            <para><literal>File::Flock</literal></para>
          </listitem>

          <listitem>
            <para><literal>File::MimeInfo</literal></para>
          </listitem>

          <listitem>
            <para><literal>File::Slurp</literal></para>
          </listitem>

          <listitem>
            <para><literal>GD</literal></para>
          </listitem>

          <listitem>
            <para><literal>HTML::Parser</literal></para>
          </listitem>

          <listitem>
            <para><literal>HTML::Restrict</literal></para>
          </listitem>

          <listitem>
            <para><literal>Image::Info</literal></para>
          </listitem>

          <listitem>
            <para><literal>Imager</literal></para>
          </listitem>

          <listitem>
            <para><literal>Imager::QRCode</literal></para>
          </listitem>

          <listitem>
            <para><literal>IPC::Run</literal></para>
          </listitem>

          <listitem>
            <para><literal>JSON</literal></para>
          </listitem>

          <listitem>
            <para><literal>List::MoreUtils</literal></para>
          </listitem>

          <listitem>
            <para><literal>List::UtilsBy</literal></para>
          </listitem>

          <listitem>
            <para>LWP::Authen::Digest</para>
          </listitem>

          <listitem>
            <para>LWP::UserAgent</para>
          </listitem>

          <listitem>
            <para><literal>Mail::IMAPClient</literal></para>
          </listitem>

          <listitem>
            <para><literal>Net::SMTP::SSL</literal> (optional, bei
            E-Mail-Versand über SSL; siehe Abschnitt "<xref
            linkend="config.sending-email.smtp"/>")</para>
          </listitem>

          <listitem>
            <para><literal>Net::SSLGlue</literal> (optional, bei
            E-Mail-Versand über TLS; siehe Abschnitt "<xref
            linkend="config.sending-email.smtp"/>")</para>
          </listitem>

          <listitem>
            <para><literal>Math::Round</literal></para>
          </listitem>

          <listitem>
            <para><literal>Params::Validate</literal></para>
          </listitem>

          <listitem>
            <para><literal>PBKDF2::Tiny</literal></para>
          </listitem>

          <listitem>
            <para><literal>PDF::API2</literal></para>
          </listitem>

          <listitem>
            <para><literal>Regexp::IPv6</literal></para>
          </listitem>

          <listitem>
            <para><literal>Rest::Client</literal></para>
          </listitem>

          <listitem>
            <para><literal>Rose::Object</literal></para>
          </listitem>

          <listitem>
            <para><literal>Rose::DB</literal></para>
          </listitem>

          <listitem>
            <para><literal>Rose::DB::Object</literal> Version 0.788 oder
            neuer</para>
          </listitem>

          <listitem>
            <para><literal>Set::Infinite</literal></para>
          </listitem>

          <listitem>
            <para><literal>String::ShellQuote</literal></para>
          </listitem>

          <listitem>
            <para><literal>Sort::Naturally</literal></para>
          </listitem>

          <listitem>
            <para><literal>Template</literal></para>
          </listitem>

          <listitem>
            <para><literal>Text::CSV_XS</literal></para>
          </listitem>

          <listitem>
            <para><literal>Text::Iconv</literal></para>
          </listitem>

          <listitem>
            <para><literal>Text::Unidecode</literal></para>
          </listitem>

          <listitem>
            <para><literal>Try::Tiny</literal></para>
          </listitem>

          <listitem>
            <para><literal>URI</literal></para>
          </listitem>

          <listitem>
            <para><literal>XML::Writer</literal></para>
          </listitem>

          <listitem>
            <para><literal>XML::LibXML</literal></para>
          </listitem>

          <listitem>
            <para><literal>YAML::XS</literal> oder <literal>YAML</literal></para>
          </listitem>
        </itemizedlist>

        <para>Seit Version größer v3.9.0 sind die folgenden Pakete hinzugekommen:
          <literal>Mail::IMAPClient</literal>, <literal>Encode::IMAPUTF7</literal>
        </para>

        <para>In der Version v3.8.0 sind keine neuen Pakete hinzugekommen.</para>

        <para>In der Version v3.7.0 sind keine neuen Pakete hinzugekommen.</para>

        <para>Seit Version größer v3.6.0 sind die folgenden Pakete hinzugekommen: <literal>IPC::Run</literal></para>

        <para>Seit Version größer v3.5.8 sind die folgenden Pakete hinzugekommen: <literal>Imager</literal>, <literal>Imager::QRCode</literal>
<literal>Rest::Client</literal><literal>Term::ReadLine::Gnu</literal></para>

        <para>Seit Version größer v3.5.6 sind die folgenden Pakete hinzugekommen: <literal>Try::Tiny</literal>, <literal>Math::Round</literal></para>
        <para>Seit Version größer v3.5.6 sind die folgenden Pakete hinzugekommen: <literal>XML::LibXML</literal></para>
        <para>Seit Version größer v3.5.3 sind die folgenden Pakete hinzugekommen: <literal>Exception::Class</literal></para>

        <para>Seit Version größer v3.5.1 sind die folgenden Pakete hinzugekommen: <literal>Set::Infinite</literal>,
        <literal>List::UtilsBy</literal>, <literal>DateTime::Set</literal>, <literal>DateTime::Event::Cron</literal>
        <literal>Daemon::Generic</literal>, <literal>DateTime::Event::Cron</literal>, <literal>File::Flock</literal>,
        <literal>File::Slurp</literal></para>

        <para>Seit Version größer v3.5.0 sind die folgenden Pakete
        hinzugekommen: <literal>Text::Unidecode</literal>,
        <literal>LWP::Authen::Digest</literal>,
        <literal>LWP::UserAgent</literal></para>

        <para>Seit Version v3.4.0 sind die folgenden Pakete hinzugekommen:
        <literal>Algorithm::CheckDigits</literal>,
        <literal>PBKDF2::Tiny</literal></para>

        <para>Seit Version v3.2.0 sind die folgenden Pakete hinzugekommen:
        <literal>GD</literal>, <literal>HTML::Restrict</literal>,
        <literal>Image::Info</literal></para>

        <para>Seit v3.0.0 sind die folgenden Pakete hinzugekommen:
        <literal>File::Copy::Recursive</literal>.</para>

        <para>Seit v2.7.0 sind die folgenden Pakete hinzugekommen:
        <literal>Email::MIME</literal>, <literal>Net::SMTP::SSL</literal>,
        <literal>Net::SSLGlue</literal>.</para>

        <para>Gegenüber Version 2.6.0 sind zu dieser Liste 2 Pakete
        hinzugekommen, <literal>URI</literal> und
        <literal>XML::Writer</literal> sind notwendig. Ohne startet kivitendo
        nicht.</para>

        <para>Gegenüber Version 2.6.3 ist <literal>JSON</literal> neu
        hinzugekommen.</para>

        <para><literal>Email::Address</literal> und
        <literal>List::MoreUtils</literal> wurden aus dem Lieferumfang entfernt. Es wird
        empfohlen diese Module zusammen mit den anderen als Bibliotheken zu
        installieren.</para>

        <para>Gegenüber Version 2.6.1 sind <literal>parent</literal>,
        <literal>DateTime</literal>, <literal>Rose::Object</literal>,
        <literal>Rose::DB</literal> und <literal>Rose::DB::Object</literal>
        neu hinzugekommen. <literal>IO::Wrap</literal> wurde entfernt.</para>


        <sect3>
          <title>Debian und Ubuntu</title>
          <para>Für Debian und Ubuntu stehen die meisten der benötigten
          Pakete als Debian-Pakete zur Verfügung. Sie können mit
          folgendem Befehl installiert werden:</para>

          <programlisting>apt install  apache2 libarchive-zip-perl libclone-perl \
  libconfig-std-perl libdatetime-perl libdbd-pg-perl libdbi-perl \
  libemail-address-perl  libemail-mime-perl libfcgi-perl libjson-perl \
  liblist-moreutils-perl libnet-smtp-ssl-perl libnet-sslglue-perl \
  libparams-validate-perl libpdf-api2-perl librose-db-object-perl \
  librose-db-perl librose-object-perl libsort-naturally-perl \
  libstring-shellquote-perl libtemplate-perl libtext-csv-xs-perl \
  libtext-iconv-perl liburi-perl libxml-writer-perl libyaml-perl \
  libimage-info-perl libgd-gd2-perl libapache2-mod-fcgid \
  libfile-copy-recursive-perl postgresql libalgorithm-checkdigits-perl \
  libcrypt-pbkdf2-perl git libcgi-pm-perl libtext-unidecode-perl libwww-perl \
  postgresql-contrib poppler-utils libhtml-restrict-perl \
  libdatetime-set-perl libset-infinite-perl liblist-utilsby-perl \
  libdaemon-generic-perl libfile-flock-perl libfile-slurp-perl \
  libfile-mimeinfo-perl libpbkdf2-tiny-perl libregexp-ipv6-perl \
  libdatetime-event-cron-perl libexception-class-perl libcam-pdf-perl \
  libxml-libxml-perl libtry-tiny-perl libmath-round-perl \
  libimager-perl libimager-qrcode-perl librest-client-perl libipc-run-perl
          </programlisting>

          <para>Sollten Pakete nicht zu Verfügung stehen, so können diese auch mittels CPAN installiert werden. Ferner muss für Ubuntu das Repository "Universe" aktiv sein (s.a. Anmerkungen).</para>
          <note id="ubuntu-universe">
            <para>Die Perl Pakete für Ubuntu befinden sich im "Universe" Repository. Falls dies nicht aktiv ist, kann dies mit folgendem Aufruf aktiviert werden:
<programlisting>add-apt-repository universe</programlisting></para>
          </note>
        </sect3>

        <sect3>
          <title>Fedora</title>

          <para>Für Fedora stehen die meisten der benötigten Perl-Pakete als
          RPM-Pakete zur Verfügung. Sie können mit folgendem Befehl
          installiert werden:</para>

          <programlisting>dnf install httpd mod_fcgid postgresql-server postgresql-contrib\
  perl-Algorithm-CheckDigits perl-Archive-Zip perl-CPAN perl-Class-XSAccessor \
  perl-Clone perl-Config-Std perl-DBD-Pg perl-DBI perl-Daemon-Generic \
  perl-DateTime perl-DateTime-Set perl-Email-Address perl-Email-MIME perl-FCGI \
  perl-File-Copy-Recursive perl-File-Flock perl-File-MimeInfo perl-File-Slurp \
  perl-GD perl-HTML-Restrict perl-JSON perl-List-MoreUtils perl-List-UtilsBy \
  perl-Net-SMTP-SSL perl-Net-SSLGlue perl-PBKDF2-Tiny perl-PDF-API2 \
  perl-Params-Validate perl-Regexp-IPv6 perl-Rose-DB perl-Rose-DB-Object \
  perl-Rose-Object perl-Sort-Naturally perl-String-ShellQuote \
  perl-Template-Toolkit perl-Text-CSV_XS perl-Text-Iconv perl-URI perl-XML-Writer \
  perl-YAML perl-libwww-perl</programlisting>
        </sect3>

        <sect3>
          <title>openSUSE Leap 15.4 und SUSE Linux Enterprise Server 15</title>

          <para>Für openSUSE Leap 15.4, sowie SLES 15 stehen alle benötigten Perl-Pakete als RPM-Pakete zur Verfügung.</para>
          <para>Damit diese installiert werden können, muß das System die erforderlichen Repositories kennen und Zugriff über das Internet darauf haben.</para>
          <para>Daher machen wir die Repositories dem System bekannt.</para>
          <para>Um die zusätzlichen Repositories für die Installation zur Verfügung zu stellen, kann man diese mit YaST oder auch in einem Terminal auf der Konsole bekannt geben. Wir beschränken uns hier mit der Eingabe auf der Konsole. In den allermeisten Fällen verwenden die Administratoren eine sichere SSH-Verbindung zum zu administrierenden Server.</para>
          <para>Dazu geben wir folgenden Befehl ein:</para>

          <para>Das ERP kivitendo Repository:</para>

          <programlisting>zypper addrepo -f -p 90 \
  http://download.opensuse.org/repositories/Application:/ERP:/kivitendo/15.4/ \
  "OSS-15.4-App_ERP_kivitendo"</programlisting>

          <para>Das ERP kivitendo Evaluation Repository:</para>

          <programlisting>zypper addrepo -f -p 90 \
  http://download.opensuse.org/repositories/Application:/ERP:/kivitendo:/eval/15.4/ \
  "OSS-15.4-App_ERP_kivitendo_eval"</programlisting>

          <para>Danach geben wir noch die beiden folgenden Befehle ein:</para>
          <programlisting>zypper clean</programlisting>
          <programlisting>zypper refresh</programlisting>
          <para>Sollte zypper eine Meldung ausgeben, ob der Repositorie Key abgelehnt, nicht vertraut oder für immer akzeptiert werden soll, ist die Beantwortung durch drücken der "i" Taste am besten geeignet. Wer noch mehr über zypper erfahren möchte, kann sich einmal die zypper Hilfe anschauen.</para>
          <programlisting>zypper --help</programlisting>
          <note>
          <para>Offiziell wird von openSUSE nur noch Versionen ab 15.4 unterstützt. Die SuSE Macher haben ab Version 15.x einen großen Umbau in der Verwaltung der Pakete vorgenommen, das heißt, der Paketumfang ist der SLE 15 als Programmunterbau angepasst. Dies gilt besonders der openSUSE Distribution. Es gibt ja einmal die openSUSE Distri und die professionelle SLE (SUSE Linux Enterprise) Version. Dadurch sind viele Pakete aus dem ursprünglich nur für die openSUSE geltenen Repositorie enfernt worden, aber auch viele auf aktuellem Stand gehalten. Mit der openSUSE Leap 15.4 ist es dem Benutzer ganz einfach gemacht worden zur professionellen SUSE Linux Enterprise zu wechseln, da die RPM Paketbasis identisch ist.</para>
          </note>
          <para>Ob openSUSE Leap oder SLE, man kann die Distribution auch als reine Text Version, also ohne KDE Oberfläche aufsetzen. Vorteil hierbei ist, dass weniger Balast und unnötige Pakte installiert werden. Diese Variante wird gerne auch als 'Server', 'minimale Server' oder auch 'minmal X' Variante bezeichnet.</para>
          <para>Als Administrator hatte man jedoch auch immer die Möglichkeit, bei der Installation der Distribution die KDE (graphische) Oberfläche zu aktivieren. In dieser Konstellation hat man die Möglichkeit, eine VNC Verbindung vom administrativen Client zu verwenden. Ist das nicht eingerichtet, arbeitet der Admin dann direkt am Bildschirm des Servers. Nun loggen wir uns am Server direkt ein, starten Yast2 in einer Konsole wie folgt:</para>
          <para>yast2 return.</para>
          <para>Oder über die Menüführung wie folgt: Ein Klick auf das runde Icon, ganz links unten in der Menüleiste, dann die Maus verfahren auf System und YaST.</para>
          <para>Im weiteren Verlauf der Installation, beschränken wir uns mit dem Installations Werkzeug zypper. Zypper ist ein Komandozeilen basiertes Installations Tool, welches bei openSUSE Standard ist. Zypper weist ein etwas eigenartiges Verhalten auf, dass sich in etwa wie folgt darstellt. Hat man die Repositories eingerichtet, kann man diese mit Yast als auch mit Zypper benutzen, setzt man einen Befehl wie etwa: zypper up ab, so findet zypper mehr neuere Programmversionen als Yast. Ich habe im allgemeinen noch keine Nachteile damit erlebt.</para>
          <para>Programmpakete können mit folgendem Befehl installiert werden:</para>
          <para>zypper install Paketname</para>
          <para>Es wird empfohlen zusätzliche Pakete nicht direkt mit CPAN zu installieren, da man diese auch über andere Repositories beziehen kann, die bei openSUSE zur Verfügung stehen. Dadurch hat man den Vorteil, dass die Pakete mit YaST verwaltet werden, also wieder deinstalliert oder durch neuere ersetzt werden können. Zudem kann man auch noch eventuelle Bugs an openSUSE senden und diese dem Maintainer melden.</para>

          <programlisting>zypper install kivitendo-erp</programlisting>

          <para>Für Entwickler installiert man noch das folgende Paket:</para>

          <programlisting>zypper install kivitendo-erp-devel</programlisting>
        </sect3>
      </sect2>

      <sect2>
        <title>Andere Pakete installieren</title>

        <itemizedlist>
          <listitem>
            <para><literal>poppler-utils</literal> 'pdfinfo' zum Erkennen der Seitenanzahl bei der PDF-Generierung</para>
          </listitem>
          <listitem>
            <para><literal>Postgres Trigram-Index</literal> Für datenbankoptimierte Suchanfragen. Bspw. im Paket <literal>postgresql-contrib</literal> enthalten</para>
          </listitem>
        </itemizedlist>
        <para>Debian und Ubuntu: <programlisting>apt install postgresql-contrib poppler-utils</programlisting></para>
        <para>Fedora: <programlisting>dnf install poppler-utils postgresql-contrib</programlisting></para>
        <para>openSUSE:<programlisting>Nicht notwendig, da poppler-utils bereits i.v.m. kivitendo-erp installiert wird</programlisting></para>
      </sect2>
    </sect1>
    <sect1 id="Installation mittels Ansible"
           xreflabel="Inatallation mittels Ansible">
      <title>Installation mittels Ansible auf Ubuntu 22.04</title>
      <para>
        Ansible ist ein Open-Source-Automatisierungstool, das verwendet
        wird, um die Bereitstellung, Konfiguration und Verwaltung von
        IT-Systemen zu automatisieren. Dabei führt es Aufgaben über SSH auf
        entfernten Rechnern (Hosts) aus. Die Aufgaben werden dabei
        deklarativ als YAML Dateien, den sogenannten Playbooks, übergeben.
        Benötigt wird lediglich python und ansible ab Version 2.10.
      </para>
      <para>
        Alle benötigten Konfigurationsdateien und das Playbook sind auf dem kivitendo github Account
        unter dem Repository namens <ulink
      url="https://github.com/kivitendo/kivitendo-ansible">kivitendo-ansible</ulink> verfügbar.
        Das Repo kann lokal mit folgendem git-Befehl "geklont" werden:
    <programlisting>git clone https://github.com/kivitendo/kivitendo-ansible</programlisting>
      In diesem Repository befindet sich auch eine Readme.md, die aktuelle Installationshinweise auf englisch enthält.
      </para>
      <para>
        Um die Installation zu starten,  wechseln Sie dann zunächst in den erstellten Ordner 'kivitendo-ansible' und
        editieren die Datei inventory.

        <programlisting>cd kivitendo-ansible
vim inventory</programlisting>

        Der/die Hosts auf denen Kivitendo installiert werden soll wird dann in
        dieser Datei ('inventory') eingefügt, bspw. die

        <programlisting>192.168.1.121</programlisting>
        oder als Namen:
        <programlisting>kivi.meine-lokale-domaene.de</programlisting>
        Zusätzliche Parameter könnten erforderlich sein, bspw. der Benutzer für den SSH-Login:
        <programlisting>kivi.meine-lokale-domaene.de ansible_user=myuser</programlisting>
      </para>
      <para>
      Danach kann das Playbook mittels:
      <programlisting>ansible-playbook --ask-become main.yml</programlisting>
        ausgeführt werden, je nach Konfiguration wird man noch
        aufgefordert das BECOME password einzutragen, hierbei handelt es
        sich um das Passwort des Benutzers, über den die Installation dann auf dem Ziel-Rechner ausgeführt wird.
      </para>
      <para>
        Nach erfolgreichen Ausführen des Playbooks ist Kivitendo dann über den Browser
        erreichbar unter
        <literal>http://&lt;IP des rechners&gt;/kivitendo-erp/</literal>
      </para>
      <para>
        Nun muss noch eine Datenbank für Benutzer und Mandanten angelegt
        werden. Dies kann über die Weboberfläche getan werden, indem man
        sich mit dem Passwort <literal>admin123</literal> in der
        Administrationsoberfläche anmeldet.
        Weitere Details siehe Abschnitt "<xref
            linkend="Benutzerauthentifizierung-und-Administratorpasswort"/>"
      </para>
    </sect1>
    <sect1 id="Manuelle-Installation-des-Programmpaketes"
           xreflabel="Manuelle Installation des Programmpaketes">
      <title>Manuelle Installation des Programmpaketes</title>

      <para>Der aktuelle Stable-Release, bzw. beta Release wird bei github
      gehostet und kann <ulink
      url="https://github.com/kivitendo/kivitendo-erp/releases">hier</ulink>
      heruntergeladen werden.</para>

      <para>Das aktuelleste kivitendo ERP-Archiv
      (<filename>kivitendo-erp-*.tgz</filename>) wird dann im
      Dokumentenverzeichnis des Webservers (z.B.
      <filename>/var/www/html/</filename>,
      <filename>/srv/www/htdocs</filename> oder
      <filename>/var/www/</filename>) entpackt:</para>

      <programlisting>cd /var/www
tar xvzf kivitendo-erp-*.tgz</programlisting>

      <para>Wechseln Sie in das entpackte Verzeichnis:</para>

      <programlisting>cd kivitendo-erp</programlisting>

      <para>Alternativ können Sie auch einen Alias in der
      Webserverkonfiguration benutzen, um auf das tatsächliche
      Installationsverzeichnis zu verweisen.</para>

      <para>Bei einer Neuinstallation von Version 3.1.0 oder später muß das
      WebDAV Verzeichnis derzeit manuell angelegt werden:</para>

      <programlisting>mkdir webdav</programlisting>

      <para>Die Verzeichnisse <filename>users</filename>,
      <filename>spool</filename> und <filename>webdav</filename> müssen für
      den Benutzer beschreibbar sein, unter dem der Webserver läuft. Die
      restlichen Dateien müssen für diesen Benutzer lesbar sein. Die Benutzer-
      und Gruppennamen sind bei verschiedenen Distributionen unterschiedlich
      (z.B. bei Debian/Ubuntu <constant>www-data</constant>, bei Fedora
      <constant>apache</constant> oder bei openSUSE
      <constant>wwwrun</constant>).</para>

      <para>Der folgende Befehl ändert den Besitzer für die oben genannten
      Verzeichnisse auf einem Debian/Ubuntu-System:</para>

      <programlisting>chown -R www-data users spool webdav</programlisting>

      <para>Weiterhin muss der Webserver-Benutzer in den Verzeichnissen
      <filename>templates</filename> und <filename>users</filename>
      Unterverzeichnisse für jeden neuen Benutzer anlegen dürfen, der in
      kivitendo angelegt wird:</para>

      <programlisting>chown www-data templates users</programlisting>

      <note>
        <para>Wir empfehlen eine Installation mittels des Versionsmanager
        git. Hierfür muss ein git-Client installiert sein. Damit ist man sehr
        viel flexibler für zukünftige Upgrades. Installations-Anleitung (bitte
        die Pfade anpassen) bspw. wie folgt: <programlisting>cd /var/www/
git clone https://github.com/kivitendo/kivitendo-erp.git
cd kivitendo-erp/
git checkout `git tag -l | egrep -ve "(alpha|beta|rc)" | tail -1`</programlisting>
        Erläuterung: Der Befehl wechselt zur letzten Stable-Version (git tag
        -l listet alle Tags auf, das egrep schmeisst alle Einträge mit alpha,
        beta oder rc raus und das tail gibt davon den obersten Treffer
        zurück). Sehr sinnvoll ist es, direkt im Anschluss einen eigenen
        Branch zu erzeugen, um bspw. seine eigenen Druckvorlagen-Anpassungen
        damit zu verwalten. Hierfür reicht ein simples <programlisting>  git checkout -b meine_eigenen_änderungen</programlisting>
        nach dem letzten Kommando (weiterführende Informationen <ulink
        url="http://www-cs-students.stanford.edu/~blynn/gitmagic/index.html">
        Git Magic</ulink>).</para>

        <para>Ein beispielhafter Workflow für Druckvorlagen-Anpassungen von
        3.4.1 nach 3.5: <programlisting>
$ git clone https://github.com/kivitendo/kivitendo-erp.git
$ cd kivitendo-erp/
$ git checkout release-3.4.1                # das ist ein alter release aus dem wir starten ...
$ git checkout -b meine_eigene_änderungen   # unser lokaler branch - unabhängig von allen anderen
$ git add templates/mein_druck              # das sind unsere druckvorlagen inkl. produktbilder
$ git commit -m "juhu tolle änderungen"

[meine_aenderungen 1d89e41] juhu tolle ändernungen
 4 files changed, 380 insertions(+)
 create mode 100644 templates/mein_druck/img/webdav/tesla.png
 create mode 100644 templates/mein_druck/mahnung.tex
 create mode 100644 templates/mein_druck/zahlungserinnerung_zwei.tex
 create mode 100644 templates/mein_druck/zahlungserinnerung_zwei_invoice.tex

# 5 Jahre später ...
# webserver abschalten!

$ git checkout master
$ git pull                                  # oder git fetch und danach ein stable release tag auswählen (s.o.)
$ git checkout meine_eigenen_änderungen
$ git rebase master

Zunächst wird der Branch zurückgespult, um Ihre Änderungen
darauf neu anzuwenden ...
Wende an: juhu tolle änderungen
$ service apache2 restart                   # webserver starten!
</programlisting></para>
      </note>
    </sect1>

    <sect1 id="config.config-file">
      <title>kivitendo-Konfigurationsdatei</title>

      <sect2 id="config.config-file.introduction"
             xreflabel="Einführung in die Konfigurationsdatei">
        <title>Einführung</title>

        <para>In kivitendo gibt es nur noch eine Konfigurationsdatei, die
        benötigt wird: <filename>config/kivitendo.conf</filename> (kurz: "die
        Hauptkonfigurationsdatei"). Diese muss bei der Erstinstallation von
        kivitendo bzw. der Migration von älteren Versionen angelegt
        werden.</para>

        <para>Als Vorlage dient die Datei
        <filename>config/kivitendo.conf.default</filename> (kurz: "die
        Default-Datei"):</para>

        <programlisting>$ cp config/kivitendo.conf.default config/kivitendo.conf</programlisting>

        <para>Die Default-Datei wird immer zuerst eingelesen. Werte, die in
        der Hauptkonfigurationsdatei stehen, überschreiben die Werte aus der
        Default-Datei. Die Hauptkonfigurationsdatei muss also nur die
        Abschnitte und Werte enthalten, die von denen der Default-Datei
        abweichen.</para>

        <note>
          <para>Vor der Umbenennung in kivitendo hieß diese Datei noch
          <filename>config/lx_office.conf</filename>. Aus Gründen der
          Kompatibilität wird diese Datei eingelesen, sofern die Datei
          <filename>config/kivitendo.conf</filename> nicht existiert.</para>
        </note>

        <para>Diese Hauptkonfigurationsdatei ist dann eine
        installationsspezifische Datei, d.h. sie enthält bspw. lokale
        Passwörter und wird auch nicht im Versionsmanagement (git)
        verwaltet.</para>

        <para>Die Konfiguration ist ferner serverabhängig, d.h. für alle
        Mandaten, bzw. Datenbanken gleich.</para>
      </sect2>

      <sect2 id="config.config-file.sections-parameters">
        <title>Abschnitte und Parameter</title>

        <para>Die Konfigurationsdatei besteht aus mehreren Teilen, die
        entsprechend kommentiert sind:</para>

        <itemizedlist>
          <listitem>
            <para><literal>authentication</literal> (siehe Abschnitt "<xref
            linkend="Benutzerauthentifizierung-und-Administratorpasswort"/>"
            in diesem Kapitel)</para>
          </listitem>

          <listitem>
            <para><literal>authentication/database</literal></para>
          </listitem>

          <listitem>
            <para><literal>authentication/ldap</literal></para>
          </listitem>

          <listitem>
            <para><literal>system</literal></para>
          </listitem>

          <listitem>
            <para><literal>paths</literal></para>
          </listitem>

          <listitem>
            <para><literal>mail_delivery</literal> (siehe Abschnitt "<xref
            linkend="config.sending-email.smtp"/>)</para>
          </listitem>

          <listitem>
            <para><literal>imap_client</literal> (siehe Abschnitt "<xref
            linkend="config.imap_client"/>)</para>
          </listitem>

          <listitem>
            <para><literal>sent_emails_in_imap</literal> (siehe Abschnitt "<xref
            linkend="config.sent_emails_in_imap"/>)</para>
          </listitem>

          <listitem>
            <para><literal>applications</literal></para>
          </listitem>

          <listitem>
            <para><literal>environment</literal></para>
          </listitem>

          <listitem>
            <para><literal>print_templates</literal></para>
          </listitem>

          <listitem>
            <para><literal>task_server</literal></para>
          </listitem>

          <listitem>
            <para><literal>periodic_invoices</literal></para>
          </listitem>

          <listitem>
            <para><literal>self_tests</literal></para>
          </listitem>

          <listitem>
            <para><literal>console</literal></para>
          </listitem>

          <listitem>
            <para><literal>testing</literal></para>
          </listitem>

          <listitem>
            <para><literal>testing/database</literal></para>
          </listitem>

          <listitem>
            <para><literal>debug</literal></para>
          </listitem>
        </itemizedlist>

        <para>Die üblicherweise wichtigsten Parameter, die am Anfang
        einzustellen oder zu kontrollieren sind, sind:</para>

        <programlisting>[authentication]
admin_password = geheim

[authentication/database]
host     = localhost
port     = 5432
db       = kivitendo_auth
user     = postgres
password =

[system]
default_manager = german</programlisting>

        <para>Für kivitendo Installationen in der Schweiz sollte hier
        <varname>german</varname> durch <varname>swiss</varname> ersetzt
        werden.</para>

        <para>Die Einstellung <varname>default_manager = swiss</varname>
        bewirkt:</para>

        <itemizedlist>
          <listitem>
            <para>Beim Erstellen einer neuen Datenbank in der kivitendo
            Administration werden automatisch die Standard-Werte für die
            Schweiz voreingestellt: Währung CHF, 5er-Rundung, Schweizer
            KMU-Kontenplan, Sollversteuerung, Aufwandsmethode, Bilanzierung
            (die Werte können aber manuell angepasst werden).</para>
          </listitem>

          <listitem>
            <para>Einstellen der Standardkonten für Rundungserträge und
            -aufwendungen (unter Mandantenkonfiguration → Standardkonten
            veränderbar)</para>
          </listitem>

          <listitem>
            <para>das verwendete Zahlenformat wird auf
            <varname>1'000.00</varname> eingestellt (unter Programm →
            Benutzereinstellungen veränderbar)</para>
          </listitem>

          <listitem>
            <para>DATEV-Automatik und UStVA werden nicht angezeigt,
            Erfolgsrechnung ersetzt GUV ( unter Mandantenkonfiguration →
            Features veränderbar)</para>
          </listitem>
        </itemizedlist>

        <para>Nutzt man wiederkehrende Rechnungen, kann man unter
        <varname>[periodic_invoices]</varname> den Login eines Benutzers
        angeben, der nach Erstellung der Rechnungen eine entsprechende E-Mail
        mit Informationen über die erstellten Rechnungen bekommt.</para>

        <para>kivitendo bringt eine eigene Komponente zur zeitgesteuerten
        Ausführung bestimmter Aufgaben mit, den <link
        linkend="config.task-server">Task-Server</link>. Er wird u.a. für
        Features wie die <link
        linkend="features.periodic-invoices">wiederkehrenden Rechnungen</link>
        benötigt, erledigt aber auch andere erforderliche Aufgaben und muss
        daher in Betrieb genommen werden. Seine Einrichtung wird im Abschnitt
        <link linkend="config.task-server">Task-Server</link> genauer
        beschrieben.</para>

        <para>Für Entwickler finden sich unter <varname>[debug]</varname>
        wichtige Funktionen, um die Fehlersuche zu erleichtern.</para>
      </sect2>

      <sect2 id="config.config-file.prior-versions">
        <title>Versionen vor 2.6.3</title>

        <para>In älteren kivitendo Versionen gab es im Verzeichnis
        <filename>config</filename> die Dateien
        <filename>authentication.pl</filename> und
        <filename>lx-erp.conf</filename>, die jeweils Perl-Dateien waren. Es
        gab auch die Möglichkeit, eine lokale Version der Konfigurationsdatei
        zu erstellen (<filename>lx-erp-local.conf</filename>). Dies ist ab
        2.6.3 nicht mehr möglich, aber auch nicht mehr nötig.</para>

        <para>Beim Update von einer kivitendo-Version vor 2.6.3 auf 2.6.3 oder
        jünger müssen die Einstellungen aus den alten Konfigurationsdateien
        manuell übertragen und die alten Konfigurationsdateien anschließend
        gelöscht oder verschoben werden. Ansonsten zeigt kivitendo eine
        entsprechende Fehlermeldung an.</para>
      </sect2>
    </sect1>

    <sect1 id="Anpassung-der-PostgreSQL-Konfiguration">
      <title>Anpassung der PostgreSQL-Konfiguration</title>

      <para>PostgreSQL muss auf verschiedene Weisen angepasst werden.</para>
      <para>Dies variert je nach eingesetzter Distribution, da distributionsabhängig unterschiedliche Strategien beim Upgrade der Postgres Version eingesetzt werden.
            Als Hinweis einige Links zu den drei Distribution (Stand Dezember 2018):</para>
          <itemizedlist>
            <listitem>
              <para><ulink url="https://fedoraproject.org/wiki/PostgreSQL">Fedora (Postgres-Installation unter Fedora)</ulink></para>
            </listitem>
            <listitem>
              <para><ulink url="https://help.ubuntu.com/lts/serverguide/postgresql.html">Ubuntu (Infos für Postgres für die aktuelle LTS Version)</ulink></para>
            </listitem>
            <listitem>
              <para><ulink url="https://de.opensuse.org/PostgreSQL">OpenSuSE (aktuell nur bis Version OpenSuSE 13 verifiziert)</ulink></para>
            </listitem>
          </itemizedlist>
      <sect2 id="Zeichensätze-die-Verwendung-von-UTF-8">
        <title>Zeichensätze/die Verwendung von Unicode/UTF-8</title>

        <para>kivitendo setzt zwingend voraus, dass die Datenbank
        Unicode/UTF-8 als Encoding einsetzt. Bei aktuellen
        Serverinstallationen braucht man hier meist nicht einzugreifen.</para>

        <para>Das Encoding des Datenbankservers kann überprüft werden. Ist das
        Encoding der Datenbank "template1" "Unicode" bzw. "UTF-8", so braucht
        man nichts weiteres diesbezüglich unternehmen. Zum Testen:</para>

        <programlisting>su postgres
echo '\l' | psql
exit </programlisting>

        <para>Andernfalls ist es notwendig, einen neuen Datenbankcluster mit
        Unicode-Encoding anzulegen und diesen zu verwenden. Unter Debian und
        Ubuntu kann dies z.B. für PostgreSQL 9.3 mit dem folgenden Befehl
        getan werden:</para>

        <programlisting>pg_createcluster --locale=de_DE.UTF-8 --encoding=UTF-8 9.3 clustername</programlisting>

        <para>Die Datenbankversionsnummer muss an die tatsächlich verwendete
        Versionsnummer angepasst werden.</para>

        <para>Unter anderen Distributionen gibt es ähnliche Methoden.</para>

        <para>Das Encoding einer Datenbank kann in <command>psql</command> mit
        <literal>\l</literal> geprüft werden.</para>
      </sect2>

      <sect2 id="Änderungen-an-Konfigurationsdateien">
        <title>Änderungen an Konfigurationsdateien</title>

        <para>In der Datei <filename>postgresql.conf</filename>, die je nach
        Distribution in verschiedenen Verzeichnissen liegen kann (z.B.
        <filename>/var/lib/pgsql/data/</filename> oder
        <filename>/etc/postgresql/</filename>), muss sichergestellt werden,
        dass TCP/IP-Verbindungen aktiviert sind. Das Verhalten wird über den
        Parameter <varname>listen_address</varname> gesteuert. Laufen
        PostgreSQL und kivitendo auf demselben Rechner, so kann dort der Wert
        <literal>localhost</literal> verwendet werden. Andernfalls müssen
        Datenbankverbindungen auch von anderen Rechnern aus zugelassen werden,
        was mit dem Wert <literal>*</literal> geschieht.</para>

        <para>In der Datei <filename>pg_hba.conf</filename>, die im gleichen
        Verzeichnis wie die <filename>postgresql.conf</filename> zu finden
        sein sollte, müssen die Berechtigungen für den Zugriff geändert
        werden. Hier gibt es mehrere Möglichkeiten. Sinnvoll ist es nur die
        nötigen Verbindungen immer zuzulassen, für eine lokal laufende
        Datenbank zum Beispiel:</para>

        <programlisting>local all kivitendo password
host all kivitendo 127.0.0.1 255.255.255.255 password</programlisting>
      </sect2>

      <sect2 id="Erweiterung-für-servergespeicherte-Prozeduren">
        <title>Erweiterung für servergespeicherte Prozeduren</title>

        <para>In der Datenbank <literal>template1</literal> muss die
        Unterstützung für servergespeicherte Prozeduren eingerichet werden.
        Melden Sie sich dafür als Benutzer “postgres” an der Datenbank an:
        <programlisting>su - postgres
psql template1</programlisting> führen Sie die folgenden Kommandos aus:</para>

        <programlisting>CREATE EXTENSION IF NOT EXISTS plpgsql;
\q</programlisting>

        <note>
          <para><literal>CREATE EXTENSION</literal> ist seit Version 9.1 die
          bevorzugte Syntax um die Sprache <literal>plpgsql</literal>
          anzulegen. In diesen Versionen ist die Extension meist auch schon
          vorhanden. Sollten Sie eine ältere Version von Postgres haben,
          benutzen Sie stattdessen den folgenden Befehl.</para>

          <programlisting>CREATE LANGUAGE 'plpgsql';
\q</programlisting>
        </note>
      </sect2>

      <sect2 id="Erweiterung-für-trigram">
        <title>Erweiterung für Trigram Prozeduren</title>

        <para>Ab Version 3.5.1 wird die Trigram-Index-Erweiterung benötigt.
        Diese wird mit dem SQL-Updatescript
        sql/Pg-upgrade2/trigram_extension.sql und Datenbank-Super-Benutzer
        Rechten automatisch installiert. Dazu braucht der
        DatenbankSuperbenutzer "postgres" ein Passwort.</para>

        <programlisting>su - postgres
psql
\password postgres

Eingabe Passwort
\q</programlisting>

        <para>Benutzername Postgres und Passwort können jetzt beim Anlegen
        einer Datenbank bzw. bei Updatescripten, die SuperuserRechte
        benötigen, eingegeben werden.</para>

        <note>
          <para><literal>pg_trgm</literal> ist je nach Distribution nicht im
          Standard-Paket von Postgres enthalten. Ein <programlisting>select * from pg_available_extensions where name ='pg_trgm';</programlisting>
          in template1 sollte entsprechend erfolgreich sein. Andernfalls muss
          das Paket nachinstalliert werden, bspw. bei debian/ubuntu
          <programlisting>apt install postgresql-contrib</programlisting></para>
        </note>
      </sect2>

      <sect2 id="Datenbankbenutzer-anlegen">
        <title>Datenbankbenutzer anlegen</title>

        <para>Wenn Sie nicht den Datenbanksuperuser “postgres” zum Zugriff
        benutzen wollen, so sollten Sie bei PostgreSQL einen neuen Benutzer
        anlegen. Ein Beispiel, wie Sie einen neuen Benutzer anlegen
        können:</para>

        <para>Die Frage, ob der neue User Superuser sein soll, können Sie mit
        nein beantworten, genauso ist die Berechtigung neue User (Roles) zu
        generieren nicht nötig.</para>

        <programlisting>su - postgres
createuser -d -P kivitendo
exit</programlisting>

        <para>Wenn Sie später einen Datenbankzugriff konfigurieren, verändern
        Sie den evtl. voreingestellten Benutzer “postgres” auf “kivitendo”
        bzw. den hier gewählten Benutzernamen.</para>
      </sect2>
    </sect1>

    <sect1 id="Apache-Konfiguration">
      <title>Webserver-Konfiguration</title>

      <sect2>
        <title>Grundkonfiguration mittels CGI</title>

        <note>
          <para>Für einen deutlichen Performanceschub sorgt die Ausführung
          mittels FastCGI/FCGI. Die Einrichtung wird ausführlich im Abschnitt
          <xref linkend="Apache-Konfiguration.FCGI"/> beschrieben.</para>
        </note>

        <para>Der Zugriff auf das Programmverzeichnis muss in der Apache
        Webserverkonfigurationsdatei <literal>httpd.conf</literal> eingestellt
        werden. Fügen Sie den folgenden Abschnitt dieser Datei oder einer
        anderen Datei hinzu, die beim Starten des Webservers eingelesen
        wird:</para>

        <programlisting>AliasMatch ^/kivitendo-erp/[^/]+\.pl /var/www/kivitendo-erp/dispatcher.pl
Alias /kivitendo-erp/ /var/www/kivitendo-erp/

&lt;Directory /var/www/kivitendo-erp&gt;
 AddHandler cgi-script .pl
 Options ExecCGI Includes FollowSymlinks
&lt;/Directory&gt;

&lt;Directory /var/www/kivitendo-erp/users&gt;
 Require all granted
&lt;/Directory&gt;</programlisting>

        <para>Ersetzen Sie dabei die Pfade durch diejenigen, in die Sie vorher
        das kivitendo-Archiv entpacket haben.</para>

        <note>
          <para>Vor den einzelnen Optionen muss bei einigen Distributionen ein
          Plus ‘<literal>+</literal>’ gesetzt werden.</para>

          <para>Bei einigen Distribution (Ubuntu ab 14.04, Debian ab 8.2) muss
          noch explizit das cgi-Modul mittels <programlisting>a2enmod cgi</programlisting>
          aktiviert werden.</para>
        </note>

        <para>Auf einigen Webservern werden manchmal die Grafiken und
        Style-Sheets nicht ausgeliefert. In solchen Fällen hat es oft
        geholfen, die folgende Option in die Konfiguration aufzunehmen:</para>

        <programlisting>EnableSendfile Off</programlisting>
      </sect2>

      <sect2 id="Apache-Konfiguration.FCGI"
             xreflabel="Konfiguration für FastCGI/FCGI">
        <title>Konfiguration für FastCGI/FCGI</title>

        <sect3 id="Apache-Konfiguration.FCGI.WasIstEs">
          <title>Was ist FastCGI?</title>

          <para>Direkt aus <ulink
          url="http://de.wikipedia.org/wiki/FastCGI">Wikipedia</ulink>
          kopiert:</para>

          <para><citation> FastCGI ist ein Standard für die Einbindung
          externer Software zur Generierung dynamischer Webseiten in einem
          Webserver. FastCGI ist vergleichbar zum Common Gateway Interface
          (CGI), wurde jedoch entwickelt, um dessen Performance-Probleme zu
          umgehen. </citation></para>
        </sect3>

        <sect3 id="Apache-Konfiguration.FCGI.Warum">
          <title>Warum FastCGI?</title>

          <para>Perl Programme (wie kivitendo eines ist) werden nicht statisch
          kompiliert. Stattdessen werden die Quelldateien bei jedem Start
          übersetzt, was bei kurzen Laufzeiten einen Großteil der Laufzeit
          ausmacht. Während SQL Ledger einen Großteil der Funktionalität in
          einzelne Module kapselt, um immer nur einen kleinen Teil laden zu
          müssen, ist die Funktionalität von kivitendo soweit gewachsen, dass
          immer mehr Module auf den Rest des Programms zugreifen. Zusätzlich
          benutzen wir umfangreiche Bibliotheken um Funktionaltät nicht selber
          entwickeln zu müssen, die zusätzliche Ladezeit kosten. All dies
          führt dazu dass ein kivitendo Aufruf der Kernmasken mittlerweile
          deutlich länger dauert als früher, und dass davon 90% für das Laden
          der Module verwendet wird.</para>

          <para>Mit FastCGI werden nun die Module einmal geladen, und danach
          wird nur die eigentliche Programmlogik ausgeführt.</para>
        </sect3>

        <sect3 id="Apache-Konfiguration.FCGI.WebserverUndPlugin">
          <title>Getestete Kombinationen aus Webservern und Plugin</title>

          <para>Folgende Kombinationen sind getestet:</para>

          <itemizedlist>
            <listitem>
              <para>Apache 2.4.7 (Ubuntu 14.04.2 LTS) und mod_fcgid.</para>
            </listitem>
            <listitem>
              <para>Apache 2.4.18 (Ubuntu 16.04 LTS) und mod_fcgid</para>
            </listitem>
            <listitem>
              <para>Apache 2.4.29 (Ubuntu 18.04 LTS) und mod_fcgid</para>
            </listitem>
             <listitem>
              <para>Apache 2.4.41 (Ubuntu 20.04 LTS) und mod_fcgid</para>
            </listitem>

          </itemizedlist>

          <para>Als Perl Backend wird das Modul <filename>FCGI.pm</filename>
          verwendet.</para>

          <warning>
            <para>FCGI-Versionen ab 0.69 und bis zu 0.71 inklusive sind extrem
            strict in der Behandlung von Unicode, und verweigern bestimmte
            Eingaben von kivitendo. Falls es Probleme mit Umlauten in Ihrer
            Installation gibt, muss zwingend Version 0.68 oder aber Version
            0.72 und neuer eingesetzt werden.</para>

            <para>Mit <ulink url="http://www.cpan.org">CPAN</ulink> lässt sie
            sich die Vorgängerversion wie folgt installieren:</para>

            <programlisting>force install M/MS/MSTROUT/FCGI-0.68.tar.gz</programlisting>
          </warning>
        </sect3>

        <sect3 id="Apache-Konfiguration.FCGI.Konfiguration">
          <title>Konfiguration des Webservers</title>

          <para>Bevor Sie versuchen, eine kivitendo Installation unter FCGI
          laufen zu lassen, empfiehlt es sich die Installation ersteinmal
          unter CGI aufzusetzen. FCGI macht es nicht einfach Fehler zu
          debuggen die beim ersten aufsetzen auftreten können. Sollte die
          Installation schon funktionieren, lesen Sie weiter.</para>

          <para>Zuerst muss das FastCGI-Modul aktiviert werden. Dies kann
          unter Debian/Ubuntu z.B. mit folgendem Befehl geschehen:</para>

          <programlisting>a2enmod fcgid</programlisting>

          <para>Die Konfiguration für die Verwendung von kivitendo mit FastCGI
          erfolgt durch Anpassung der vorhandenen <function>Alias</function>-
          und <function>Directory</function>-Direktiven. Dabei wird zwischen
          dem Installationspfad von kivitendo im Dateisystem
          ("<filename>/path/to/kivitendo-erp</filename>") und der URL
          unterschieden, unter der kivitendo im Webbrowser erreichbar ist
          ("<filename>/url/for/kivitendo-erp</filename>").</para>

          <para>Folgender Konfigurationsschnipsel funktioniert mit
          mod_fastcgi:</para>

          <programlisting>AliasMatch ^/url/for/kivitendo-erp/[^/]+\.pl /path/to/kivitendo-erp/dispatcher.fcgi
Alias       /url/for/kivitendo-erp/          /path/to/kivitendo-erp/

&lt;Directory /path/to/kivitendo-erp&gt;
  AllowOverride All
  Options ExecCGI Includes FollowSymlinks
  Require all granted
&lt;/Directory&gt;

&lt;DirectoryMatch /path/to/kivitendo-erp/users&gt;
Require all denied
&lt;/DirectoryMatch&gt;</programlisting>

          <warning>
            <para>Wer einen älteren Apache als Version 2.4 im Einsatz hat,
            muss entsprechend die Syntax der Directorydirektiven verändert.
            Statt</para>

            <programlisting>Require all granted</programlisting>

            <para>muß man Folgendes einstellen:</para>

            <programlisting>
  Order Allow,Deny
  Allow from All </programlisting>

            <para>und statt</para>

            <programlisting>Require all denied</programlisting>

            <para>muss stehen:</para>

            <programlisting>
  Order Deny,Allow
  Deny from All </programlisting>
          </warning>

          <para>Seit mod_fcgid-Version 2.3.6 gelten sehr kleine Grenzen für
          die maximale Größe eines Requests. Diese sollte wie folgt
          hochgesetzt werden:</para>

          <programlisting>FcgidMaxRequestLen 10485760</programlisting>

          <para>Das Ganze sollte dann so aussehen:</para>

          <programlisting>AddHandler fcgid-script .fpl
AliasMatch ^/url/for/kivitendo-erp/[^/]+\.pl /path/to/kivitendo-erp/dispatcher.fpl
Alias       /url/for/kivitendo-erp/          /path/to/kivitendo-erp/
FcgidMaxRequestLen 10485760

&lt;Directory /path/to/kivitendo-erp&gt;
  AllowOverride All
  Options ExecCGI Includes FollowSymlinks
  Require all granted
&lt;/Directory&gt;

&lt;DirectoryMatch /path/to/kivitendo-erp/users&gt;
Require all denied
&lt;/DirectoryMatch&gt;</programlisting>

          <para>Hierdurch wird nur ein zentraler Dispatcher gestartet. Alle
          Zugriffe auf die einzelnen Scripte werden auf diesen umgeleitet.
          Dadurch, dass zur Laufzeit öfter mal Scripte neu geladen werden,
          gibt es hier kleine Performance-Einbußen.</para>

          <para>Es ist möglich, die gleiche kivitendo Version parallel unter
          CGI und FastCGI zu betreiben. Dafür bleiben die Directorydirektiven
          wie oben beschrieben, die URLs werden aber umgeleitet:</para>

          <programlisting># Zugriff über CGI
Alias       /url/for/kivitendo-erp                /path/to/kivitendo-erp

# Zugriff mit mod_fcgid:
AliasMatch ^/url/for/kivitendo-erp-fcgid/[^/]+\.pl /path/to/kivitendo-erp/dispatcher.fpl
Alias       /url/for/kivitendo-erp-fcgid/          /path/to/kivitendo-erp/</programlisting>

          <para>Dann ist unter <filename>/url/for/kivitendo-erp/</filename>
          die normale Version erreichbar, und unter
          <constant>/url/for/kivitendo-erp-fcgid/</constant> die
          FastCGI-Version.</para>
        </sect3>
      </sect2>

      <sect2>
       <title>Authentifizierung mittels HTTP Basic Authentication</title>

       <para>
        Kivitendo unterstützt, dass Benutzerauthentifizierung über den Webserver mittels des »Basic«-HTTP-Authentifizierungs-Schema erfolgt
        (siehe <ulink url="https://tools.ietf.org/html/rfc7617">RFC 7617</ulink>). Dazu ist es aber nötig, dass der dabei vom Client
        mitgeschickte Header <constant>Authorization</constant> vom Webserver an Kivitendo über die Umgebungsvariable
        <constant>HTTP_AUTHORIZATION</constant> weitergegeben wird, was standardmäßig nicht der Fall ist. Für Apache kann dies über die
        folgende Konfigurationsoption aktiviert werden:
       </para>

       <programlisting>SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1</programlisting>
      </sect2>
      <sect2>
       <title>Aktivierung von mod_rewrite/directory_match für git basierte Installationen</title>

       <para>
        Aufgrund von aktuellen (Mitte 2020) Sicherheitswarnungen für git basierte Webanwendungen ist die mitausgelieferte .htaccess
        restriktiver geworden und verhindert somit das Auslesen von git basierten Daten.
        Für debian/ubuntu muss das Modul mod_rewrite einmalig so aktiviert werden:
        <programlisting>a2enmod rewrite</programlisting>
        Alternativ und für Installationen ohne Apache ist folgender Artikel interessant:
        <ulink url="https://www.cyberscan.io/blog/git-luecke">git-lücke</ulink>.
        Anstelle des dort beschriebenen DirectoryMatch für Apache2 würden wir etwas weitergehend auch noch das Verzeichnis config miteinbeziehen
        sowie ferner auch die Möglichkeit nicht ausschließen, dass es in Unterverzeichnissen auch noch .git Repositories geben kann.
        Die Empfehlung für Apache 2.4 wäre damit:
        <programlisting>
        &lt;DirectoryMatch "/(\.git|config)/"&gt;
          Require all denied
        &lt;/DirectoryMatch&gt;</programlisting>
       </para>
      </sect2>


      <sect2>
        <title>Weitergehende Konfiguration</title>

        <para>Für einen deutlichen Sicherheitsmehrwert sorgt die Ausführung
        von kivitendo nur über https-verschlüsselten Verbindungen, sowie
        weiteren Zusatzmassnahmen, wie beispielsweise Basic Authenticate. Die
        Konfigurationsmöglichkeiten sprengen allerdings den Rahmen dieser
        Anleitung, hier ein Hinweis auf einen entsprechenden <ulink
        url="http://redmine.kivitendo-premium.de/boards/1/topics/142">Foreneintrag
        (Stand Sept. 2015)</ulink> und einen aktuellen (Stand Mai 2017) <ulink
        url="https://mozilla.github.io/server-side-tls/ssl-config-generator/">
        SSL-Konfigurations-Generator</ulink>.</para>
      </sect2>
      <sect2>
        <title>Aktivierung von Apache2 modsecurity</title>

        <para>Aufgrund des OpenSource Charakters ist kivitendo nicht "out of the box" sicher.
  Organisatorisch empfehlen wir hier die enge Zusammenarbeit mit einem kivitendo Partner der auch in der
Lage ist weiterführende Fragen in Bezug auf Datenschutz und Datensicherheit zu beantworten.
Unabhängig davon empfehlen wir im Webserver Bereich die Aktivierung und Konfiguration des Moduls modsecurity für den Apache2, damit
XSS und SQL-Injections verhindert werden.</para>
<para> Als Idee hierfür sei dieser Blog-Eintrag genannt:
<ulink url="https://doxsec.wordpress.com/2017/06/11/using-modsecurity-web-application-firewall-to-prevent-sql-injection-and-xss-using-blocking-rules/">
        Test Apache2 modsecurity for SQL Injection</ulink>.</para>
      </sect2>

    </sect1>

    <sect1 id="config.task-server">
      <title>Der Task-Server</title>

      <para>Der Task-Server ist ein Prozess, der im Hintergrund läuft, in
      regelmäßigen Abständen nach abzuarbeitenden Aufgaben sucht und diese zu
      festgelegten Zeitpunkten abarbeitet (ähnlich wie Cron). Dieser Prozess
      wird u.a. für die Erzeugung der wiederkehrenden Rechnungen und weitere
      essenzielle Aufgaben benutzt.</para>

      <para>Der Task-Server muss einmalig global in der Konfigurationsdatei
      konfiguriert werden. Danach wird er für jeden Mandanten, für den er
      laufen soll, in der Adminsitrationsmaske eingeschaltet.</para>

      <para>Beachten Sie, dass der Task-Server in den Boot-Vorgang Ihres
      Servers integriert werden muss, damit er automatisch gestartet wird.
      Dies kann kivitendo nicht für Sie erledigen.</para>

      <para>Da der Task-Server als Perlscript läuft, wird Arbeitsspeicher, der
      einmal benötigt wurde, nicht mehr an das Betriebssystem zurückgegeben,
      solange der Task-Server läuft. Dies kann dazu führen, dass ein länger
      laufender Task-Server mit der Zeit immer mehr Arbeitsspeicher für sich
      beansprucht. Es ist deshalb sinnvoll, dass der Task-Server in
      regelmässigen Abständen neu gestartet wird. Allerdings berücksichtigt der
      Task-Server ein Memory-Limit, wenn dieses in der Konfigurationsdatei
      angegeben ist. Bei Überschreiten dieses Limits beendet sich der
      Task-Server. Sofern der Task-Server als systemd-Service mit dem
      mitgelieferten Skript eingerichtet wurde, startet dieser danach
      automatisch erneut.</para>

      <sect2 id="Konfiguration-des-Task-Servers">
        <title>Verfügbare und notwendige Konfigurationsoptionen</title>

        <para>Die Konfiguration erfolgt über den Abschnitt
        <literal>[task_server]</literal> in der Datei
        <filename>config/kivitendo.conf</filename>. Die dort verfügbaren
        Optionen sind:</para>

        <variablelist>
          <varlistentry>
            <term><varname>run_as</varname></term>

            <listitem>
              <para>Wird der Server vom Systembenutzer <literal>root</literal>
              gestartet, so wechselt er auf den mit <literal>run_as</literal>
              angegebenen Systembenutzer. Der Systembenutzer muss dieselben
              Lese- und Schreibrechte haben, wie auch der Webserverbenutzer
              (siehe see <xref
              linkend="Manuelle-Installation-des-Programmpaketes"/>). Daher
              ist es erforderlich, hier denselben Systembenutzer einzutragen,
              unter dem auch der Webserver läuft.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>debug</varname></term>

            <listitem>
              <para>Schaltet Debug-Informationen an und aus.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect2>

      <sect2 id="Konfiguration-der-Mandanten-fuer-den-Task-Servers">
        <title>Konfiguration der Mandanten für den Task-Server</title>

        <para>Ist der Task-Server grundlegend konfiguriert, so muss
        anschließend jeder Mandant, für den der Task-Server laufen soll,
        einmalig konfiguriert werden. Dazu kann in der Maske zum Bearbeiten
        von Mandanten im Administrationsbereich eine kivitendo-Benutzerkennung
        ausgewählt werden, unter der der Task-Server seine Arbeit
        verrichtet.</para>

        <para>Ist in dieser Einstellung keine Benutzerkennung ausgewählt, so
        wird der Task-Server für diesen Mandanten keine Aufgaben
        ausführen.</para>
      </sect2>

      <sect2 id="Einbinden-in-den-Boot-Prozess">
        <title>Automatisches Starten des Task-Servers beim Booten</title>

        <para>Der Task-Server verhält sich von seinen Optionen her wie ein
        reguläres SystemV-kompatibles Boot-Script. Außerdem wechselt er beim
        Starten automatisch in das kivitendo-Installationsverzeichnis.</para>

        <para>Deshalb ist es möglich, ihn durch Setzen eines symbolischen
        Links aus einem der Runlevel-Verzeichnisse heraus in den Boot-Prozess
        einzubinden. Da das bei neueren Linux-Distributionen aber nicht
        zwangsläufig funktioniert, werden auch Start-Scripte mitgeliefert, die
        anstelle eines symbolischen Links verwendet werden können.</para>

        <sect3>
          <title>SystemV-basierende Systeme (z.B. ältere Debian, ältere
          openSUSE, ältere Fedora)</title>

          <para>Kopieren Sie die Datei
          <filename>scripts/boot/system-v/kivitendo-task-server</filename>
          nach <filename>/etc/init.d/kivitendo-task-server</filename>. Passen
          Sie in der kopierten Datei den Pfad zum Task-Server an (Zeile
          <literal>DAEMON=....</literal>). Binden Sie das Script in den
          Boot-Prozess ein. Dies ist distributionsabhängig:</para>

          <itemizedlist>
            <listitem>
              <para>Debian-basierende Systeme:</para>

              <programlisting>update-rc.d kivitendo-task-server defaults
insserv kivitendo-task-server</programlisting>
            </listitem>

            <listitem>
              <para>Ältere openSUSE und ältere Fedora:</para>

              <programlisting>chkconfig --add kivitendo-task-server</programlisting>
            </listitem>
          </itemizedlist>

          <para>Danach kann der Task-Server mit dem folgenden Befehl gestartet
          werden:</para>

          <programlisting>/etc/init.d/kivitendo-task-server start</programlisting>
        </sect3>

        <sect3>
          <title>Upstart-basierende Systeme (z.B. Ubuntu bis 14.04)</title>

          <para>Kopieren Sie die Datei
          <filename>scripts/boot/upstart/kivitendo-task-server.conf</filename>
          nach <filename>/etc/init/kivitendo-task-server.conf</filename>.
          Passen Sie in der kopierten Datei den Pfad zum Task-Server an (Zeile
          <literal>exec ....</literal>).</para>

          <para>Danach kann der Task-Server mit dem folgenden Befehl gestartet
          werden:</para>

          <programlisting>service kivitendo-task-server start</programlisting>
        </sect3>

        <sect3>
          <title>systemd-basierende Systeme (z.B. neure openSUSE, neuere
          Fedora, neuere Ubuntu und neuere Debians)</title>

          <para>Kopieren Sie die Datei
          <filename>scripts/boot/systemd/kivitendo-task-server.service</filename>
          nach <filename>/etc/systemd/system/</filename>. Passen Sie in der
          kopierten Datei den Pfad zum Task-Server an (Zeilen
          <literal>ExecStart=....</literal> und
          <literal>ExecStop=...</literal>).</para>

          <para>Machen Sie anschließend das Script systemd bekannt, und binden
          Sie es in den Boot-Prozess ein. Dazu führen Sie die folgenden Befehl
          aus:</para>

          <programlisting>systemctl daemon-reload
systemctl enable kivitendo-task-server.service</programlisting>

          <para>Wenn Sie den Task-Server jetzt sofort starten möchten, anstatt
          den Server neu zu starten, so können Sie das mit dem folgenden
          Befehl tun:</para>

          <programlisting>systemctl start kivitendo-task-server.service</programlisting>

          <para>Ein so eingerichteter Task-Server startet nach Beendigung
          automatisch erneut. Das betrifft eine Beendigung über die Oberfläche,
          eine Beendingung über die Prozesskontrolle und eine Beendigung bei
          Überschreiten des Memory-Limits. Soll der Task-Server nicht erneut
          starten, so können Sie ihn mit folgendem Befehl stoppen:</para>

          <programlisting>systemctl stop kivitendo-task-server.service</programlisting>

        </sect3>
      </sect2>

      <sect2 id="Prozesskontrolle">
        <title>Wie der Task-Server gestartet und beendet wird</title>

        <para>Der Task-Server wird wie folgt kontrolliert:</para>

        <programlisting>./scripts/task_server.pl Befehl</programlisting>

        <para><literal>Befehl</literal> ist dabei eine der folgenden
        Optionen:</para>

        <itemizedlist>
          <listitem>
            <para><literal>start</literal> startet eine neue Instanz des
            Task-Servers. Die Prozess-ID wird innerhalb des
            <filename>users</filename>-Verzeichnisses abgelegt.</para>
          </listitem>

          <listitem>
            <para><literal>stop</literal> beendet einen laufenden
            Task-Server.</para>
          </listitem>

          <listitem>
            <para><literal>restart</literal> beendet und startet ihn
            neu.</para>
          </listitem>

          <listitem>
            <para><literal>status</literal> berichtet, ob der Task-Server
            läuft.</para>
          </listitem>
        </itemizedlist>

        <para>Der Task-Server wechselt beim Starten automatisch in das
        kivitendo-Installationsverzeichnis.</para>

        <para>Dieselben Optionen können auch für die SystemV-basierenden
        Runlevel-Scripte benutzt werden (siehe oben).</para>

        <para>Wurde der Task-Server als systemd-Service eingerichtet (s.o.),
        so startet dieser nach Beendigung automatisch erneut.</para>

      </sect2>
      <sect2 id="Tasks-konfigurieren" xreflabel="Tasks-konfigurieren">
        <title>Exemplarische Konfiguration eines Hintergrund-Jobs, der die Jahreszahl in allen Nummernkreisen zum Jahreswechsel erhöht</title>

        <para>Hintergrund-Jobs werden über System -> Hintergrund-Jobs und Task-Server -> Aktuelle Hintergrund-Jobs anzeigen -> Aktions-Knopf 'erfassen' angelegt. </para>
        <para>Nachdem wir über das Menü dort angelangt sind, legen wir unseren exemplarischen Hintergrund-Jobs "Erhöhung der Nummernkreise" mit folgenden Werten an:</para>
        <itemizedlist>
          <listitem>
            <para><literal>Aktiv:</literal> Hier ein 'Ja' auswählen</para>
          </listitem>
          <listitem>
            <para><literal>Ausführungsart:</literal> 'wiederholte Ausführung' auswählen</para>
          </listitem>
          <listitem>
            <para><literal>Paketname:</literal> 'SetNumberRange' auswählen</para>
          </listitem>
          <listitem>
            <para><literal>Ausführungszeitplan:</literal> Hier entsprechend Werte wie in der crontab eingeben.</para><para>Syntax:</para>
<programlisting>* * * * *
┬ ┬ ┬ ┬ ┬
│ │ │ │ │
│ │ │ │ └──── Wochentag (0-7, Sonntag ist 0 oder 7)
│ │ │ └────── Monat (1-12)
│ │ └──────── Tag (1-31)
│ └────────── Stunde (0-23)
└──────────── Minute (0-59)  </programlisting>
            <para>Die Sterne können folgende Werte haben:</para>
            <programlisting>
1 2 3 4 5

1 = Minute (0-59)
2 = Stunde (0-23)
3 = Tag (0-31)
4 = Monat (1-12)
5 = Wochentag (0-7, Sonntag ist 0 oder 7)
</programlisting>
<para>Um die Ausführung auf eine Minute vor Sylvester zu setzen, müssen die folgenden Werte eingetragen werden:</para>
<programlisting>59 23 31 12 *</programlisting>
          </listitem>
          <listitem>
            <para><literal>Daten:</literal>In diesem Feld können optionale Parameter für den Hintergrund im JSON-Format gesetzt werden. Der Hintergrund-Job <literal>SetNumberRange</literal> akzeptiert zwei Variable nämlich <literal>digit_year</literal> sowieso <literal>multiplier</literal>.</para><para> <literal>digit_year</literal> kann zwei Werte haben entweder 2 oder 4, darüber wird gesteuert ob die Jahreszahl zwei oder vierstellig kodiert wird (für 2019, dann entweder 19 oder 2019). Der Standardwert ist vierstellig.</para><para> <literal>multiplier</literal> ist ein Vielfaches von 10, darüber wird die erste Nummer im Nummernkreis (die Anzahl der Stellen) wie folgt bestimmt:</para>
<programlisting>
multiplier     Nummernkreis 2020
10        ->   20200
100       ->   202000
1000      ->   2020000
</programlisting>
<para>Wir gehen jetzt beispielhaft von einer letzten Rechnungsnummer von RE2019456 aus. Demnach sollte ab Januar 2020 die erste Nummer RE2020001 sein. Da der Task auch Präfixe berücksichtigt, kann dies mit folgenden JSON-kodierten Werten umgesetzt werden:</para>
<para><literal>Daten:</literal></para><programlisting>multiplier: 100
digits_year: 4</programlisting>
          </listitem>
        </itemizedlist>
     </sect2>
    </sect1>
    <sect1 id="Benutzerauthentifizierung-und-Administratorpasswort">
      <title>Benutzerauthentifizierung und Administratorpasswort</title>

      <para>Informationen über die Einrichtung der Benutzerauthentifizierung,
      über die Verwaltung von Gruppen und weitere Einstellungen</para>

      <sect2 id="Grundlagen-zur-Benutzerauthentifizierung">
        <title>Grundlagen zur Benutzerauthentifizierung</title>

        <para>kivitendo verwaltet die Benutzerinformationen in einer
        Datenbank, die im folgenden “Authentifizierungsdatenbank” genannt
        wird. Für jeden Benutzer kann dort eine eigene Datenbank für die
        eigentlichen Finanzdaten hinterlegt sein. Diese beiden Datenbanken
        können, müssen aber nicht unterschiedlich sein.</para>

        <para>Im einfachsten Fall gibt es für kivitendo nur eine einzige
        Datenbank, in der sowohl die Benutzerinformationen als auch die Daten
        abgelegt werden.</para>

        <para>Zusätzlich ermöglicht es kivitendo, dass die Benutzerpasswörter gegen die Authentifizierungsdatenbank oder gegen einen oder
        mehrere LDAP-Server überprüft werden.</para>

        <para>Welche Art der Passwortüberprüfung kivitendo benutzt und wie
        kivitendo die Authentifizierungsdatenbank erreichen kann, wird in der
        Konfigurationsdatei <filename>config/kivitendo.conf</filename>
        festgelegt. Diese muss bei der Installation und bei einem Upgrade von
        einer Version vor v2.6.0 angelegt werden. Eine
        Beispielkonfigurationsdatei
        <filename>config/kivitendo.conf.default</filename> existiert, die als
        Vorlage benutzt werden kann.</para>
      </sect2>

      <sect2 id="Administratorpasswort">
        <title>Administratorpasswort</title>

        <para>Das Passwort, das zum Zugriff auf das Administrationsinterface
        von kivitendo benutzt wird, wird ebenfalls in dieser Datei
        gespeichert. Es kann auch nur dort und nicht mehr im
        Administrationsinterface selber geändert werden. Der Parameter dazu
        heißt <varname>admin_password</varname> im Abschnitt
        <varname>[authentication]</varname>.</para>
      </sect2>

      <sect2 id="Authentifizierungsdatenbank">
        <title>Authentifizierungsdatenbank</title>

        <para>Die Verbindung zur Authentifizierungsdatenbank wird mit den
        Parametern in <varname>[authentication/database]</varname>
        konfiguriert. Hier sind die folgenden Parameter anzugeben:</para>

        <variablelist>
          <varlistentry>
            <term><literal>host</literal></term>

            <listitem>
              <para>Der Rechnername oder die IP-Adresse des
              Datenbankservers</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>port</literal></term>

            <listitem>
              <para>Die Portnummer des Datenbankservers, meist 5432</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>db</literal></term>

            <listitem>
              <para>Der Name der Authentifizierungsdatenbank</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>user</literal></term>

            <listitem>
              <para>Der Benutzername, mit dem sich kivitendo beim
              Datenbankserver anmeldet (z.B.
              "<literal>postgres</literal>")</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>password</literal></term>

            <listitem>
              <para>Das Passwort für den Datenbankbenutzer</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>Die Datenbank muss noch nicht existieren. kivitendo kann sie
        automatisch anlegen (mehr dazu siehe unten).</para>
      </sect2>

      <sect2 id="Passwortüberprüfung">
        <title>Passwortüberprüfung</title>

        <para>kivitendo unterstützt Passwortüberprüfung auf zwei Arten: gegen
        die Authentifizierungsdatenbank und gegen externe LDAP- oder
        Active-Directory-Server. Welche davon benutzt wird, regelt der
        Parameter <varname>module</varname> im Abschnitt
        <varname>[authentication]</varname>.</para>

        <para>Dieser Parameter listet die zu verwendenden Authentifizierungsmodule auf. Es muss mindestens ein Modul angegeben werden, es
        können aber auch mehrere angegeben werden. Weiterhin ist es möglich, das LDAP-Modul mehrfach zu verwenden und für jede Verwendung
        eine unterschiedliche Konfiguration zu nutzen, z.B. um einen Fallback-Server anzugeben, der benutzt wird, sofern der Hauptserver
        nicht erreichbar ist.</para>

        <para>Sollen die Benutzerpasswörter in der Authentifizierungsdatenbank geprüft werden, so muss der Parameter
        <varname>module</varname> das Modul <literal>DB</literal> enthalten. Sofern das Modul in der Liste enthalten ist, egal an welcher
        Position, können sowohl der Administrator als auch die Benutzer selber ihre Passwörter in kivitendo ändern.</para>

        <para>Wenn Passwörter gegen einen oder mehrere externe LDAP- oder Active-Directory-Server geprüft werden, so muss der Parameter
        <varname>module</varname> den Wert <literal>LDAP</literal> enthalten. In diesem Fall müssen zusätzliche Informationen über den
        LDAP-Server im Abschnitt <literal>[authentication/ldap]</literal> angegeben werden. Das Modul kann auch mehrfach angegeben werden,
        wobei jedes Modul eine eigene Konfiguration bekommen sollte. Der Name der Konfiguration wird dabei mit einem Doppelpunkt getrennt an
        den Modulnamen angehängt (<literal>LDAP:Name-der-Konfiguration</literal>). Der entsprechende Abschnitt in der Konfigurationsdatei
        lautet dann <literal>[authentication/Name-der-Konfiguration]</literal>.</para>

        <para>Die verfügbaren Parameter für die LDAP-Konfiguration lauten:</para>

        <variablelist>
          <varlistentry>
            <term><literal>host</literal></term>

            <listitem>
              <para>Der Rechnername oder die IP-Adresse des LDAP- oder
              Active-Directory-Servers. Diese Angabe ist zwingend
              erforderlich.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>port</literal></term>

            <listitem>
              <para>Die Portnummer des LDAP-Servers; meist 389.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>tls</literal></term>

            <listitem>
              <para>Wenn Verbindungsverschlüsselung gewünscht ist, so diesen
              Wert auf ‘<literal>1</literal>’ setzen, andernfalls auf
              ‘<literal>0</literal>’ belassen</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>verify</literal></term>

            <listitem>
              <para>Wenn Verbindungsverschlüsselung gewünscht und der Parameter <parameter>tls</parameter> gesetzt ist, so gibt dieser
              Parameter an, ob das Serverzertifikat auf Gültigkeit geprüft wird. Mögliche Werte sind <literal>require</literal> (Zertifikat
              wird überprüft und muss gültig sei; dies ist der Standard) und <literal>none</literal> (Zertifikat wird nicht
              überpfüft).</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>attribute</literal></term>

            <listitem>
              <para>Das LDAP-Attribut, in dem der Benutzername steht, den der
              Benutzer eingegeben hat. Für Active-Directory-Server ist dies
              meist ‘<literal>sAMAccountName</literal>’, für andere
              LDAP-Server hingegen ‘<literal>uid</literal>’. Diese Angabe ist
              zwingend erforderlich.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>base_dn</literal></term>

            <listitem>
              <para>Der Abschnitt des LDAP-Baumes, der durchsucht werden soll.
              Diese Angabe ist zwingend erforderlich.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>filter</literal></term>

            <listitem>
              <para>Ein optionaler LDAP-Filter. Enthält dieser Filter das Wort
              <literal>&lt;%login%&gt;</literal>, so wird dieses durch den vom
              Benutzer eingegebenen Benutzernamen ersetzt. Andernfalls wird
              der LDAP-Baum nach einem Element durchsucht, bei dem das oben
              angegebene Attribut mit dem Benutzernamen identisch ist.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>bind_dn</literal> und
            <literal>bind_password</literal></term>

            <listitem>
              <para>Wenn der LDAP-Server eine Anmeldung erfordert, bevor er
              durchsucht werden kann (z.B. ist dies bei
              Active-Directory-Servern der Fall), so kann diese hier angegeben
              werden. Für Active-Directory-Server kann als
              ‘<literal>bind_dn</literal>’ entweder eine komplette LDAP-DN wie
              z.B. ‘<literal>cn=Martin
              Mustermann,cn=Users,dc=firmendomain</literal>’ auch nur der
              volle Name des Benutzers eingegeben werden; in diesem Beispiel
              also ‘<literal>Martin Mustermann</literal>’.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>timeout</literal></term>

            <listitem>
              <para>Timeout beim Verbindungsversuch, bevor der Server als nicht erreichbar gilt; Standardwert: 10</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect2>

      <sect2 id="Name-des-Session-Cookies">
        <title>Name des Session-Cookies</title>

        <para>Sollen auf einem Server mehrere kivitendo-Installationen
        aufgesetzt werden, so müssen die Namen der Session-Cookies für alle
        Installationen unterschiedlich sein. Der Name des Cookies wird mit dem
        Parameter <varname>cookie_name</varname> im Abschnitt
        <varname>[authentication]</varname>gesetzt.</para>

        <para>Diese Angabe ist optional, wenn nur eine Installation auf dem
        Server existiert.</para>
      </sect2>

      <sect2 id="Anlegen-der-Authentifizierungsdatenbank">
        <title>Anlegen der Authentifizierungsdatenbank</title>

        <para>Nachdem alle Einstellungen in
        <filename>config/kivitendo.conf</filename> vorgenommen wurden, muss
        kivitendo die Authentifizierungsdatenbank anlegen. Dieses geschieht
        automatisch, wenn Sie sich im Administrationsmodul anmelden, das unter
        der folgenden URL erreichbar sein sollte:</para>

        <para><ulink
        url="http://localhost/kivitendo-erp/controller.pl?action=Admin/login">http://localhost/kivitendo-erp/controller.pl?action=Admin/login</ulink></para>
      </sect2>
    </sect1>

    <sect1 id="Benutzer--und-Gruppenverwaltung">
      <title>Mandanten-, Benutzer- und Gruppenverwaltung</title>

      <para>Nach der Installation müssen Mandanten, Benutzer, Gruppen und
      Datenbanken angelegt werden. Dieses geschieht im Administrationsmenü,
      das Sie unter folgender URL finden:</para>

      <para><ulink
      url="http://localhost/kivitendo-erp/controller.pl?action=Admin/login">http://localhost/kivitendo-erp/controller.pl?action=Admin/login</ulink></para>

      <para>Verwenden Sie zur Anmeldung das Passwort, das Sie in der Datei
      <filename>config/kivitendo.conf</filename> eingetragen haben.</para>

      <sect2 id="Zusammenhänge">
        <title>Zusammenhänge</title>

        <para>kivitendo verwaltet zwei Sets von Daten, die je nach Einrichtung
        in einer oder zwei Datenbanken gespeichert werden.</para>

        <para>Das erste Set besteht aus Anmeldeinformationen: welche Benutzer
        und Mandanten gibt es, welche Gruppen, welche BenutzerIn hat Zugriff
        auf welche Mandanten, und welche Gruppe verfügt über welche Rechte.
        Diese Informationen werden in der Authentifizierungsdatenbank
        gespeichert. Dies ist diejenige Datenbank, deren Verbindungsparameter
        in der Konfigurationsdatei <filename>config/kivitendo.conf</filename>
        gespeichert werden.</para>

        <para>Das zweite Set besteht aus den eigentlichen Verkehrsdaten eines
        Mandanten, wie beispielsweise die Stammdaten (Kunden, Lieferanten,
        Waren) und Belege (Angebote, Lieferscheine, Rechnungen). Diese werden
        in einer Mandantendatenbank gespeichert. Die Verbindungsinformationen
        einer solchen Mandantendatenbank werden im Administrationsbereich
        konfiguriert, indem man einen Mandanten anlegt und dort die Parameter
        einträgt. Dabei hat jeder Mandant eine eigene Datenbank.</para>

        <para>Aufgrund des Datenbankdesigns ist es für einfache Fälle möglich,
        die Authentifizierungsdatenbank und eine der Mandantendatenbanken in
        ein und derselben Datenbank zu speichern. Arbeitet man hingegen mit
        mehr als einem Mandanten, wird empfohlen, für die
        Authentifizierungsdatenbank eine eigene Datenbank zu verwenden, die
        nicht gleichzeitig für einen Mandanten verwendet wird.</para>
      </sect2>

      <sect2 id="Mandanten-Benutzer-Gruppen">
        <title>Mandanten, Benutzer und Gruppen</title>

        <para>kivitendos Administration kennt Mandanten, Benutzer und Gruppen,
        die sich frei zueinander zuordnen lassen.</para>

        <para>kivitendo kann mehrere Mandaten aus einer Installation heraus
        verwalten. Welcher Mandant benutzt wird, kann direkt beim Login
        ausgewählt werden. Für jeden Mandanten wird ein eindeutiger Name
        vergeben, der beim Login angezeigt wird. Weiterhin benötigt der
        Mandant Datenbankverbindungsparameter für seine Mandantendatenbank.
        Diese sollte über die <link
        linkend="Datenbanken-anlegen">Datenbankverwaltung</link>
        geschehen.</para>

        <para>Ein Benutzer ist eine Person, die Zugriff auf kivitendo erhalten
        soll. Sie erhält einen Loginnamen sowie ein Passwort. Weiterhin legt
        der Administrator fest, an welchen Mandanten sich ein Benutzer
        anmelden kann, was beim Login verifiziert wird.</para>

        <para>Gruppen dienen dazu, Benutzern innerhalb eines Mandanten Zugriff
        auf bestimmte Funktionen zu geben. Einer Gruppe werden dafür vom
        Administrator gewisse Rechte zugeordnet. Weiterhin legt der
        Administrator fest, für welche Mandanten eine Gruppe gilt, und welche
        Benutzer Mitglieder in dieser Gruppe sind. Meldet sich ein Benutzer
        dann an einem Mandanten an, so erhält er alle Rechte von allen
        denjenigen Gruppen, die zum Einen dem Mandanten zugeordnet sind und in
        denen der Benutzer zum Anderen Mitglied ist,</para>

        <para>Die Reihenfolge, in der Datenbanken, Mandanten, Gruppen und
        Benutzer angelegt werden, kann im Prinzip beliebig gewählt werden. Die
        folgende Reihenfolge beinhaltet die wenigsten Arbeitsschritte:</para>

        <orderedlist numeration="arabic">
          <listitem>
            <para>Datenbank anlegen</para>
          </listitem>

          <listitem>
            <para>Gruppen anlegen</para>
          </listitem>

          <listitem>
            <para>Benutzer anlegen und Gruppen als Mitglied zuordnen</para>
          </listitem>

          <listitem>
            <para>Mandanten anlegen und Gruppen sowie Benutzer zuweisen</para>
          </listitem>
        </orderedlist>
      </sect2>

      <sect2 id="Datenbanken-anlegen">
        <title>Datenbanken anlegen</title>

        <para>Zuerst muss eine Datenbank angelegt werden. Verwenden Sie für
        den Datenbankzugriff den vorhin angelegten Benutzer (in unseren
        Beispielen ist dies ‘<literal>kivitendo</literal>’).</para>
      </sect2>

      <sect2 id="Gruppen-anlegen">
        <title>Gruppen anlegen</title>

        <para>Eine Gruppe wird in der Gruppenverwaltung angelegt. Ihr muss ein
        Name gegeben werden, eine Beschreibung ist hingegen optional. Nach dem
        Anlegen können Sie die verschiedenen Bereiche wählen, auf die
        Mitglieder dieser Gruppe Zugriff haben sollen.</para>

        <para>Benutzergruppen werden zwar in der Authentifizierungsdatenbank
        gespeichert, gelten aber nicht automatisch für alle Mandanten. Der
        Administrator legt vielmehr fest, für welche Mandanten eine Gruppe
        gültig ist. Dies kann entweder beim Bearbeiten der Gruppe geschehen
        ("diese Gruppe ist gültig für Mandanten X, Y und Z"), oder aber wenn
        man einen Mandanten bearbeitet ("für diesen Mandanten sind die Gruppen
        A, B und C gültig").</para>

        <para>Wurden bereits Benutzer angelegt, so können hier die Mitglieder
        dieser Gruppe festgelegt werden ("in dieser Gruppe sind die Benutzer
        X, Y und Z Mitglieder"). Dies kann auch nachträglich beim Bearbeiten
        eines Benutzers geschehen ("dieser Benutzer ist Mitglied in den
        Gruppen A, B und C").</para>
      </sect2>

      <sect2 id="Benutzer-anlegen">
        <title>Benutzer anlegen</title>

        <para>Beim Anlegen von Benutzern werden für viele Parameter
        Standardeinstellungen vorgenommen, die den Gepflogenheiten des
        deutschen Raumes entsprechen.</para>

        <para>Zwingend anzugeben ist der Loginname. Wenn die
        Passwortauthentifizierung über die Datenbank eingestellt ist, so kann
        hier auch das Benutzerpasswort gesetzt bzw. geändert werden. Ist
        hingegen die LDAP-Authentifizierung aktiv, so ist das Passwort-Feld
        deaktiviert.</para>

        <para>Hat man bereits Mandanten und Gruppen angelegt, so kann hier
        auch konfiguriert werden, auf welche Mandanten der Benutzer Zugriff
        hat bzw. in welchen Gruppen er Mitglied ist. Beide Zuweisungen können
        sowohl beim Benutzer vorgenommen werden ("dieser Benutzer hat Zugriff
        auf Mandanten X, Y, Z" bzw. "dieser Benutzer ist Mitglied in Gruppen
        X, Y und Z") als auch beim Mandanten ("auf diesen Mandanten haben
        Benutzer A, B und C Zugriff") bzw. bei der Gruppe ("in dieser Gruppe
        sind Benutzer A, B und C Mitglieder").</para>
      </sect2>

      <sect2 id="Mandanten-anlegen">
        <title>Mandanten anlegen</title>

        <para>Ein Mandant besteht aus Administrationssicht primär aus einem
        eindeutigen Namen. Weiterhin wird hier hinterlegt, welche Datenbank
        als Mandantendatenbank benutzt wird. Hier müssen die Zugriffsdaten
        einer der eben angelegten Datenbanken eingetragen werden.</para>

        <para>Hat man bereits Benutzer und Gruppen angelegt, so kann hier auch
        konfiguriert werden, welche Benutzer Zugriff auf den Mandanten haben
        bzw. welche Gruppen für den Mandanten gültig sind. Beide Zuweisungen
        können sowohl beim Mandanten vorgenommen werden ("auf diesen Mandanten
        haben Benutzer X, Y und Z Zugriff" bzw. "für diesen Mandanten sind die
        Gruppen X, Y und Z gültig") als auch beim Benutzer ("dieser Benutzer
        hat Zugriff auf Mandanten A, B und C") bzw. bei der Gruppe ("diese
        Gruppe ist für Mandanten A, B und C gültig").</para>
      </sect2>
    </sect1>

    <sect1 id="Drucker--Systemverwaltung">
      <title>Drucker- und Systemverwaltung</title>

      <para>Im Administrationsmenü gibt es ferner noch die beiden Menüpunkte
      Druckeradministration und System.</para>

      <sect2 id="Druckeradministration">
        <title>Druckeradministration</title>

        <para>Unter dem Menüpunkt Druckeradministration lassen sich beliebig
        viele "Druckbefehle" im System verwalten. Diese Befehle werden
        mandantenweise zugeordnet. Unter Druckerbeschreibung wird der Namen
        des Druckbefehls festgelegt, der dann in der Druckerauswahl des Belegs
        angezeigt wird.</para>

        <para>Unter Druckbefehl definiert man den eigentlichen Druckbefehl,
        der direkt auf dem Webserver ausgeführt wird, bspw. 'lpr -P
        meinDrucker' oder ein kompletter Pfad zu einem Skript
        (/usr/local/src/kivitendo/scripts/pdf_druck_in_verzeichnis.sh). Wird
        ferner noch ein optionales Vorlagenkürzel verwendet, wird dieses
        Kürzel bei der Auswahl der Druckvorlagendatei mit einem Unterstrich
        ergänzt, ist bspw. das Kürzel 'epson_drucker' definiert, so wird beim
        Ausdruck eines Angebots folgende Vorlage geparst:
        sales_quotation_epson_drucker.tex.</para>
      </sect2>

      <sect2 id="System">
        <title>System sperren / entsperren</title>

        <para>Unter dem Menüpunkt System gibt es den Eintrag 'Installation
        sperren/entsperren'. Setzt man diese Sperre so ist der Zugang zu der
        gesamten kivitendo Installation gesperrt.</para>

        <para>Falls die Sperre gesetzt ist, erscheint anstelle der
        Anmeldemaske die Information: 'kivitendo ist momentan zwecks
        Wartungsarbeiten nicht zugänglich.'.</para>

        <para>Wichtig zu erwähnen ist hierbei noch, dass sich kivitendo
        automatisch 'sperrt', falls es bei einem Versionsupdate zu einem
        Datenbankfehler kam. Somit kann hier nicht aus Versehen mit einem
        inkonsistenten Datenbestand weitergearbeitet werden.</para>
      </sect2>
    </sect1>

    <sect1 id="Email">
      <title>E-Mail</title>

        <para>
          kivitendo kann sowohl E-Mails direkt aus dem Programm heraus E-Mails
          versenden, als auch in das Programm importiern. Damit dies
          funktioniert, müssen die E-Mail-Parameter korrekt konfiguriert sein.
          Dazu mehr in den folgenden Abschnitten.
        </para>

      <sect2 id="config.sending-email"
             xreflabel="E-Mail-Versand aus kivitendo heraus">
        <title>E-Mail-Versand aus kivitendo heraus</title>

        <para>Das Versenden von E-Mails kann zum Verschicken von Belegen genutzt
        werden, z.B. um ein Angebot direkt an einen Kunden zu verschicken. Damit
        dies funktioniert, muss eingestellt werden, über welchen Server die
        E-Mails verschickt werden sollen. kivitendo unterstützt dabei zwei
        Mechanismen: Versand über einen lokalen E-Mail-Server (z.B. mit
        <productname>Postfix</productname> oder <productname>Exim</productname>,
        was auch die standardmäßig aktive Methode ist) sowie Versand über einen
        SMTP-Server (z.B. der des eigenen Internet-Providers).</para>

        <para>Welche Methode und welcher Server verwendet werden, wird über die
        Konfigurationsdatei <filename>config/kivitendo.conf</filename>
        festgelegt. Dort befinden sich alle Einstellungen zu diesem Thema im
        Abschnitt '<literal>[mail_delivery]</literal>'.</para>

        <sect3 id="config.sending-email.sendmail"
               xreflabel="E-Mail-Versand über lokalen E-Mail-Server">
          <title>Versand über lokalen E-Mail-Server</title>

          <para>Diese Methode bietet sich an, wenn auf dem Server, auf dem
          kivitendo läuft, bereits ein funktionsfähiger E-Mail-Server wie z.B.
          <productname>Postfix</productname>, <productname>Exim</productname>
          oder <productname>Sendmail</productname> läuft.</para>

          <para>Um diese Methode auszuwählen, muss der Konfigurationsparameter
          '<literal>method = sendmail</literal>' gesetzt sein. Dies ist
          gleichzeitig der Standardwert, falls er nicht verändert wird.</para>

          <para>Um zu kontrollieren, wie das Programm zum Einliefern gestartet
          wird, dient der Parameter '<literal>sendmail = ...</literal>'. Der
          Standardwert verweist auf das Programm
          <filename>/usr/bin/sendmail</filename>, das bei allen oben genannten
          E-Mail-Serverprodukten für diesen Zweck funktionieren sollte.</para>

          <para>Die Konfiguration des E-Mail-Servers selber würde den Rahmen
          dieses sprengen. Hierfür sei auf die Dokumentation des E-Mail-Servers
          verwiesen.</para>
        </sect3>

        <sect3 id="config.sending-email.smtp"
               xreflabel="E-Mail-Versand über einen SMTP-Server">
          <title>Versand über einen SMTP-Server</title>

          <para>Diese Methode bietet sich an, wenn kein lokaler E-Mail-Server
          vorhanden ist oder einer vorhanden, dieser aber nicht konfiguriert
          ist.</para>

          <para>Um diese Methode auszuwählen, muss der Konfigurationsparameter
          '<literal>method = smtp</literal>' gesetzt sein. Die folgenden
          Parameter dienen dabei der weiteren Konfiguration:</para>

          <variablelist>
            <varlistentry>
              <term><varname>hostname</varname></term>

              <listitem>
                <para>Name oder IP-Adresse des SMTP-Servers. Standardwert:
                '<literal>localhost</literal>'</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>port</varname></term>

              <listitem>
                <para>Portnummer. Der Standardwert hängt von der verwendeten
                Verschlüsselungsmethode ab. Gilt '<literal>security =
                none</literal>' oder '<literal>security = tls</literal>', so ist
                25 die Standardportnummer. Für '<literal>security =
                ssl</literal>' ist 465 die Portnummer. Muss normalerweise nicht
                geändert werden.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>security</varname></term>

              <listitem>
                <para>Wahl der zu verwendenden Verschlüsselung der Verbindung
                mit dem Server. Standardwert ist '<literal>none</literal>',
                wodurch keine Verschlüsselung verwendet wird. Mit
                '<literal>tls</literal>' wird TLS-Verschlüsselung eingeschaltet,
                und mit '<literal>ssl</literal>' wird Verschlüsselung via SSL
                eingeschaltet. Achtung: Für '<literal>tls</literal>' und
                '<literal>ssl</literal>' werden zusätzliche Perl-Module benötigt
                (siehe unten).</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>login</varname> und
              <varname>password</varname></term>

              <listitem>
                <para>Falls der E-Mail-Server eine Authentifizierung verlangt,
                so können mit diesen zwei Parametern der Benutzername und das
                Passwort angegeben werden. Wird Authentifizierung verwendet, so
                sollte aus Sicherheitsgründen auch eine Form von Verschlüsselung
                aktiviert werden.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

      </sect2>

      <sect2 id="config.sent_emails_in_imap"
             xreflabel="Versendete E-Mails über IMAP exportieren">
        <title>Versendete E-Mails über IMAP exportieren</title>

        <para>
          Es können versendete E-Mails über IMAP exportiert werden. Dazu muss
          der entsprechende Server, auf dem die E-Mails abgelegt werden
          sollen, konfiguriert werden. Dies geschieht in der Konfigurationsdatei
          <filename>config/kivitendo.conf</filename> im Abschnitt
          '<literal>[sent_emails_in_imap]</literal>'. Es können auch Server für
          spezifische E-Mail-Adressen konfiguriert werden, indem der Abschnitt
          kopiert wird und mit dem Namen
          '<literal>[sent_emails_in_imap/email/EMAILADDRESS]</literal>', wobei
          '<literal>EMAILADDRESS</literal>' die entsprechenden E-Mail-Adresse
          ist, versehen wird.
        </para>

        <para>
          Die Reihenfolge für die Auswahl der Konfiguration ist wie folgt:
        </para>

        <orderedlist>
          <listitem>
            <para> Falls es für die Absender-Adresse eine Konfiguration gibt nimm
            diese. </para>
          </listitem>
          <listitem>
            <para> Falls es es für die benutzerbezogene E-Mail-Adresse eine
            Konfiguration gibt dann nimm diese. </para>
          </listitem>
          <listitem>
            <para> Falls es eine generelle Konfiguration gibt dann nimm diese.
            </para>
          </listitem>
        </orderedlist>


        <para>Die folgenden Parameter dienen der Konfiguration:</para>

        <variablelist>
          <varlistentry>
            <term><varname>enabled</varname></term>

            <listitem>
              <para>
                Falls '<literal>enabled = 0</literal>' gesetzt ist, wird der
                Export von E-Mails deaktiviert. Dies ist der Standardwert. Falls
                '<literal>enabled = 1</literal>' gesetzt ist, wird ist der
                Export von E-Mails aktiviert.
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>hostname</varname></term>

            <listitem>
              <para>Name oder IP-Adresse des IMAP-Servers. Standardwert:
              '<literal>localhost</literal>'</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>port</varname></term>

            <listitem>
              <para>
                Portnummer. Der Standardwert hängt von der verwendeten
                Verschlüsselungsmethode ab. Gilt '<literal>ssl = 0</literal>',
                so ist 993 die Standardportnummer. Für
                '<literal>ssl = 0</literal>' ist 143 die Portnummer. Muss
                normalerweise nicht geändert werden.
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>ssl</varname></term>

            <listitem>
              <para>
                Wahl ob eine Verschlüsselung bei der Verbindung mit dem Server
                verwendet wird. Standardwert ist '<literal>1</literal>',
                wodurch eine SSL-Verschlüsselung verwendet wird. Mit
                '<literal>0</literal>' wird keine Verschlüsselung genutzt.
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>username</varname> und
            <varname>password</varname></term>

            <listitem>
              <para>
                Falls der IMAP-Server eine Authentifizierung verlangt, so können
                mit diesen zwei Parametern der Nutzername und das Passwort
                angegeben werden. Wird Authentifizierung verwendet, so sollte
                aus Sicherheitsgründen auch Verschlüsselung aktiviert werden.
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>folder</varname></term>

            <listitem>
              <para>
                Wahl des Ordners, in den kivitendo gesendete E-Mails
                gespeichert. Standardwert ist
                '<literal>Sent/Kivitendo</literal>'. Ordnerhierarchien können
                mit einem Slash ('<literal>/</literal>') getrennt werden.
                Der gewählte Ordner muss existieren.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>
          Bei einem Fehler bricht die Funktion ab und der Anwender bekommt die
          Fehlermeldung, dass die E-Mail prinzipiell nicht verschickt werden
          konnte. An dieser Stelle muss der kivitendo-Admin etwas genauer
          prüfen, ob der Mail-Versand und/oder die Synchronisation den Fehler
          verursacht hat. Ein Blick ins Email-Journal kann helfen den Fehler
          einzuschränken.
        </para>

      </sect2>

      <sect2 id="config.imap_client"
             xreflabel="E-Mails in kivitendo importieren">
        <title>E-Mails in kivitendo importieren</title>

        <para>
          Um E-Mails in kivitendo zu importieren, muss der entsprechende
          Server, von dem die E-Mails abgeholt werden sollen, konfiguriert
          werden. Dies geschieht in der Konfigurationsdatei
          <filename>config/kivitendo.conf</filename> im Abschnitt
          '<literal>[imap_client]</literal>'.
        </para>

        <para>Die folgenden Parameter dienen der Konfiguration:</para>

        <variablelist>
          <varlistentry>
            <term><varname>enabled</varname></term>

            <listitem>
              <para>
                Falls '<literal>enabled = 0</literal>' gesetzt ist, wird der
                Import von E-Mails deaktiviert. Dies ist der Standardwert. Falls
                '<literal>enabled = 1</literal>' gesetzt ist, wird ist der
                Import von E-Mails aktiviert.
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>hostname</varname></term>

            <listitem>
              <para>Name oder IP-Adresse des IMAP-Servers. Standardwert:
              '<literal>localhost</literal>'</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>port</varname></term>

            <listitem>
              <para>
                Portnummer. Der Standardwert hängt von der verwendeten
                Verschlüsselungsmethode ab. Gilt '<literal>ssl = 0</literal>',
                so ist 993 die Standardportnummer. Für
                '<literal>ssl = 0</literal>' ist 143 die Portnummer. Muss
                normalerweise nicht geändert werden.
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>ssl</varname></term>

            <listitem>
              <para>
                Wahl ob eine Verschlüsselung bei der Verbindung mit dem Server
                verwendendet wird. Standardwert ist '<literal>1</literal>',
                wodurch eine SSL-Verschlüsselung verwendet wird. Mit
                '<literal>0</literal>' wird keine Verschlüsselung genutzt.
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>username</varname> und
            <varname>password</varname></term>

            <listitem>
              <para>
                Falls der IMAP-Server eine Authentifizierung verlangt, so können
                mit diesen zwei Parametern der Nutzername und das Passwort
                angegeben werden. Wird Authentifizierung verwendet, so sollte
                aus Sicherheitsgründen auch Verschlüsselung aktiviert werden.
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>base_folder</varname></term>

            <listitem>
              <para>
                Wahl des Ordners, den kivitendo als Basis für das erstellen von
                Unterordnern und das abholen von E-Mails verwendet. Standardwert
                ist '<literal>INBOX</literal>'. Ordnerhierarchien können mit
                einem Slash ('<literal>/</literal>') getrennt werden. Beispiel:
                '<literal>INBOX/kivitendo</literal>'. In diesem Ordner dürfen
                keine Unterordner existieren und keine manuell angelegt werden.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>
          Wenn eingeschaltet, wird beim Anlegen von Verkaufsangeboten und
          -aufträgen ein Unterordner im E-Mail-Client für den entsprechenden
          Beleg angelegt. E-Mails, in diesen Ordner werden automatisch beim
          Öffnen des Belegs in kivitendo importiert. Um die E-Mails übersichtlich
          zu halten, kann der Hintergrund-Job
          '<literal>CleanUpEmailSubfolders</literal>' genutzt werden. Dieser
          importiert alle E-Mails und löscht alle Unterordnern, die nicht zu
          einem Offenen Beleg gehören. Importierte E-Mails werden werden nicht
          gelöscht, erst beim Löschen des Unterordners werden sie gelöscht.
        </para>

        <para>
          Es können auch E-Mails in kivitendo importiert werden, die nicht zu
          einem Beleg gehören. Dafür kann der Hintergrund-Job
          '<literal>SyncEmailFolder</literal>' verwendet werden. Dieser
          synchronisiert standartmäßig den Ordner der in
          '<literal>base_folder</literal>' angegeben ist. Dies kann mit dem
          Job-Parameter '<literal>folder</literal>' geändert. Die Importierten
          E-Mails werden im E-Mail-Journal gespeichert.
        </para>

        <para>
          Beim Umzug des E-Mail-Servers kann kivitendo die E-Mails schon
          importierten E-Mails nicht mehr erkennen. Dies führt dazu, dass alle
          E-Mails erneut importiert werden.
        </para>

      </sect2>
    </sect1>

    <sect1 id="Drucken-mit-kivitendo">
      <title>Drucken mit kivitendo</title>

      <para>Das Drucksystem von kivitendo benutzt von Haus aus LaTeX-Vorlagen.
      Um drucken zu können, braucht der Server ein geeignetes LaTeX System. Am
      einfachsten ist dazu eine <literal>texlive</literal> Installation. Unter
      debianoiden Betriebssystemen installiert man die Pakete mit:</para>

      <para><programlisting>apt install texlive-base-bin texlive-latex-recommended texlive-fonts-recommended \
  texlive-latex-extra texlive-lang-german ghostscript</programlisting></para>

      <para>Für Fedora benötigen Sie die folgenden Pakete:</para>

      <para><programlisting>dnf install texlive-collection-latex texlive-collection-latexextra \
  texlive-collection-latexrecommended texlive-collection-langgerman \
  texlive-collection-langenglish</programlisting></para>

      <para>Für openSUSE benötigen Sie die folgenden Pakete:</para>

      <para><programlisting>zypper install texlive-collection-latex texlive-collection-latexextra \
  texlive-collection-latexrecommended texlive-collection-langgerman \
  texlive-collection-langenglish</programlisting></para>

      <note><para>kivitendo erwartet eine aktuelle TeX Live Umgebung, um PDF/A zu erzeugen. Aktuelle Distributionen von 2020 erfüllen diese. Überprüfbar ist dies mit dem Aufruf des installation_check.pl mit Parameter -l:</para><para><programlisting>scripts/installations_check.pl -l</programlisting></para></note>
      <para>kivitendo bringt drei alternative Vorlagensätze mit:</para>

      <itemizedlist>
        <listitem>
          <para>RB</para>
        </listitem>
        <listitem>
          <para>marei</para>
        </listitem>
        <listitem>
          <para>rev-odt</para>
        </listitem>
      </itemizedlist>

      <para>Der ehemalige Druckvorlagensatz "f-tex" wurde mit der Version
      3.5.6 entfernt, da er nicht mehr gepflegt wird.</para>

      <sect2 id="Vorlagenverzeichnis-anlegen"
             xreflabel="Vorlagenverzeichnis anlegen">
        <title>Vorlagenverzeichnis anlegen</title>

        <para>Es lässt sich ein initialer Vorlagensatz erstellen. Die
        LaTeX-System-Abhängigkeiten hierfür kann man prüfen mit:</para>

        <programlisting>./scripts/installation_check.pl -lv</programlisting>

        <para>Der Angemeldete Benutzer muss in einer Gruppe sein, die über das
        Recht "Konfiguration -&gt; Mandantenverwaltung" verfügt. Siehe auch
        <xref linkend="Gruppen-anlegen"/>.</para>

        <para>Im Userbereich lässt sich unter: "<guimenu>System</guimenu>
        -&gt; <guisubmenu>Mandantenverwaltung</guisubmenu> -&gt;
        <guimenuitem>Verschiedenes</guimenuitem>" die Option "Neue
        Druckvorlagen aus Vorlagensatz erstellen" auswählen.</para>

        <orderedlist>
          <listitem>
            <para><option>Vorlagen auswählen</option>: Wählen Sie hier den
            Vorlagensatz aus, der kopiert werden soll
            (<filename>RB</filename>, <filename>marei</filename> oder
            <filename>odt-rev</filename>.)</para>
          </listitem>

          <listitem>
            <para><option>Neuer Name</option>: Der Verzeichnisname für den
            neuen Vorlagensatz. Dieser kann im Rahmen der üblichen Bedingungen
            für Verzeichnisnamen frei gewählt werden.</para>
          </listitem>
        </orderedlist>

        <para>Nach dem Speichern wird das Vorlagenverzeichnis angelegt und ist
        für den aktuellen Mandanten ausgewählt. Der gleiche Vorlagensatz kann,
        wenn er mal angelegt ist, bei mehreren Mandanten verwendet werden.
        Eventuell müssen Anpassungen (Logo, Erscheinungsbild, etc) noch
        vorgenommen werden. Den Ordner findet man im Dateisystem unter
        <filename>./templates/[Neuer Name]</filename></para>
      </sect2>
 <sect2 id="Aufbau des marei Vorlagensatzes">
  <title>Der Druckvorlagensatz marei</title>
          <note id="marei.document.link">
            <para>Die aktuelle Dokumentation inkl. dem Foliensatz vom kivi-Treffen im August 2023 befindet sich hier:
            <ulink url="https://peitex.de/materialien/2023-08-04_kivitendo/"> https://peitex.de/materialien/2023-08-04_kivitendo/</ulink>
            </para>
          </note>

  <sect3 id="Quickstart – Wo kann was angepasst werden?">
    <title>Quickstart – Wo kann was angepasst werden?</title>
    <note id="do-not-edit-marei">
    <para>In keinem Fall sollten Dateien mit der Endung <filename>*.cls</filename> oder <filename>*.sty</filename> geändert werden. Durch Änderungen an diesen Dateien verhindert man Updates auf neuer Versionen.
    Zwar kopiert kivitendo die Datei und bearbeitet diese beim Update nicht. Allerdings sind sämtliche Änderungen über die Konfigurationsdateien möglich und erhöhen die Wartbarkeit.</para>
    </note>
    <itemizedlist>
      <listitem>
        <para><filename>insettings.tex</filename> :</para>
      </listitem>

        <itemizedlist>
        <listitem>
          <para>Pfad zu Angaben über Mandant*innen (default: firma)</para>
        </listitem>

        <listitem>
          <para>Logo/Briefpapier, falls für alle Mandant*innen in gleicher Struktur. Sonst in der <filename>ident.tex</filename>.</para>
        </listitem>

        <listitem>
          <para>Layout der Kopf/Fußzeile</para>
        </listitem>

        <listitem>
          <para>innerhalb dieser Datei werden auch die folgenden Dateien geladen:</para>
        </listitem>

        <listitem>
          <para><filename>firma/ident.tex</filename> Mandant*innenspezifische Konfiguration, Adressdaten</para>
        </listitem>

        <listitem>
          <para><filename>firma/$währungskürzel_account.tex</filename></para>
        </listitem>
        </itemizedlist>

      <listitem>
        <para>Sprache/Übersetzungen.\\Es muss mindestens eine Sprache angelegt werden!        <programlisting>
        \item[deutsch.tex] Textschnipsel für Deutsch\\
                              Dafür eine Sprache mit Vorlagenkürzel DE anlegen
        \item[english.tex] Textschnipsel für Englisch\\
                              Dafür eine Sprache mit Vorlagenkürzel EN anlegen
        </programlisting></para>
      </listitem>
    </itemizedlist>

    <para>Alle dokumententypspezifischen Einstellungen müssen in der jeweiligen Template-Datei modifiziert werden.</para>

  </sect3>
  <sect3 id="Aufbau">
    <title>Aufbau</title>
    <para>Die Grundstruktur besteht je Dokumententyp aus einer Basisdatei und verschiedenen Setup-Dateien.</para>

    <para>Die Basis wurde so überarbeitet, dass Dokumente nun generell auf
    der Dokumentenklasse <filename>scrartcl.cls</filename> basieren und
    das Paket <filename>kiviletter.sty</filename> benutzen.</para>

    <para>Mandant*innenspezifische Konfiguration findet sich in der Datei <filename>insettings.tex</filename> und
    dem Ordner eines spezifischen Mandant*innen (default=*firma/*).</para>


    <!-- <sect2 id="Struktur der Basisdatei (je Dokumententyp eine)">
    <title>Struktur der Basisdatei (je Dokumententyp eine)</title>

      <orderedlist>
        <listitem>
        <para>Dokumentenklasse</para>
        </listitem>

        <listitem>
        <para><filename>kiviletter.sty</filename></para>
        </listitem>

        <listitem>
        <para>Einstellungen, die über Variablen gesetzt werden: Mandant, Währung, Sprache</para>
        </listitem>

        <listitem>
        <para><filename>insettings.tex</filename> wird geladen. Anteil der spezifischen Anpassungen, die von den Variablen unter 2. abhängig sind.
        Geladen werden darin die Dateien:</para>
        </listitem>

        <itemizedlist>
          <listitem>
              <para>Sprache: lädt die entsprechende Sprachdatei <filename>deutsch.tex</filename> (DE) oder  <filename>englisch.tex</filename> (EN) und setzt die babel Optionen.
              Die Datei enthält Übersetzungen von Einzelbegriffen und Textbausteinen.</para>
            </listitem>

          <listitem>
              <para>Lädt die Konfigurationsdatei, ohne spezielle Mandant*innen ist der Suchpfad zur Konfiguration der Unterordner <filename>firma/</filename></para>
            </listitem>

            <listitem>
            <para>Lädt die Datei <filename>ident.tex</filename> welche Mandant*innenspezifische Anpassungen enthält.</para>
            </listitem>
        </itemizedlist>

      </orderedlist>
    -->

  </sect3>
  <sect3 id="Mandant*innen / Firma">
    <title>Mandant*innen / Firma</title>

    <para>Um gleiche Vorlagen für verschiedene Firmen verwenden zu können, wird je
    nach dem Wert der Kivitendo-Variablen \kivivar{kivicompany} ein
    Firmenverzeichnis ausgewählt (siehe <filename>insettings.tex</filename>), in dem Briefkopf,
    Identitäten und Währungs-/Kontoeinstellungen hinterlegt sind.
    \kivivar{kivicompany} enthält den Namen des verwendeten Mandant*innendaten.
    Ist kein Firmenname eingetragen, so wird das
    generische Unterverzeichnis *firma* verwendet.</para>


  </sect3>
  <sect3 id="Identitäten">
    <title>Identitäten</title>

    <para>In jedem Firmen-Unterverzeichnis soll eine Datei <filename>ident.tex</filename>
    vorhanden sein, die mit |\newcommand| Werte für |\telefon|, |\fax|,
    |\firma|, |\strasse|, |\ort|, |\ustid|, |\email| und |\homepage| definiert.</para>


  </sect3>
  <sect3 id="Währungen/Konten">
    <title>Währungen/Konten</title>

    <para>Für jede Währung (siehe <filename>insettings.tex</filename>) soll eine Datei vorhanden
    sein, die das Währungssymbol (|\currency|) und folgende Angaben für
    ein Konto in dieser Währung enthält |\kontonummer|, |\bank|,
    |\bankleitzahl|, |\bic| und |\iban|.
    So kann in den Dokumenten je nach Währung ein anderes Konto
    angegeben werden.
    Nach demselben Schema können auch weitere, alternative Bankverbindungen
    angelegt werden, die dann in <filename>insettings.tex</filename> als Variable in der Fußzeile eingefügt werden.</para>

    <para>Als Fallback (falls kivitendo keine Währung an das Druckvorlagen-System übergibt)
    ist Euro eingestellt. Dies lässt sich in der <filename>insettings.tex</filename> über das optionale Argument
    von |\setupCurrencyConfig| anpassen, z.B.</para>

    <programlisting>
    \setupCurrencyConfig[chf]{\identpath}{\lxcurrency}</programlisting>
    <para>für Schweizer Franken als Standardwährung.</para>


  </sect3>
  <sect3 id="Briefbogen/Logos">
    <title>Briefbogen/Logos</title>

    <para>Eine Hintergrundgrafik oder ein Logo kann in Abhängigkeit vom
    Medium (z.B. nur beim Verschicken mit E-Mail) eingebunden
    werden.</para>

    <para>Desweiteren sind (auskommentierte) Beispiele enthalten für eine
    Grafik als Briefkopf, nur ein Logo, oder ein komplettes A4-PDF
    als Briefpapier.</para>

    <para>Absolute Positionierung innerhalb des Brief-Layouts ist über die entsprechende Dokumentation des scrlayer-Paketes möglich.
    Da die Voreinstellungen bereits einige Sonderfälle automatisch berücksichtigen ist mit den Anpassungen Vorsicht geboten.
    Sämtliche Einstellungen sollten jedoch außerhalb der *.sty-Dateien vorgenommen werden.
    Anpassungen der <filename>insettings.tex</filename> betreffen hierbei alle Mandant*innen. Spezifischere Einstellungen sind über die zugehörige Konfigurationsdatei (<filename>ident.tex</filename>) möglich.
    In diesem Fall kann zum Ende der insettings eine weitere Konfigurationsdatei über die Verwendung von |\identpath| geladen werden. Ein Beispiel ist in der <filename>insettings.tex</filename> enthalten.</para>


  </sect3>
  <sect3 id="Fußzeile">
    <title>Fußzeile</title>

    <para>Die Tabelle im Fuß verwendet die Angaben aus <filename>firma/ident.tex</filename> und
    *firma/<filename>\_account.tex</filename>. Ihre Struktur wird in der <filename>insettings.tex</filename> definiert.
    Sie kann anschließend auch Mandant*innenspezifisch überschrieben werden.</para>


  </sect3>
  <sect3 id="Seitenstil/Basislayout">
    <title>Seitenstil/Basislayout</title>

    <para>Das Seitenlayout wird über \pck{scrlayer-scrpage} bestimmt. Die ausführliche Dokumentation findet sich in \cite{scrguide}.
    Es existieren in der Datei <filename>insettings.tex</filename> einige Hinweise zu den Anpassungen. Die Basiskonfiguration ist ebenfalls dort eingetragen.</para>

    <para>Neben den in Abschnitt \ref{sec:options}  beschriebenen Optionen zum Abschalten der Fußzeile kann
    der Inhalt der Fußzeile über die \pck{scrlayer-scrpage} Makros, wie</para>
    <programlisting>
      \cfoot[|\meta{Inhalt auf der ersten Briefseite}|]{|\meta{Inhalt auf folgenden Briefseiten}|}    </programlisting>

    <para>geändert werden.</para>

    <para>Die Kopfzeile unterscheidet sich von Dokumententyp zu Dokumententyp leicht, da diese über Datenbankvariablen befüllt wird.
    Hierfür wird das Makro |\ourhead| in der <filename>insettings.tex</filename> definiert.</para>

    <programlisting>
      \DescribeMacro{\ourhead}\marg{Bezeichner}\marg{Eintrag}\marg{Titel}\marg{Nummer}\marg{Datum}    </programlisting>

    <para>Diese Definition kann ebenfalls über die <filename>insettings.tex</filename> angepasst oder auch nachträglich überschrieben werden:</para>

    <programlisting>
      \newcommand{\ourhead}[5] {%
        \chead{%
          \makebox[\textwidth]{%
            \Ifstr{#1}{}{}{#1: #2 \hspace{0.7cm}}%
            #3%
            \Ifstr{#4}{}{}{~\nr: #4}%
            \Ifstr{#5}{}{}{\vom ~ #5}%
            \hspace{0.7cm} - \seite ~ \thepage/\letterlastpage  ~-%
          }%
        }%
      }
    </programlisting>
    <para>In der Standard-Einstellung sieht eine Kopfzeile mit obigen Aufruf dann folgendermaßen aus:</para>

    <programlisting>
      \newcommand{\ourhead}[5] {%
          \makebox[\textwidth]{%
            \Ifstr{#1}{}{}{#1: #2 \hspace{0.7cm}}%
            #3%
            \Ifstr{#4}{}{}{~\nr: #4}%
            \Ifstr{#5}{}{}{\vom ~ #5}%
            \hspace{0.7cm} - \seite ~ \thepage/\letterlastpage  ~-%
          }%
      }

      \begingroup
      \def\letterlastpage{50}

      \ourhead{arg1}{arg2}{arg3}{arg4}{arg5}

      \smallskip
      Erzeugt mit dem Aufruf
      \ourhead{arg1}{arg2}{arg3}{arg4}{arg5}
      \endgroup    </programlisting>


  </sect3>
  <sect3 id="Absenderergänzung">
    <title>Absenderergänzung</title>

    <para>Die Absenderergänzung wird über die Variable |location| in der |kiviletter.sty| folgendermaßen belegt:</para>

    <programlisting>
      \setkomavar{location}{
        \Ifkomavarempty{transaction}{}{{
              \usekomafont{transaction}
              \usekomavar{transaction}
            }
        }
        \par
        \medskip
        \parbox{\useplength{locwidth}}{
          \locationentry{date}
          \locationentry{myref}
          \locationentry{customer}
          \locationentry{yourref}
          \locationentry{delivery}
          \locationentry{quote}
          \locationentry{orderID}
          \locationentry{projectID}
          \locationentry{taxpoint}
          \locationentry[\ansprechpartner]{fromname}
          \locationentry{fromphone}
          \locationentry*{fromemail}
        }
      }    </programlisting>

    <para>Um die Reihenfolge der Variablenausgabe zu verändern, kann diese Definition als Basis in
    die <filename>insettings.tex</filename> oder <filename>ident.tex</filename> (Falls nur für eine Firma) kopiert und dort entsprechend modifiziert werden.</para>

    <para>Das Vorgehen geht für alle vorbelegten Variablen analog.</para>


  </sect3>
<sect3 id="Allgemeine TeXnische Hinweise">
  <title>Allgemeine TeXnische Hinweise</title>


  <sect4 id="Änderung der Basisschriftart">
    <title>Änderung der Basisschriftart</title>

    <para>\LaTeX{} kann grundsätzlich beliebige Schriftarten verwenden. Hierfür sollte allerdings immer darauf geachtet werden,
    dass die Lizenz der Schriftart das einbetten von Glyphen erlaubt. Dies liegt in der Verantwortung der Anwender*innen.
    Darüber hinaus ist wichtig, welches Kompilierungsprogramm verwendet werden muss. Um TrueType oder OpenType Schriftarten
    zu nutzen sollte |lualatex| verwendet werden. Bei Type1 Schriftarten, die speziell für \LaTeX{} installiert wurden, ist pdfLaTeX möglich.
    Da man heutzutage nur noch moderne Schriftformate Verwenden sollte, wird hier lediglich die Variante für |lualatex| aufgelistet.</para>

    <para>Die Konfiguration läuft hierbei über das \pck{fontspec} Paket (Doku siehe \cite{fontspec}).
    Dann hängt es davon ab, ob die Basisschriftart eine Serifenschriftart ist oder nicht.
    In jedem Fall wird die Änderung entweder in der <filename>insettings.tex</filename>, sofern sie für alle
    Mandant*innen gelten soll oder in der Mantant*innenspezifischen Konfigurationsdatei gsesetzt.</para>


    <sect5>
      <title>Änderung, falls es ein Schriftpaket gibt</title>

      <para>Wenn möglich sollte die Schriftart über ein entsprechendes Konfigurationspaket gesetzt werden.
        Ob ein solches existiert kann man sehr leicht über eine Suche nach dem Namen unter \url{ctan.org} herausfinden.</para>

    </sect5>

    <sect5>
      <title>Änderung der Basisschriftart auf eine Schriftart mit Serifen</title>

    <programlisting>
      \setmainfont{|\meta{Name der Schriftart, z.B. SourceSerifPro}|}    </programlisting>

    </sect5>

    <sect5>
      <title>Änderung der Basisschriftart auf eine Schriftart ohne Serifen</title>

    <programlisting>
      \setsansfont{|\meta{Name der Schriftart, z.B. SourceSansPro}|}
      \renewcommand*{\familydefault}{\sfdefault}    </programlisting>

    </sect5>


  </sect4>
  <sect4 id="Unterscheidungen durch String-Vergleich">
    <title>Unterscheidungen durch String-Vergleich</title>

    <programlisting>
    \Ifstr{\lxmedia}{printer}{Falls gedruckt werden soll} {sonst}    </programlisting>
  </sect4>
  </sect3>
</sect2>
      <sect2 id="Vorlagen-RB">
        <title>Der Druckvorlagensatz RB</title>

        <para>Hierbei handelt es sich um einen vollständigen LaTeX
        Dokumentensatz mit alternativem Design. Die odt oder html-Varianten
        sind nicht gepflegt.</para>

        <para>Die konzeptionelle Idee der Vorlagen wird <ulink
        url="http://www.kivitendo-support.de/vortraege/Lx-Office%20Anwendertreffen%20LaTeX-Druckvorlagen-Teil3-finale.pdf">hier</ulink>
        auf Folie 5 bis 10 vorgestellt. Informationen zur Anpassung an die
        eigenen Firmendaten finden sich in der Datei Readme.tex im
        Vorlagenverzeichnis.</para>

        <para>Eine kurze Übersicht der Features:</para>

        <itemizedlist>
          <listitem>
            <para>Mehrsprachenfähig, mit Deutscher und Englischer
            Übersetzung</para>
          </listitem>

          <listitem>
            <para>Zentrale Konfigurationsdateien, die für alle Belege benutzt
            werden, z.B. für Kopf- und Fußzeilen, und Infos wie
            Bankdaten</para>
          </listitem>

          <listitem>
            <para>mehrere vordefinierte Varianten für
            Logos/Hintergrundbilder</para>
          </listitem>

          <listitem>
            <para>Berücksichtigung für Steuerzonen "EU mit USt-ID Nummer" oder
            "Außerhalb EU"</para>
          </listitem>
        </itemizedlist>
      </sect2>

     <sect2 id="Vorlagen-rev-odt">
        <title>Der Druckvorlagensatz rev-odt</title>

        <para>Hierbei handelt es sich um einen Dokumentensatz der mit
        odt-Vorlagen erstellt wurde. Es gibt in dem Verzeichnis eine
        Readme-Datei, die eventuell aktueller als die Dokumentation hier ist.
        Die odt-Vorlagen in diesem Verzeichnis "rev-odt" wurden von revamp-it,
        Zürich erstellt und werden laufend aktualisiert. Ein paar der
        Formulierungen in den Druckvorlagen entsprechen dem Schweizer
        Sprachgebrauch, z.B. "Offerte" oder "allfällig".</para>

        <para>Hinweis zum Einsatz des Feldes "Land" bei den Stammdaten für
        KundInnen und LieferantInnen, sowie bei Lieferadressen: Die in diesem
        Vorlagensatz vorhandenen Vorlagen erwarten für "Land" das
        entsprechende Kürzel, das in Adressen vor die Postleitzahl gesetzt
        wird. Das Feld kann auch komplett leer bleiben. Wer dies anders
        handhaben möchte, muss die Vorlagen entsprechend anpassen.</para>

        <para>odt-Vorlagen können mit LibreOffice oder OpenOffice editiert und
        den eigenen Bedürfnissen angepasst werden. Wichtig beim Editieren von
        if-Blöcken ist, dass immer der gesamte Block überschrieben werden muss
        und nicht nur Teile davon, da dies sonst oft zu einer odt-Datei führt,
        die vom Parser nicht korrekt gelesen werden kann.</para>

        <para>Mahnungen können unter folgenden Einschränkungen mit den
        odt-Vorlagen im Vorlagensatz rev-odt erzeugt werden:</para>

        <itemizedlist>
          <listitem>
            <para>als Druckoption steht nur 'PDF(OpenDocument/OASIS)' zur
            Verfügung, das heisst, die Mahnungen werden als PDF-Datei
            ausgegeben.</para>
          </listitem>

          <listitem>
            <para>für jede Rechnung muss eine eigene Mahnung erzeugt werden
            (auch wenn bei einzelnen KundInnen mehrere überfällige Rechnungen
            vorhanden sind).</para>
          </listitem>
        </itemizedlist>

        <para>Mehrere Mahnungen für eine Kundin / einen Kunden werden zu einer
        PDF-Datei zusammengefasst</para>

        <para>Die Vorlagen zahlungserinnerung.odt sowie mahnung.odt sind für
        das Erstellen einer Zahlungserinnerung bzw. Mahnung selbst vorgesehen,
        die Vorlage mahnung_invoice.odt für das Erstellen einer Rechnung über
        die verrechneten Mahngebühren und Verzugszinsen.</para>

        <para>Zur Zeit gibt es in kivitendo noch keine Möglichkeit,
        odt-Vorlagen bei Briefen und Pflichtenheften einzusetzen.
        Entsprechende Vorlagen sind deshalb nicht vorhanden.</para>

        <para>Fehlermeldungen, Anregungen und Wünsche bitte senden an:
        empfang@revamp-it.ch</para>
      </sect2>

      <sect2 id="allgemeine-hinweise-zu-latex">
        <title>Allgemeine Hinweise zu LaTeX Vorlagen</title>

        <para>In den allermeisten Installationen sollte das Drucken jetzt
        schon funktionieren. Sollte ein Fehler auftreten, wirft TeX sehr lange
        Fehlerbeschreibungen, der eigentliche Fehler ist immer die erste
        Zeile, die mit einem Ausrufezeichen anfängt. Häufig auftretende Fehler
        sind zum Beispiel:</para>

        <itemizedlist>
          <listitem>
            <para>! LaTeX Error: File `eurosym.sty' not found. Die
            entsprechende LaTeX-Bibliothek wurde nicht gefunden. Das tritt vor
            allem bei Vorlagen aus der Community auf. Installieren Sie die
            entsprechenden Pakete.</para>
          </listitem>

          <listitem>
            <para>! Package inputenc Error: Unicode char \u8:... set up for
            use with LaTeX. Dieser Fehler tritt auf, wenn sie versuchen mit
            einer Standardinstallation exotische utf8 Zeichen zu drucken.
            TeXLive unterstützt von Haus nur romanische Schriften und muss mit
            diversen Tricks dazu gebracht werden andere Zeichen zu
            akzeptieren. Adere TeX Systeme wie XeTeX schaffen hier
            Abhilfe.</para>
          </listitem>
        </itemizedlist>

        <para>Wird gar kein Fehler angezeigt, sondern nur der Name des
        Templates, heißt das normalerweise, dass das LaTeX Binary nicht
        gefunden wurde. Prüfen Sie den Namen in der Konfiguration (Standard:
        <literal>latexmk --pdflatex</literal>), und stellen Sie sicher, dass
        latexmk (oder das von Ihnen verwendete System) vom Webserver ausgeführt
        werden darf.</para>

        <para>Wenn sich das Problem nicht auf Grund der Ausgabe im Webbrowser
        verifizieren lässt:</para>

        <itemizedlist>
          <listitem>
            <para>editiere [kivitendo-home]/config/kivitendo.conf und ändere
            "keep_temp_files" auf 1</para>

            <para><programlisting>keep_temp_files = 1;</programlisting></para>
          </listitem>

          <listitem>
            <para>bei fastcgi oder mod_perl den Webserver neu Starten</para>
          </listitem>

          <listitem>
            <para>Nochmal einen Druckversuch im Webfrontend auslösen</para>
          </listitem>

          <listitem>
            <para>wechsel in das users Verzeichnis von kivitendo</para>

            <para><programlisting>cd [kivitendo-home]/users</programlisting></para>
          </listitem>

          <listitem>
            <para>LaTeX Suchpfad anpassen:</para>

            <para><programlisting>export TEXINPUTS=".:[kivitendo-home]/templates/[aktuelles_template_verzeichniss]:"</programlisting></para>
          </listitem>

          <listitem>
            <para>Finde heraus, welche Datei kivitendo beim letzten Durchlauf
            erstellt hat</para>

            <para><programlisting>ls -lahtr ./1*.tex</programlisting></para>

            <para>Es sollte die letzte Datei ganz unten sein</para>
          </listitem>

          <listitem>
            <para>für besseren Hinweis auf Fehler texdatei nochmals
            übersetzen</para>

            <para><programlisting>pdflatex ./1*.tex</programlisting></para>

            <para>in der *.tex datei nach dem Fehler suchen.</para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>

    <sect1 id="OpenDocument-Vorlagen">
      <title>OpenDocument-Vorlagen</title>

      <para>kivitendo unterstützt die Verwendung von Vorlagen im
      OpenDocument-Format, wie es LibreOffice oder OpenOffice (ab Version 2)
      erzeugen. kivitendo kann dabei sowohl neue OpenDocument-Dokumente als
      auch aus diesen direkt PDF-Dateien erzeugen. Nachfolgend ist die
      Verwendung mit LibreOffice beschrieben. Für die Verwendung mit
      OpenOffice müssen die Einstellungen allenfalls angepasst werden.</para>

      <sect2>
        <title>Grundeinstellung</title>

        <para>Um die Unterstützung von OpenDocument-Vorlagen zu aktivieren,
        muss in der Datei <filename>config/kivitendo.conf</filename> die
        Variable <literal>opendocument</literal>, im Abschnitt
        <literal>print_templates</literal>, auf <literal>1</literal> stehen.
        Dies ist die Standardeinstellung.</para>
      </sect2>

      <sect2>
        <title>Direkte Erzeugung von PDF-Dateien</title>

        <para>Während die Erzeugung von reinen OpenDocument-Dateien keinerlei
        weitere Software benötigt, wird zur Umwandlung dieser Dateien in PDF
        LibreOffice oder OpenOffice benötigt.</para>

        <para>Unter Debian kann dieses installiert werden mit:</para>

        <programlisting>apt install libreoffice</programlisting>

        <para>Der Pfad zu LibreOffice kann in der Datei
        <filename>config/kivitendo.conf</filename>, im Abschnitt
        <literal>applications</literal>, angepasst werden. Unter Debian sollte
        dies nicht notwendig sein.</para>

        <sect3>
          <title>Variante 1)</title>

          <para>In der Standardeinstellung wird LibreOffice für jedes Dokument
          neu gestartet. Es ist keine weitere Konfiguration
          erforderlich.</para>
        </sect3>

        <sect3>
          <title>Variante 2)</title>

          <para>Die zweite Variante startet ein LibreOffice, das auch nach der
          Umwandlung des Dokumentes gestartet bleibt. Bei weiteren
          Umwandlungen wird dann diese laufende Instanz benutzt. Der Vorteil
          ist, dass die Zeit zur Umwandlung möglicherweise reduziert wird,
          weil nicht für jedes Dokument eine neue Instanz gestartet werden
          muss.</para>

          <para>Dazu muss in der Konfigurationsdatei
          <filename>config/kivitendo.conf</filename>, im Abschnitt
          <literal>print_templates</literal>, <literal>openofficeorg_daemon =
          1</literal> gesetzt werden.</para>

          <para>Diese Methode verwendet Python und die Python uno bindings.
          Unter Debian werden diese mit LibreOffice mitgeliefert.</para>

          <para>Die Optionen <literal>python_uno</literal> und
          <literal>python_uno_path</literal> in der Konfigurationsdatei
          <filename>config/kivitendo.conf</filename> dienen zur Anpassung der
          Python uno Pfade. Unter Debian sollte keine Anpassung notwendig
          sein.</para>
        </sect3>
      </sect2>

      <sect2>
        <title>Vorbereitungen</title>

        <sect3 id="opendocument-druckvorlagen-mit-makros.vorbereitungen">
          <title>Adminbereich</title>

          <para>Damit beim Erstellen von Rechnungen und Aufträgen neben der
          Standardvorlage ohne Einzahlungsschein weitere Vorlagen (z.B. mit
          Einzahlungsschein) auswählbar sind, muss für jedes Vorlagen-Suffix
          ein Drucker eingerichtet werden:</para>

          <itemizedlist>
            <listitem>
              <para>Druckeradministration → Drucker hinzufügen</para>
            </listitem>

            <listitem>
              <para>Mandant wählen</para>
            </listitem>

            <listitem>
              <para>Druckerbeschreibung → aussagekräftiger Text: wird in der
              Auftrags- bzw. Rechnungsmaske als Auswahl angezeigt (z.B. mit
              Einzahlungsschein Bank xy)</para>
            </listitem>

            <listitem>
              <para>Druckbefehl → beliebiger Text (hat für das Erzeugen von
              Aufträgen oder Rechnungen als odt-Datei keine Bedeutung, darf
              aber nicht leer sein)</para>
            </listitem>

            <listitem>
              <para>Vorlagenkürzel → besr bzw. selbst gewähltes Vorlagensuffix
              (muss genau der Zeichenfolge entsprechen, die zwischen
              "invoice_" bzw. "sales_order_" und ".odt" steht.)</para>
            </listitem>

            <listitem>
              <para>speichern</para>
            </listitem>
          </itemizedlist>
        </sect3>

        <sect3>
          <title>Benutzereinstellungen</title>

          <para>Wer den Ausdruck mit Einzahlungsschein als Standardeinstellung
          im Rechnungs- bzw. Auftragsformular angezeigt haben möchte, kann
          dies persönlich für sich bei den Benutzereinstellungen
          konfigurieren:</para>

          <itemizedlist>
            <listitem>
              <para>Programm → Benutzereinstellungen → Druckoptionen</para>
            </listitem>

            <listitem>
              <para>Standardvorlagenformat → OpenDocument/OASIS</para>
            </listitem>

            <listitem>
              <para>Standardausgabekanal → Bildschirm</para>
            </listitem>

            <listitem>
              <para>Standarddrucker → gewünschte Druckerbeschreibung auswählen
              (z.B. mit Einzahlungsschein Bank xy)</para>
            </listitem>

            <listitem>
              <para>Anzahl Kopien → leer</para>
            </listitem>

            <listitem>
              <para>speichern</para>
            </listitem>
          </itemizedlist>
        </sect3>

        <sect3>
          <title>Auswahl der Druckvorlage in kivitendo beim Erzeugen einer
          odt-Rechnung (analog bei Auftrag)</title>

          <para>Im Fussbereich der Rechnungsmaske muss neben Rechnung,
          OpenDocument/OASIS und Bildschirm die im Adminbereich erstellte
          Druckerbeschreibung ausgewählt werden, falls diese nicht bereits bei
          den Benutzereinstellungen als persönlicher Standard gewählt
          wurde.</para>
        </sect3>
      </sect2>

      <sect2>
        <title>Schweizer QR-Rechnung mit OpenDocument Vorlagen</title>

        <para>Mit der Version 3.6.0 unterstützt Kivitendo die Erstellung von
        Schweizer QR-Rechnungen gemäss <ulink
        url="https://www.paymentstandards.ch/dam/downloads/ig-qr-bill-de.pdf">Swiss
        Payment Standards, Version 2.2</ulink>. Implementiert sind hierbei die
        Varianten:</para>

        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">QR-IBAN mit
            QR-Referenz</emphasis></para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">IBAN ohne Referenz</emphasis></para>
          </listitem>
        </itemizedlist>

        <sect3>
          <title>Einstellungen</title>

          <sect4>
            <title>Mandantenkonfiguration</title>

            <para>Unter <emphasis>System → Mandantenkonfiguration →
            Features</emphasis>. Im Abschnitt <emphasis>Einkauf und
            Verkauf</emphasis>, beim Punkt <emphasis>Verkaufsrechnungen mit
            Schweizer QR-Rechnung erzeugen</emphasis>, die gewünschte Variante
            wählen.</para>
          </sect4>

          <sect4>
            <title>Konfiguration der Bankkonten</title>

            <para>Unter <emphasis>System → Bankkonten</emphasis> muss bei
            mindestens einem Bankkonto die Option <emphasis>Nutzung mit
            Schweizer QR-Rechnung</emphasis> auf <emphasis
            role="bold">Ja</emphasis> gestellt werden.</para>

            <para>Die IBAN muss ohne Leerzeichen angegeben werden.</para>

            <tip>
              <para>Für die Variante <emphasis role="bold">QR-IBAN mit
              QR-Referenz</emphasis> muss dieses Konto unter IBAN eine gültige
              <emphasis role="bold">QR-IBAN Nummer</emphasis> enthalten. Diese
              unterscheidet sich von der regulären IBAN.</para>

              <para>Zusätzlich muss eine gültige <emphasis role="bold">Bankkonto
              Identifikationsnummer</emphasis> angegeben werden
              (6-stellig).</para>

              <para>Diese werden von der jeweiligen Bank vergeben.</para>
            </tip>

            <para>Sind mehrere Konten ausgewählt wird das erste
            verwendet.</para>
          </sect4>

          <sect4>
            <title>Rechnungen ohne Betrag</title>

            <para>Für Rechnungen ohne Betrag (z.B. Spenden) kann, in der
            jeweiligen Rechnung, die Checkbox <emphasis>QR-Rechnung ohne
            Betrag</emphasis> aktiviert werden. Diese Checkbox erscheint nur,
            wenn QR-Rechnungen in der Mandantenkonfiguration aktiviert sind
            (variante ausgewählt).</para>

            <para>Dies wirkt sich lediglich auf den erzeugten QR-Code aus. Die
            Vorlage muss separat angepasst und ausgewählt werden.</para>
          </sect4>
        </sect3>

        <sect3>
          <title>Adressdaten</title>

          <para>Die Adressdaten zum Zahlungsempfänger werden aus der
          Mandantenkonfiguration entnommen. Unter <emphasis>System →
          Mandantenkonfiguration → Verschiedenes</emphasis>, Abschnitt
          <emphasis>Firmenname und -adresse.</emphasis></para>

          <para>Die Adressdaten zum Zahlungspflichtigen stammen aus den
          Kundendaten der jeweiligen Rechnung.</para>

          <para>Ist bei den Adressdaten kein Land angegeben, wird standardmässig
          Schweiz verwendet. Akzeptiert werden Ländername oder Ländercode, also
          z.B. "Schweiz" oder "CH".</para>

          <para>Die Adressdaten können in der Vorlage mit den jeweiligen
          Variablen eingetragen werden. Siehe auch: <xref
          linkend="dokumentenvorlagen-und-variablen"/></para>

          <para>Der erzeugte QR-Code verwendet Adress-Typ "K" (Kombinierte
          Adressfelder, 2 Zeilen).</para>
        </sect3>

        <sect3>
          <title>Referenznummer</title>

          <para>Die Referenznummer wird in Kivitendo erzeugt und setzt sich
          wiefolgt zusammen:</para>

          <itemizedlist>
            <listitem>
              <para>Bankkonto Identifikationsnummer (6-stellig)</para>
            </listitem>

            <listitem>
              <para>Kundennummer (6-stellig, mit führenden Nullen
              aufgefüllt)</para>
            </listitem>

            <listitem>
              <para>Rechnungsnummer (14-stellig, mit führenden Nullen
              aufgefüllt)</para>
            </listitem>

            <listitem>
              <para>Prüfziffer (1-stellig, berechnet mittels modulo 10,
              rekursiv)</para>
            </listitem>
          </itemizedlist>

          <para>Es sind lediglich Ziffern erlaubt. Allfällige Buchstaben und
          Sonderzeichen werden entfernt und fehlende Stellen werden mit
          führenden Nullen aufgefüllt.</para>
        </sect3>

        <sect3>
          <title>Vorlage</title>

          <para>Der Vorlagensatz "rev-odt" enthält die Vorlage
          <literal>invoice_qr.odt</literal>, welche für die Erstellung von
          QR-Rechnungen vorgesehen ist. Damit diese verwendet werden kann muss
          wie obenstehend beschrieben ein Drucker hinzugefügt werden, allerdings
          mit dem Vorlagenkürzel <literal>qr</literal> (siehe <xref
          linkend="opendocument-druckvorlagen-mit-makros.vorbereitungen"/>).
          Weitere Vorlagen für die QR-Rechnung müssen im Dateinamen, bzw.
          Vorlagenkürzel, ebenfalls die Zeichenfolge <literal>qr</literal>
          enthalten, also z.b. <literal>invoice_qr2.odt</literal> etc.</para>

          <para>Die Vorlagen können beliebig angepasst werden. Zwingend müssen
          diese jedoch das QR-Code Platzhalter Bild, als eingebettetes Bild,
          enthalten. Da dieses beim Ausdrucken/Erzeugen der Rechnung durch das
          neu generierte QR-Code Bild ersetzt wird. Das Bild muss den Namen
          <literal>QRCodePlaceholder</literal> tragen. In Libreoffice unter
          <emphasis>Bild-Kontextmenü → </emphasis><emphasis>Einstellungen →
          Optionen → Name</emphasis> einstellbar. Siehe dazu auch die
          Beispielvorlage.</para>

          <sect4>
            <title>Zusätzliche Variablen für Vorlage</title>

            <para>Zusätzlich zu den in der Vorlage standardmässig verfügbaren
            Variablen (siehe <xref linkend="dokumentenvorlagen-und-variablen"/>),
            werden die folgenden Variablen erzeugt:</para>

            <variablelist>
              <varlistentry>
                <term>ref_number_formatted</term>

                <listitem>
                  <para>Referenznummer formatiert mit Leerzeichen, z.B.: 21 00000
                  00003 13947 14300 09017</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>iban_formatted</term>

                <listitem>
                  <para>IBAN formatiert mit Leerzeichen</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>amount_formatted</term>

                <listitem>
                  <para>Betrag formatiert mit Tausendertrennzeichen Leerschlag,
                  z.B.: 1 005.55</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </sect4>
        </sect3>
      </sect2>
    </sect1>

    <sect1 id="nomenclature">
      <title>Nomenklatur</title>

      <sect2 id="booking.dates">
        <title>Datum bei Buchungen</title>

        <para>Seit der Version 3.5 werden für Buchungen in kivitendo
        einheitlich folgende Bezeichnungen verwendet:</para>

        <itemizedlist>
          <listitem>
            <para><option>Erfassungsdatum</option> (en: <option>Entry
            Date</option>, code: <option>Gldate</option>)</para>

            <para>bezeichnet das Datum, an dem die Buchung in kivitendo
            erfasst wurde.</para>
          </listitem>

          <listitem>
            <para><option>Buchungsdatum</option> (en: <option>Booking
            Date</option>, code: <option>Transdate</option>)</para>

            <para>bezeichnet das buchhaltungstechnisch für eine Buchung
            relevante Datum</para>

            <para>Das <option>Rechnungsdatum</option> bei Verkaufs- und
            Einkaufsrechnungen entspricht dem Buchungsdatum. Das heisst, in
            Berichten wie dem Buchungsjournal, in denen eine Spalte
            <option>Buchungsdatum</option> angezeigt werden kann, erscheint
            hier im Fall von Rechnungen das Rechnungsdatum.</para>
          </listitem>

          <listitem>
            <para>Bezieht sich ein verbuchter Beleg auf einen Zeitpunkt, der
            nicht mit dem Buchungsdatum übereinstimmt, so kann dieses Datum
            momentan in kivitendo nur unter Bemerkungen erfasst werden.</para>

            <para>Möglicherweise wird für solche Fälle in einer späteren
            Version von kivitendo ein dritter Datumswert für Buchungen
            erstellt. (Beispiel: Einkaufsbeleg stammt aus einem früheren Jahr,
            das bereits buchhaltungstechnisch abgeschlossen wurde, und muss
            deshalb später verbucht werden.)</para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>

    <sect1 id="config.eur">
      <title>Konfiguration zur Einnahmenüberschussrechnung/Bilanzierung:
      EUR</title>

      <sect2 id="config.eur.introduction"
             xreflabel="Einführung in die Konfiguration zur EUR">
        <title>Einführung</title>

        <para>kivitendo besaß bis inklusive Version 2.6.3 einen
        Konfigurationsparameter namens <varname>eur</varname>, der sich in der
        Konfigurationsdatei <filename>config/kivitendo.conf</filename> (damals
        noch <filename>config/lx_office.conf</filename>) befand. Somit galt er
        für alle Mandanten, die in dieser Installation benutzt wurden.</para>

        <para>Mit der nachfolgenden Version wurde der Parameter zum Einen in
        die Mandantendatenbank verschoben und dabei auch gleich in drei
        Einzelparameter aufgeteilt, mit denen sich das Verhalten genauer
        steuern lässt.</para>
      </sect2>

      <sect2 id="config.eur.parameters"
             xreflabel="Konfigurationsparameter für EUR">
        <title>Konfigurationsparameter</title>

        <para>Es gibt drei Parameter, die die Gewinnermittlungsart,
        Versteuerungsart und die Warenbuchungsmethode regeln:</para>

        <variablelist>
          <varlistentry>
            <term><varname>profit_determination</varname></term>

            <listitem>
              <para>Dieser Parameter legt die Berechnungsmethode für die
              Gewinnermittlung fest. Er enthält entweder
              <literal>balance</literal> für
              Betriebsvermögensvergleich/Bilanzierung oder
              <literal>income</literal> für die
              Einnahmen-Überschuss-Rechnung.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>accounting_method</varname></term>

            <listitem>
              <para>Dieser Parameter steuert die Buchungs- und
              Berechnungsmethoden für die Versteuerungsart. Er enthält
              entweder <literal>accrual</literal> für die Soll-Versteuerung
              oder <literal>cash</literal> für die Ist-Versteuerung.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>inventory_system</varname></term>

            <listitem>
              <para>Dieser Parameter legt die Warenbuchungsmethode fest. Er
              enthält entweder <literal>perpetual</literal> für die
              Bestandsmethode oder <literal>periodic</literal> für die
              Aufwandsmethode.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>Zum Vergleich der Funktionalität bis und nach 2.6.3:
        <varname>eur</varname> = 1 bedeutete Einnahmen-Überschuss-Rechnung,
        Ist-Versteuerung und Aufwandsmethode. <varname>eur</varname> = 0
        bedeutete hingegen Bilanzierung, Soll-Versteuerung und
        Bestandsmethode.</para>

        <para>Die Konfiguration "<varname>eur</varname>" unter
        <varname>[system]</varname> in der <link
        linkend="config.config-file">Konfigurationsdatei</link>
        <filename>config/kivitendo.conf</filename> wird nun nicht mehr
        benötigt und kann entfernt werden. Dies muss manuell geschehen.</para>
      </sect2>

      <sect2 id="config.eur.setting-parameters">
        <title>Festlegen der Parameter</title>

        <para>Beim Anlegen eines neuen Mandanten bzw. einer neuen Datenbank in
        der Admininstration können diese Optionen nun unabhängig voneinander
        eingestellt werden.</para>

        <para>Für die Schweiz sind folgende Einstellungen üblich:
        <itemizedlist>
            <listitem>
              <para>Sollversteuerung</para>
            </listitem>

            <listitem>
              <para>Aufwandsmethode</para>
            </listitem>

            <listitem>
              <para>Bilanzierung</para>
            </listitem>
          </itemizedlist> Diese Einstellungen werden automatisch beim
        Erstellen einer neuen Datenbank vorausgewählt, wenn in
        <filename>config/kivitendo.conf</filename> unter
        <varname>[system]</varname> <literal>default_manager = swiss</literal>
        eingestellt ist.</para>

        <para>Beim Upgrade bestehender Mandanten wird eur ausgelesen und die
        Variablen werden so gesetzt, daß sich an der Funktionalität nichts
        ändert.</para>

        <para>Die aktuelle Konfiguration wird unter Nummernkreise und
        Standardkonten unter dem neuen Punkt "Einstellungen" (read-only)
        angezeigt. Unter <guimenu>System</guimenu> →
        <guisubmenu>Mandantenkonfiguration</guisubmenu> können die
        Einstellungen auch geändert werden. Dabei ist zu beachten, dass eine
        Änderung vorhandene Daten so belässt und damit evtl. die Ergebnisse
        verfälscht. Dies gilt vor Allem für die Warenbuchungsmethode (siehe
        auch <link linkend="config.eur.inventory-system-perpetual">
        Bemerkungen zur Bestandsmethode</link>).</para>
      </sect2>

      <sect2 id="config.eur.inventory-system-perpetual">
        <title>Bemerkungen zur Bestandsmethode</title>

        <para>Die Bestandsmethode ist eigentlich eine sehr elegante Methode,
        funktioniert in kivitendo aber nur unter bestimmten Bedingungen:
        Voraussetzung ist, daß auch immer alle Einkaufsrechnungen gepflegt
        werden, und man beim Jahreswechsel nicht mit einer leeren Datenbank
        anfängt, da bei jedem Verkauf anhand der gesamten Rechnungshistorie
        der Einkaufswert der Ware nach dem FIFO-Prinzip aus den
        Einkaufsrechnungen berechnet wird.</para>

        <para>Die Bestandsmethode kann vom Prinzip her also nur funktioneren,
        wenn man mit den Buchungen bei Null anfängt, und man kann auch nicht
        im laufenden Betrieb von der Aufwandsmethode zur Bestandsmethode
        wechseln.</para>
      </sect2>

      <sect2 id="config.eur.knonw-issues">
        <title>Bekannte Probleme</title>

        <para>Bei bestimmten Berichten kann man derzeit noch inviduell
        einstellen, ob man nach Ist- oder Sollversteuerung auswertet, und es
        werden im Code Variablen wie $accrual oder $cash gesetzt. Diese
        Codestellen wurden noch nicht angepasst, sondern nur die, wo bisher
        die Konfigurationsvariable
        <varname>$::lx_office_conf{system}-&gt;{eur}</varname> ausgewertet
        wurde.</para>

        <para>Es fehlen Hilfetext beim Neuanlegen eines Mandanten, was die
        Optionen bewirken, z.B. mit zwei Standardfällen.</para>
      </sect2>
    </sect1>

    <sect1 id="config.skr04-update-3804">
      <title>SKR04 19% Umstellung für innergemeinschaftlichen Erwerb</title>

      <sect2 id="config.skr04-update-3804.introduction">
        <title>Einführung</title>

        <para>Die Umsatzsteuerumstellung auf 19% für SKR04 für die
        Steuerschlüssel "EU ohne USt-ID Nummer" ist erst 2010 erfolgt.
        kivitendo beinhaltet ein Upgradeskript, das das Konto 3804 automatisch
        erstellt und die Steuereinstellungen korrekt einstellt. Hat der
        Benutzer aber schon selber das Konto 3804 angelegt, oder gab es schon
        Buchungen im Zeitraum nach dem 01.01.2007 auf das Konto 3803, wird das
        Upgradeskript vorsichtshalber nicht ausgeführt, da der Benutzer sich
        vielleicht schon selbst geholfen hat und mit seinen Änderungen
        zufrieden ist. Die korrekten Einstellungen kann man aber auch per Hand
        ausführen. Nachfolgend werden die entsprechenden Schritte anhand von
        Screenshots dargestellt.</para>

        <para>Für den Fall, daß Buchungen mit der Steuerschlüssel "EU ohne
        USt.-IdNr." nach dem 01.01.2007 erfolgt sind, ist davon auszugehen,
        dass diese mit dem alten Umsatzsteuersatz von 16% gebucht worden sind,
        und diese Buchungen sollten entsprechend kontrolliert werden.</para>
      </sect2>

      <sect2 id="config.skr04-update-3804.create-chart">
        <title>Konto 3804 manuell anlegen</title>

        <para>Die folgenden Schritte sind notwendig, um das Konto manuell
        anzulegen und zu konfigurieren. Zuerst wird in
        <guimenu>System</guimenu> → <guisubmenu>Kontenübersicht</guisubmenu> →
        <guimenuitem>Konto erfassen</guimenuitem> das Konto angelegt.</para>

        <screenshot>
          <screeninfo>Konto 3804 erfassen</screeninfo>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/skr04-update-3804/konto3804.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>

        <para>Als Zweites muss Steuergruppe 13 für Konto 3803 angepasst
        werden. Dazu unter <guimenu>System</guimenu> →
        <guisubmenu>Steuern</guisubmenu> →
        <guimenuitem>Bearbeiten</guimenuitem> den Eintrag mit Steuerschlüssel
        13 auswählen und ihn wie im folgenden Screenshot angezeigt
        anpassen.</para>

        <screenshot>
          <screeninfo>Steuerschlüssel 13 für 3803 (16%) anpassen</screeninfo>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/skr04-update-3804/steuer3803.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>

        <para>Als Drittes wird ein neuer Eintrag mit Steuerschlüssel 13 für
        Konto 3804 (19%) angelegt. Dazu unter <guimenu>System</guimenu> →
        <guisubmenu>Steuern</guisubmenu> → <guimenuitem>Erfassen</guimenuitem>
        auswählen und die Werte aus dem Screenshot übernehmen.</para>

        <screenshot>
          <screeninfo>Steuerschlüssel 13 für 3804 (19%) anlegen</screeninfo>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/skr04-update-3804/steuer3804.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>

        <para>Als Nächstes sind alle Konten anzupassen, die als
        Steuerautomatikkonto die 3803 haben, sodass sie ab dem 1.1.2007 auch
        Steuerautomatik auf 3804 bekommen. Dies betrifft in der
        Standardkonfiguration die Konten 4315 und 4726. Als Beispiel für 4315
        müssen Sie dazu unter <guimenu>System</guimenu> →
        <guisubmenu>Kontenübersicht</guisubmenu> → <guimenuitem>Konten
        anzeigen</guimenuitem> das Konto 4315 anklicken und die Einstellungen
        wie im Screenshot gezeigt vornehmen.</para>

        <screenshot>
          <screeninfo>Konto 4315 anpassen</screeninfo>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/skr04-update-3804/konto4315.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>

        <para>Als Letztes sollte die Steuerliste unter
        <guimenu>System</guimenu> → <guisubmenu>Steuern</guisubmenu> →
        <guimenuitem>Bearbeiten</guimenuitem> kontrolliert werden. Zum
        Vergleich der Screenshot.</para>

        <screenshot>
          <screeninfo>Steuerliste vergleichen</screeninfo>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/skr04-update-3804/steuerliste.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </sect2>
    </sect1>

    <sect1 id="config.bilanz">
      <title>Verhalten des Bilanzberichts</title>

      <para>Bis Version 3.0 wurde "closedto" ("Bücher schließen zum") als
      Grundlage für das Startdatum benutzt. Schließt man die Bücher allerdings
      monatsweise führt dies zu falschen Werten.</para>

      <para>In der Mandantenkonfiguration kann man dieses Verhalten genau
      einstellen indem man:</para>

      <itemizedlist>
        <listitem>
          <para>weiterhin closed_to benutzt (Default, es ändert sich nichts zu
          vorher)</para>
        </listitem>

        <listitem>
          <para>immer den Jahresanfang nimmt (1.1. relativ zum
          Stichtag)</para>
        </listitem>

        <listitem>
          <para>immer die letzte Eröffnungsbuchung als Startdatum nimmt</para>

          <para>- mit Jahresanfang als Alternative wenn es keine EB-Buchungen
          gibt</para>

          <para>- oder mit "alle Buchungen" als Alternative"</para>
        </listitem>

        <listitem>
          <para>mit Jahresanfang als Alternative wenn es keine EB-Buchungen
          gibt</para>
        </listitem>

        <listitem>
          <para>immer alle Buchungen seit Beginn der Datenbank nimmt</para>
        </listitem>
      </itemizedlist>

      <para>Folgende Hinweise zu den Optionen: Das "Bücher schließen Datum"
      ist sinnvoll, wenn man nur komplette Jahre schließt. Bei Wirtschaftsjahr
      = Kalendarjahr entspricht dies aber auch dem Jahresanfang. "Alle
      Buchungen" kann z.B. sinnvoll sein wenn man ohne Jahresabschluß
      durchbucht. Eröffnungsbuchung mit "alle Buchungen" als Fallback ist z.B.
      sinnvoll, wenn man am sich Anfang des zweiten Buchungsjahres befindet,
      und noch keinen Jahreswechsel und auch noch keine EB-Buchungen hat. Bei
      den Optionen mit EB-Buchungen wird vorausgesetzt, daß diese immer am 1.
      Tag des Wirtschaftsjahres gebucht werden. Zur Sicherheit wird das
      Startdatum im Bilanzbericht jetzt zusätzlich zum Stichtag mit angezeigt.
      Das hilft auch bei der Kontrolle für den Abgleich mit der GuV bzw.
      Erfolgsrechnung.</para>
    </sect1>

    <sect1 id="config.erfolgsrechnung">
      <title>Erfolgsrechnung</title>

      <para>Seit der Version 3.4.1 existiert in kivitendo der Bericht
      <emphasis role="bold"> Erfolgsrechnung</emphasis>.</para>

      <para>Die Erfolgsrechnung kann in der Mandantenkonfiguration unter
      Features an- oder abgeschaltet werden. Mit der Einstellung
      <varname>default_manager = swiss </varname> in der
      <filename>config/kivitendo.conf</filename> wird beim neu Erstellen einer
      Datenbank automatisch die Anzeige der Erfolgsrechnung im Menü
      <guimenu>Berichte </guimenu> ausgewählt und ersetzt dort die GUV.</para>

      <para>Im Gegensatz zur GUV werden bei der Erfolgsrechnung sämtliche
      Aufwands- und Erlöskonten einzeln aufgelistet (analog zur Bilanz),
      sortiert nach ERTRAG und AUFWAND.</para>

      <para>Bei den Konteneinstellungen muss bei jedem Konto, das in der
      Erfolgsrechnung erscheinen soll, unter <varname>Sonstige
      Einstellungen/Erfolgsrechnung</varname> entweder
      <literal>01.Ertrag</literal> oder <literal>06.Aufwand</literal>
      ausgewählt werden.</para>

      <para>Wird bei einem Erlöskonto <literal>06.Aufwand</literal>
      ausgewählt, so wird dieses Konto als Aufwandsminderung unter AUFWAND
      aufgelistet.</para>

      <para>Wird bei einem Aufwandskonto <literal>01.Ertrag</literal>
      ausgewählt, so wird dieses Konto als Ertragsminderung unter ERTRAG
      aufgelistet.</para>

      <para>Soll bei einer bereits bestehenden Buchhaltung in Zukunft
      zusätzlich die Erfolgsrechnung als Bericht verwendet werden, so müssen
      die Einstellungen zu allen Erlös- und Aufwandskonten unter
      <varname>Sonstige Einstellungen/Erfolgsrechnung</varname> überprüft und
      allenfalls neu gesetzt werden.</para>
    </sect1>

    <sect1 id="config.rounding">
      <title>Rundung in Verkaufsbelegen</title>

      <para>In der Schweiz hat die kleinste aktuell benutzte Münze den Wert
      von 5 Rappen (0.05 CHF).</para>

      <para>Auch wenn im elektronischen Zahlungsverkehr Beträge mit einer
      Genauigkeit von 0.01 CHF verwendet werden können, ist es trotzdem nach
      wie vor üblich, Rechnungen mit auf 0.05 CHF gerundeten Beträgen
      auszustellen.</para>

      <para>In kivitendo kann seit der Version 3.4.1 die Einstellung für eine
      solche Rundung pro Mandant / Datenbank festgelegt werden.</para>

      <para>Die Einstellung wird beim Erstellen der Datenbank bei
      <literal>Genauigkeit</literal> festgelegt. Sie kann anschliessend über
      das Webinterface von kivitendo nicht mehr verändert werden.</para>

      <para>Abhängig vom Wert für <varname>default_manager</varname> in
      <filename>config/kivitendo.conf</filename> werden dabei folgende Werte
      voreingestellt:</para>

      <itemizedlist>
        <listitem>
          <para>0.05 (default_manager = swiss)</para>
        </listitem>

        <listitem>
          <para>0.01 (default_manager = german)</para>
        </listitem>
      </itemizedlist>

      <para>Der Wert wird in der Datenbank in der Tabelle <varname>defaults
      </varname>in der Spalte <varname>precision</varname> gespeichert.</para>

      <para>In allen Verkaufsangeboten, Verkaufsaufträgen, Verkaufsrechnungen
      und Verkaufsgutschriften wird der Endbetrag inkl. MWST gerundet, wenn
      dieser nicht der eingestellten Genauigkeit entspricht.</para>

      <para>Beim Buchen einer Verkaufsrechnung wird der Rundungsbetrag
      automatisch auf die in der Mandantenkonfiguration festgelegten
      Standardkonten für Rundungserträge bzw. Rundungsaufwendungen
      gebucht.</para>

      <para>(Die berechnete MWST wird durch den Rundungsbetrag nicht mehr
      verändert.)</para>

      <para>Die in den Druckvorlagen zur Verfügung stehenden Variablen
      <varname>quototal</varname>, <varname>ordtotal</varname> bzw.
      <varname>invtotal</varname> enthalten den gerundeten Betrag.</para>

      <para><emphasis role="bold">Achtung:</emphasis> Werden Verkaufsbelege in
      anderen Währungen als der Standardwährung erstellt, so muss in kivitendo
      ab Version 3.4.1 die Genauigkeit 0.01 verwendet werden.</para>

      <para>Das heisst, Firmen in der Schweiz, die teilweise
      Verkaufsrechnungen in Euro oder anderen Währungen erstellen wollen,
      müssen beim Erstellen der Datenbank als Genauigkeit 0.01 wählen und
      können zur Zeit die 5er Rundung noch nicht nutzen.</para>
    </sect1>

    <sect1 id="config.client">
      <title>Einstellungen pro Mandant</title>

      <para>Einige Einstellungen können von einem Benutzer mit dem <link
      linkend="Zusammenhänge">Recht</link> "Administration (Für die Verwaltung
      der aktuellen Instanz aus einem Userlogin heraus)" gemacht werden. Diese
      Einstellungen sind dann für die aktuellen Mandanten-Datenbank gültig.
      Die Einstellungen sind unter <guimenu>System</guimenu> →
      <guisubmenu>Mandantenkonfiguration</guisubmenu> erreichbar.</para>

      <para>Bitte beachten Sie die Hinweise zu den einzelnen Einstellungen.
      Einige Einstellungen sollten nicht ohne Weiteres im laufenden Betrieb
      geändert werden (siehe auch <link
      linkend="config.eur.inventory-system-perpetual">Bemerkungen zu
      Bestandsmethode</link>).</para>

      <para>Die Einstellungen <literal>show_bestbefore</literal> und
      <literal>payments_changeable</literal> aus dem Abschnitt
      <literal>features</literal> und die Einstellungen im Abschnitt
      <literal>datev_check</literal> (sofern schon vorhanden) der <link
      linkend="config.config-file">kivitendo-Konfigurationsdatei</link> werden
      bei einem Datenbankupdate einer älteren Version automatisch übernommen.
      Diese Einträge können danach aus der Konfigurationsdatei entfernt
      werden.</para>
    </sect1>

    <sect1 id="kivitendo-ERP-verwenden">
      <title>kivitendo ERP verwenden</title>

      <para>Nach erfolgreicher Installation ist der Loginbildschirm unter
      folgender URL erreichbar:</para>

      <para><ulink
      url="http://localhost/kivitendo-erp/login.pl">http://localhost/kivitendo-erp/login.pl</ulink></para>

      <para>Die Administrationsseite erreichen Sie unter:</para>

      <para><ulink
      url="http://localhost/kivitendo-erp/controller.pl?action=Admin/login">http://localhost/kivitendo-erp/controller.pl?action=Admin/login</ulink></para>
    </sect1>
  </chapter>

  <chapter id="features" xreflabel="Features und Funktionen">
    <title>Features und Funktionen</title>

    <sect1 id="features.periodic-invoices"
           xreflabel="Wiederkehrende Rechnungen">
      <title>Wiederkehrende Rechnungen</title>

      <sect2 id="features.periodic-invoices.introduction"
             xreflabel="Einführung in wiederkehrende Rechnungen">
        <title>Einführung</title>

        <para>Wiederkehrende Rechnungen werden als normale Aufträge definiert
        und konfiguriert, mit allen dazugehörigen Kunden- und Artikelangaben.
        Die konfigurierten Aufträge werden später automatisch in Rechnungen
        umgewandelt, so als ob man den Workflow benutzen würde, und auch die
        Auftragsnummer wird übernommen, sodass alle wiederkehrenden
        Rechnungen, die aus einem Auftrag erstellt wurden, später leicht
        wiederzufinden sind.</para>
      </sect2>

      <sect2 id="features.periodic-invoices.configuration"
             xreflabel="Konfiguration von wiederkehrenden Rechnungen">
        <title>Konfiguration</title>

        <para>Um einen Auftrag für wiederkehrende Rechnung zu konfigurieren,
        findet sich beim Bearbeiten des Auftrags ein neuer Knopf
        "Konfigurieren", der ein neues Fenster öffnet, in dem man die nötigen
        Parameter einstellen kann. Hinter dem Knopf wird außerdem noch
        angezeigt, ob der Auftrag als wiederkehrende Rechnung konfiguriert ist
        oder nicht.</para>

        <para>Folgende Parameter kann man konfigurieren:</para>

        <variablelist>
          <varlistentry>
            <term>Status</term>

            <listitem>
              <para>Bei aktiven Rechnungen wird automatisch eine Rechnung
              erstellt, wenn die Periodizität erreicht ist (z.B. am Anfang
              eines neuen Monats).</para>

              <para>Ist ein Auftrag nicht aktiv, so werden für ihn auch keine
              wiederkehrenden Rechnungen erzeugt. Stellt man nach längerer
              nicht-aktiver Zeit einen Auftrag wieder auf aktiv, wird beim
              nächsten Periodenwechsel für alle Perioden, seit der letzten
              aktiven Periode, jeweils eine Rechnung erstellt. Möchte man dies
              verhindern, muss man vorher das Startdatum neu setzen.</para>

              <para>Für gekündigte Aufträge werden nie mehr Rechnungen
              erstellt. Man kann sich diese Aufträge aber gesondert in den
              Berichten anzeigen lassen.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Periodizität</term>

            <listitem>
              <para>Ob monatlich, quartalsweise oder jährlich auf neue
              Rechnungen überprüft werden soll. Für jede Periode seit dem
              Startdatum wird überprüft, ob für die Periode (beginnend immer
              mit dem ersten Tag der Periode) schon eine Rechnung erstellt
              wurde. Unter Umständen können bei einem Startdatum in der
              Vergangenheit gleich mehrere Rechnungen erstellt werden.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Buchen auf</term>

            <listitem>
              <para>Das Forderungskonto, in der Regel "Forderungen aus
              Lieferungen und Leistungen". Das Gegenkonto ergibt sich aus den
              Buchungsgruppen der betreffenden Waren.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Startdatum</term>

            <listitem>
              <para>ab welchem Datum auf Rechnungserstellung geprüft werden
              soll</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Enddatum</term>

            <listitem>
              <para>ab wann keine Rechnungen mehr erstellt werden
              sollen</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Automatische Verlängerung um x Monate</term>

            <listitem>
              <para>Sollen die wiederkehrenden Rechnungen bei Erreichen des
              eingetragenen Enddatums weiterhin erstellt werden, so kann man
              hier die Anzahl der Monate eingeben, um die das Enddatum
              automatisch nach hinten geschoben wird.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Drucken</term>

            <listitem>
              <para>Sind Drucker konfiguriert, so kann man sich die erstellten
              Rechnungen auch gleich ausdrucken lassen.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>Nach Erstellung der Rechnungen kann eine E-Mail mit
        Informationen zu den erstellten Rechnungen verschickt werden.
        Konfiguriert wird dies in der <link
        linkend="config.config-file.sections-parameters">Konfigurationsdatei</link>
        <filename>config/kivitendo.conf</filename> im Abschnitt
        <varname>[periodic_invoices]</varname>.</para>
      </sect2>

      <sect2 id="features.periodic-invoices.variables">
        <title>Spezielle Variablen</title>

        <para>Um die erzeugten Rechnungen individualisieren zu können, werden
        beim Umwandeln des Auftrags in eine Rechnung einige speziell
        formatierte Variablen durch für die jeweils aktuelle
        Abrechnungsperiode gültigen Werte ersetzt. Damit ist es möglich, z.B.
        den Abrechnungszeitraum explizit auszuweisen. Eine Variable hat dabei
        die Syntax <literal>&lt;%variablenname%&gt;</literal>.</para>

        <para>Sofern es sich um eine Datumsvariable handelt, kann das
        Ausgabeformat weiter bestimmt werden, indem an den Variablennamen
        Formatoptionen angehängt werden. Die Syntax sieht dabei wie folgt aus:
        <literal>&lt;%variablenname FORMAT=Formatinformation%&gt;</literal>.
        Die zur verfügung stehenden Formatinformationen werden unten genauer
        beschrieben.</para>

        <para>Diese Variablen können auch beim automatischen Versand der
        erzeugten Rechnungen per E-Mail genutzt werden, indem sie in den
        Feldern für den Betreff oder die Nachricht verwendet werden.</para>

        <para>Diese Variablen werden in den folgenden Elementen des Auftrags
        ersetzt:</para>

        <itemizedlist>
          <listitem>
            <para>Bemerkungen</para>
          </listitem>

          <listitem>
            <para>Interne Bemerkungen</para>
          </listitem>

          <listitem>
            <para>Vorgangsbezeichnung</para>
          </listitem>

          <listitem>
            <para>In den Beschreibungs- und Langtextfeldern aller
            Positionen</para>
          </listitem>
        </itemizedlist>

        <para>Die zur Verfügung stehenden Variablen sind die Folgenden:</para>

        <variablelist>
          <varlistentry>
            <term><varname>&lt;%current_quarter%&gt;</varname>,
            <varname>&lt;%previous_quarter%&gt;</varname>,
            <varname>&lt;%next_quarter%&gt;</varname></term>

            <listitem>
              <para>Aktuelles, vorheriges und nächstes Quartal als Zahl
              zwischen <literal>1</literal> und <literal>4</literal>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>&lt;%current_month%&gt;</varname>,
            <varname>&lt;%previous_month%&gt;</varname>,
            <varname>&lt;%next_month%&gt;</varname></term>

            <listitem>
              <para>Aktueller, vorheriger und nächster Monat als Zahl zwischen
              <literal>1</literal> und <literal>12</literal>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>&lt;%current_month_long%&gt;</varname>,
            <varname>&lt;%previous_month_long%&gt;</varname>,
            <varname>&lt;%next_month_long%&gt;</varname></term>

            <listitem>
              <para>Aktueller, vorheriger und nächster Monat als Name
              (<literal>Januar</literal>, <literal>Februar</literal>
              etc.).</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>&lt;%current_year%&gt;</varname>,
            <varname>&lt;%previous_year%&gt;</varname>,
            <varname>&lt;%next_year%&gt;</varname></term>

            <listitem>
              <para>Aktuelles, vorheriges und nächstes Jahr als vierstellige
              Jahreszahl (<literal>2013</literal> etc.).</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>&lt;%period_start_date%&gt;</varname>,
            <varname>&lt;%period_end_date%&gt;</varname></term>

            <listitem>
              <para>Formatiertes Datum des ersten und letzten Tages im
              Abrechnungszeitraum (z.B. bei quartalsweiser Abrechnung und im
              ersten Quartal von 2013 wären dies der
              <literal>01.01.2013</literal> und
              <literal>31.03.2013</literal>).</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>Die invidiuellen Formatinformationen bestehen aus Paaren von
        Prozentzeichen und einem Buchstaben, welche beide zusammen durch den
        dazugehörigen Wert ersetzt werden. So wird z.B. <literal>%Y</literal>
        durch das viertstellige Jahr ersetzt. Alle möglichen Platzhalter
        sind:</para>

        <variablelist>
          <varlistentry>
            <term><varname>%a</varname></term>

            <listitem>
              <para>Der abgekürzte Wochentagsname.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%A</varname></term>

            <listitem>
              <para>Der ausgeschriebene Wochentagsname.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%b</varname></term>

            <listitem>
              <para>Der abgekürzte Monatsname.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%B</varname></term>

            <listitem>
              <para>Der ausgeschriebene Monatsname.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%C</varname></term>

            <listitem>
              <para>Das Jahrhundert (Jahr/100) als eine zweistellige
              Zahl.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%d</varname></term>

            <listitem>
              <para>Der Monatstag als Zahl zwischen 01 und 31.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%D</varname></term>

            <listitem>
              <para>Entspricht %m/%d/%y (amerikanisches Datumsformat).</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%e</varname></term>

            <listitem>
              <para>Wie %d (Monatstag als Zahl zwischen 1 und 31), allerdings
              werden führende Nullen durch Leerzeichen ersetzt.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%F</varname></term>

            <listitem>
              <para>Entspricht %Y-%m-%d (das ISO-8601-Datumsformat).</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%j</varname></term>

            <listitem>
              <para>Der Tag im Jahr als Zahl zwischen 001 und 366
              inklusive.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%m</varname></term>

            <listitem>
              <para>Der Monat als Zahl zwischen 01 und 12 inklusive.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%u</varname></term>

            <listitem>
              <para>Der Wochentag als Zahl zwischen 1 und 7 inklusive, wobei
              die 1 dem Montag entspricht.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%U</varname></term>

            <listitem>
              <para>Die Wochennummer als Zahl zwischen 00 und 53 inklusive,
              wobei der erste Sonntag im Jahr das Startdatum von Woche 01
              ist.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%V</varname></term>

            <listitem>
              <para>Die ISO-8601:1988-Wochennummer als Zahl zwischen 01 und 53
              inklusive, wobei Woche 01 die erste Woche, von der mindestens
              vier Tage im Jahr liegen; Montag ist erster Tag der
              Woche.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%w</varname></term>

            <listitem>
              <para>Der Wochentag als Zahl zwischen 0 und 6 inklusive, wobei
              die 0 dem Sonntag entspricht.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%W</varname></term>

            <listitem>
              <para>Die Wochennummer als Zahl zwischen 00 und 53 inklusive,
              wobei der erste Montag im Jahr das Startdatum von Woche 01
              ist.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%y</varname></term>

            <listitem>
              <para>Das Jahr als zweistellige Zahl zwischen 00 und 99
              inklusive.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%Y</varname></term>

            <listitem>
              <para>Das Jahr als vierstellige Zahl.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>%%</varname></term>

            <listitem>
              <para>Das Prozentzeichen selber.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>Anwendungsbeispiel für die Ausgabe, von welchem Monat und Jahr
        bis zu welchem Monat und Jahr die aktuelle Abrechnungsperiode dauert:
        <literal>Abrechnungszeitrum: &lt;%period_start_date FORMAT=%m/%Y%&gt;
        bis &lt;%period_end_date FORMAT=%m/%Y%&gt;</literal></para>

        <para>Beim automatischen Versand der Rechnugen via E-Mail können neben diesen speziellen Variablen auch einige Eigenschaften der
        Rechnung selber als Variablen im Betreff &amp; dem Text der E-Mails genutzt werden. Beispiele sind
        <varname>&lt;%invnumber%&gt;</varname> für die Rechnungsnummber oder <varname>&lt;transaction_description%&gt;</varname> für die
        Vorgangsbezeichnung. Diese Variablen stehen beim Erzeugen der Rechnung logischerweise noch nicht zur Verfügung.</para>
      </sect2>

      <sect2 id="features.periodic-invoices.reports">
        <title>Auflisten</title>

        <para>Unter Verkauf-&gt;Berichte-&gt;Aufträge finden sich zwei neue
        Checkboxen, "Wiederkehrende Rechnungen aktiv" und "Wiederkehrende
        Rechnungen inaktiv", mit denen man sich einen Überglick über die
        wiederkehrenden Rechnungen verschaffen kann.</para>
      </sect2>

      <sect2 id="features.periodic-invoices.task-server">
        <title>Erzeugung der eigentlichen Rechnungen</title>

        <para>Die zeitliche und periodische Überprüfung, ob eine
        wiederkehrende Rechnung automatisch erstellt werden soll, geschieht
        durch den <link linkend="config.task-server">Task-Server</link>, einen
        externen Dienst, der automatisch beim Start des Servers gestartet
        werden sollte.</para>
      </sect2>

      <sect2 id="features.periodic-invoices.create-for-current-month">
        <title>Erste Rechnung für aktuellen Monat erstellen</title>

        <para>Will man im laufenden Monat eine monatlich wiederkehrende
        Rechnung inkl. des laufenden Monats starten, stellt man das Startdatum
        auf den Monatsanfang und wartet ein paar Minuten, bis der Task-Server
        den neu konfigurieren Auftrag erkennt und daraus eine Rechnung
        generiert hat. Alternativ setzt man das Startdatum auf den
        Monatsersten des Folgemonats und erstellt die erste Rechnung direkt
        manuell über den Workflow.</para>
      </sect2>
    </sect1>

    <sect1 id="features.bank" xreflabel="bankerweiterung">
      <title>Bankerweiterung</title>

      <sect2 id="features.bank.introduction"
             xreflabel="Einführung in die Bankerweiterung">
        <title>Einführung</title>

        <para>Die Beschreibung der Bankerweiterung befindet sich derzeit noch
        im Wiki und soll von dort später hierhin übernommen werden:</para>

        <para><ulink
        url="http://redmine.kivitendo-premium.de/projects/forum/wiki/Bankerweiterung">http://redmine.kivitendo-premium.de/projects/forum/wiki/Bankerweiterung</ulink></para>
      </sect2>
    </sect1>

    <sect1 id="dokumentenvorlagen-und-variablen">
      <title>Dokumentenvorlagen und verfügbare Variablen</title>

      <sect2 id="dokumentenvorlagen-und-variablen.einführung">
        <title>Einführung</title>

        <para>Dies ist eine Auflistung der Standard-Dokumentenvorlagen und
        aller zur Bearbeitung verfügbaren Variablen. Eine Variable wird in
        einer Vorlage durch ihren Inhalt ersetzt, wenn sie in der Form
        <function>&lt;%variablenname%&gt;</function> verwendet wird. Für
        LaTeX- und HTML-Vorlagen kann man die Form dieser Tags auch verändern
        (siehe <xref
        linkend="dokumentenvorlagen-und-variablen.tag-style"/>).</para>

        <para>kivitendo unterstützt LaTeX-, HTML- und OpenDocument-Vorlagen.
        Sofern es nicht ausdrücklich eingeschränkt wird, gilt das im Folgenden
        gesagte für alle Vorlagenarten.</para>

        <para>Insgesamt sind technisch gesehen eine ganze Menge mehr Variablen
        verfügbar als hier aufgelistet werden. Die meisten davon können
        allerdings innerhalb einer solchen Vorlage nicht sinnvoll verwendet
        werden. Wenn eine Auflistung dieser Variablen gewollt ist, so kann
        diese wie folgt erhalten werden:</para>

        <itemizedlist>
          <listitem>
            <para><filename>SL/Form.pm</filename> öffnen und am Anfang die
            Zeile "<command>use Data::Dumper;</command>" einfügen.</para>
          </listitem>

          <listitem>
            <para>In <filename>Form.pm</filename> die Funktion
            <function>parse_template</function> suchen und hier die Zeile
            <command>print(STDERR Dumper($self));</command> einfügen.</para>
          </listitem>

          <listitem>
            <para>Einmal per Browser die gewünschte Vorlage "benutzen", z.B.
            ein PDF für eine Rechnung erzeugen.</para>
          </listitem>

          <listitem>
            <para>Im <filename>error.log</filename> Apache steht die Ausgabe
            der Variablen <varname>$self</varname> in der Form <varname>'key'
            =&gt; 'value',</varname>. Alle <varname>key</varname>s sind
            verfügbar.</para>
          </listitem>
        </itemizedlist>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.variablen-ausgeben">
        <title>Variablen ausgeben</title>

        <para>Um eine Variable auszugeben, müssen sie einfach nur zwischen die
        Tags geschrieben werden, also z.B.
        <varname>&lt;%variablenname%&gt;</varname>.</para>

        <para>Optional kann man auch mit Leerzeichen getrennte Flags angeben,
        die man aber nur selten brauchen wird. Die Syntax sieht also so aus:
        <varname>&lt;%variablenname FLAG1 FLAG2%&gt;</varname>. Momentan
        werden die folgenden Flags unterstützt:</para>

        <itemizedlist>
          <listitem>
            <para><option>NOFORMAT</option> gilt nur für Zahlenwerte und gibt
            den Wert ohne Formatierung, also ohne Tausendertrennzeichen mit
            mit einem Punkt als Dezimaltrennzeichen aus. Nützlich z.B., wenn
            damit in der Vorlage z.B. von LaTeX gerechnet werden soll.</para>
          </listitem>

          <listitem>
            <para><option>NOESCAPE</option> unterdrückt das Escapen von
            Sonderzeichen für die Vorlagensprache. Wenn also in einer
            Variablen bereits gültiger LaTeX-Code steht und dieser von LaTeX
            auch ausgewertet und nicht wortwörtlich angezeigt werden soll, so
            ist dieses Flag sinnvoll.</para>
          </listitem>
        </itemizedlist>

        <para>Beispiel:</para>

        <programlisting>&lt;%quototal NOFORMAT%&gt;</programlisting>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.verwendung-in-druckbefehlen">
        <title>Verwendung in Druckbefehlen</title>

        <para>In der Admininstration können Drucker definiert werden. Auch im
        dort eingebbaren Druckbefehl können die hier aufgelisteten Variablen
        und Kontrollstrukturen verwendet werden. Ihr Inhalt wird dabei nach
        den Regeln der gängigen Shells formatiert, sodass Sonderzeichen wie
        <function>`...`</function> nicht zu unerwünschtem Verhalten
        führen.</para>

        <para>Dies erlaubt z.B. die Definition eines Faxes als Druckerbefehl,
        für das die Telefonnummer eines Ansprechpartners als Teil der
        Kommandozeile verwendet wird. Für ein fiktives Kommando könnte das
        z.B. wie folgt aussehen:</para>

        <programlisting>send_fax --number &lt;%if cp_phone2%&gt;&lt;%cp_phone2%&gt;&lt;%else%&gt;&lt;%cp_phone1%&gt;&lt;%end%&gt;</programlisting>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.tag-style"
             xreflabel="Anfang und Ende der Tags verändern">
        <title>Anfang und Ende der Tags verändern</title>

        <para>Der Standardstil für Tags sieht vor, dass ein Tag mit dem
        Kleinerzeichen und einem Prozentzeichen beginnt und mit dem
        Prozentzeichen und dem Größerzeichen endet, beispielsweise
        <function>&lt;%customer%&gt;</function>. Da diese Form aber z.B. in
        LaTeX zu Problemen führen kann, weil das Prozentzeichen dort
        Kommentare einleitet, kann pro HTML- oder LaTeX-Dokumentenvorlage der
        Stil umgestellt werden.</para>

        <para>Dazu werden in die Datei Zeilen geschrieben, die mit dem für das
        Format gültigen Kommentarzeichen anfangen, dann
        <function>config:</function> enthalten, die entsprechende Option
        setzen und bei HTML-Dokumentenvorlagen mit dem Kommentarendzeichen
        enden. Beispiel für LaTeX:</para>

        <programlisting>% config: tag-style=($ $)</programlisting>

        <para>Dies würde kivitendo dazu veranlassen, Variablen zu ersetzen,
        wenn sie wie folgt aussehen: <function>($customer$)</function>. Das
        äquivalente Beispiel für HTML-Dokumentenvorlagen sieht so aus:</para>

        <programlisting>&lt;!-- config: tag-style=($ $) --&gt;</programlisting>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.zuordnung-dateinamen">
        <title>Zuordnung von den Dateinamen zu den Funktionen</title>

        <para>Diese folgende kurze Auflistung zeigt, welche Vorlage bei
        welcher Funktion ausgelesen wird. Dabei ist die Dateiendung
        "<filename>.ext</filename>" geeignet zu ersetzen:
        "<filename>.tex</filename>" für LaTeX-Vorlagen und
        "<filename>.odt</filename>" für OpenDocument-Vorlagen.</para>

        <variablelist>
          <varlistentry>
            <term><filename>bin_list.ext</filename></term>

            <listitem>
              <para>Lagerliste</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>check.ext</filename></term>

            <listitem>
              <para>?</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>invoice.ext</filename></term>

            <listitem>
              <para>Rechnung</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>packing_list.ext</filename></term>

            <listitem>
              <para>Packliste</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>pick_list.ext</filename></term>

            <listitem>
              <para>Sammelliste</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>purchase_delivery_order.ext</filename></term>

            <listitem>
              <para>Lieferschein (Einkauf)</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>purcharse_order.ext</filename></term>

            <listitem>
              <para>Bestellung an Lieferanten</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>request_quotation.ext</filename></term>

            <listitem>
              <para>Anfrage an Lieferanten</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>sales_delivery_order.ext</filename></term>

            <listitem>
              <para>Lieferschein (Verkauf)</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>sales_order.ext</filename></term>

            <listitem>
              <para>Bestellung</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>sales_quotation.ext</filename></term>

            <listitem>
              <para>Angebot an Kunden</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>zahlungserinnerung.ext</filename></term>

            <listitem>
              <para>Mahnung (Dateiname im Programm konfigurierbar)</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><filename>zahlungserinnerung_invoice.ext</filename></term>

            <listitem>
              <para>Rechnung über Mahngebühren (Dateiname im Programm
              konfigurierbar)</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.dateinamen-erweitert">
        <title>Sprache, Drucker und E-Mail</title>

        <para>Angeforderte Sprache und Druckerkürzel in den Dateinamen mit
        eingearbeitet. So wird aus der Vorlage
        <filename>sales_order.ext</filename> bei Sprache
        <function>de</function> und Druckerkürzel <function>lpr2</function>
        der Vorlagenname <filename>sales_order_de_lpr2.ext</filename>.
        Zusätzlich können für E-Mails andere Vorlagen erstellt werden, diese
        bekommen dann noch das Kürzel <filename>_email</filename>, der
        vollständige Vorlagenname wäre dann
        <filename>sales_order_email_de_lpr2.ext</filename>. In allen Fällen
        kann eine Standarddatei <filename>default.ext</filename> hinterlegt
        werden. Diese wird verwendet, wenn keine der anderen Varianten
        gefunden wird.</para>

        <para>Die vollständige Suchreihenfolge für einen Verkaufsauftrag mit
        der Sprache "de" und dem Drucker "lpr2", der per E-Mail im Format PDF
        verschickt wird, ist:</para>

        <orderedlist>
          <listitem>
            <para><filename>sales_order_email_de_lpr2.tex</filename></para>
          </listitem>

          <listitem>
            <para><filename>sales_order_de_lpr2.tex</filename></para>
          </listitem>

          <listitem>
            <para><filename>sales_order.tex</filename></para>
          </listitem>

          <listitem>
            <para><filename>default.tex</filename></para>
          </listitem>
        </orderedlist>

        <para>Die kurzen Varianten dieser Vorlagentitel müssen dann entweder
        Standardwerte anzeigen, oder die angeforderten Werte selbst auswerten,
        siehe dazu <xref
        linkend="dokumentenvorlagen-und-variablen.allgemeine-variablen.meta"/>.</para>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.allgemeine-variablen">
        <title>Allgemeine Variablen, die in allen Vorlagen vorhanden
        sind</title>

        <sect3 id="dokumentenvorlagen-und-variablen.allgemeine-variablen.meta"
               xreflabel="Metainformationen zur angeforderten Vorlage">
          <title>Metainformationen zur angeforderten Vorlage</title>

          <para>Diese Variablen liefern Informationen darüber welche Variante
          einer Vorlage der Benutzer angefragt hat. Sie sind nützlich für
          Vorlagenautoren, die aus einer zentralen Layoutvorlage die einzelnen
          Formulare einbinden möchten.</para>

          <variablelist>
            <varlistentry>
              <term><varname>template_meta.formname</varname></term>

              <listitem>
                <para>Basisname der Vorlage. Identisch mit der <link
                linkend="dokumentenvorlagen-und-variablen.zuordnung-dateinamen">Zurordnung
                zu den Dateinamen</link> ohne die Erweiterung. Ein
                Verkaufsauftrag enthält hier
                <constant>sales_order</constant>.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>template_meta.language.description</varname></term>

              <listitem>
                <para>Beschreibung der verwendeten Sprache</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>template_meta.language.template_code</varname></term>

              <listitem>
                <para>Vorlagenkürzel der verwendeten Sprache, identisch mit
                dem Kürzel das im Dateinamen verwendetet wird.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>template_meta.language.output_numberformat</varname></term>

              <listitem>
                <para>Zahlenformat der verwendeten Sprache in der Form
                "<constant>1.000,00</constant>". Experimentell! Nur
                interessant für Vorlagen die mit unformatierten Werten
                arbeiten.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>template_meta.language.output_dateformat</varname></term>

              <listitem>
                <para>Datumsformat der verwendeten Sprache in der Form
                "<constant>dd.mm.yyyy</constant>". Experimentell! Nur
                interessant für Vorlagen die mit unformatierten Werten
                arbeiten.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>template_meta.format</varname></term>

              <listitem>
                <para>Das angeforderte Format. Kann im Moment die Werte
                <constant>pdf</constant>, <constant>postscript</constant>,
                <constant>html</constant>, <constant>opendocument</constant>,
                <constant>opendocument_pdf</constant> und
                <constant>excel</constant> enthalten.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>template_meta.extension</varname></term>

              <listitem>
                <para>Dateierweiterung, wie im Dateinamen. Wird aus
                <constant>format</constant> entschieden.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>template_meta.media</varname></term>

              <listitem>
                <para>Ausgabemedium. Kann zur Zeit die Werte
                <constant>screen</constant> für Bildschirm,
                <constant>email</constant> für E-Mail (triggert das
                <constant>_email</constant> Kürzel im Dateinamen),
                <constant>printer</constant> für Drucker, und
                <constant>queue</constant> für Warteschlange enthalten.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>template_meta.printer.description</varname></term>

              <listitem>
                <para>Beschreibung des ausgewählten Druckers</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>template_meta.printer.template_code</varname></term>

              <listitem>
                <para>Vorlagenürzel des ausgewählten Druckers, identisch mit
                dem Kürzel das im Dateinamen verwendetet wird.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>template_meta.tmpfile</varname></term>

              <listitem>
                <para>Datei-Prefix für temporäre Dateien.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.allgemeine-variablen.kunden-lieferanten">
          <title>Stammdaten von Kunden und Lieferanten</title>

          <variablelist>
            <varlistentry>
              <term><varname>account_number</varname></term>

              <listitem>
                <para>Kontonummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>bank</varname></term>

              <listitem>
                <para>Name der Bank</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>bank_code</varname></term>

              <listitem>
                <para>Bankleitzahl</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>bic</varname></term>

              <listitem>
                <para>Bank-Identifikations-Code (Bank Identifier Code,
                BIC)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>business</varname></term>

              <listitem>
                <para>Kunden-/Lieferantentyp</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>city</varname></term>

              <listitem>
                <para>Stadt</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>contact</varname></term>

              <listitem>
                <para>Kontakt</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>country</varname></term>

              <listitem>
                <para>Land</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>c_vendor_id</varname></term>

              <listitem>
                <para>Lieferantennummer beim Kunden (nur Kunden)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>v_customer_id</varname></term>

              <listitem>
                <para>Kundennummer beim Lieferanten (nur Lieferanten)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cp_email</varname></term>

              <listitem>
                <para>Email des Ansprechpartners</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cp_givenname</varname></term>

              <listitem>
                <para>Vorname des Ansprechpartners</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cp_greeting</varname></term>

              <listitem>
                <para>Anrede des Ansprechpartners</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cp_name</varname></term>

              <listitem>
                <para>Name des Ansprechpartners</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cp_phone1</varname></term>

              <listitem>
                <para>Telefonnummer 1 des Ansprechpartners</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cp_phone2</varname></term>

              <listitem>
                <para>Telefonnummer 2 des Ansprechpartners</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cp_title</varname></term>

              <listitem>
                <para>Titel des Ansprechpartners</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>creditlimit</varname></term>

              <listitem>
                <para>Kreditlimit</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>customeremail</varname></term>

              <listitem>
                <para>Email des Kunden; nur für Kunden</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>customerfax</varname></term>

              <listitem>
                <para>Faxnummer des Kunden; nur für Kunden</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>customernotes</varname></term>

              <listitem>
                <para>Bemerkungen beim Kunden; nur für Kunden</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>customernumber</varname></term>

              <listitem>
                <para>Kundennummer; nur für Kunden</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>customerphone</varname></term>

              <listitem>
                <para>Telefonnummer des Kunden; nur für Kunden</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>discount</varname></term>

              <listitem>
                <para>Rabatt</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>email</varname></term>

              <listitem>
                <para>Emailadresse</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>fax</varname></term>

              <listitem>
                <para>Faxnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>gln</varname></term>

              <listitem>
                <para>GLN (Globale Lokationsnummer)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>greeting</varname></term>

              <listitem>
                <para>Anrede</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>homepage</varname></term>

              <listitem>
                <para>Homepage</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>iban</varname></term>

              <listitem>
                <para>Internationale Kontonummer (International Bank Account
                Number, IBAN)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>language</varname></term>

              <listitem>
                <para>Sprache</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>name</varname></term>

              <listitem>
                <para>Firmenname</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>natural_person</varname></term>

              <listitem>
                <para>Flag "natürliche Person"; Siehe auch
                <xref linkend="dokumentenvorlagen-und-variablen.anrede"/></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>payment_description</varname></term>

              <listitem>
                <para>Name der Zahlart</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>payment_terms</varname></term>

              <listitem>
                <para>Zahlungskonditionen</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>phone</varname></term>

              <listitem>
                <para>Telefonnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptocity</varname></term>

              <listitem>
                <para>Stadt (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptocontact</varname></term>

              <listitem>
                <para>Kontakt (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptocountry</varname></term>

              <listitem>
                <para>Land (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptodepartment_1</varname></term>

              <listitem>
                <para>Abteilung 1 (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptodepartment_2</varname></term>

              <listitem>
                <para>Abteilung 2 (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptoemail</varname></term>

              <listitem>
                <para>Email (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptofax</varname></term>

              <listitem>
                <para>Fax (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptogln</varname></term>

              <listitem>
                <para>GLN (Globale Lokationsnummer) (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptoname</varname></term>

              <listitem>
                <para>Firmenname (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptophone</varname></term>

              <listitem>
                <para>Telefonnummer (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptostreet</varname></term>

              <listitem>
                <para>Straße und Hausnummer (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shiptozipcode</varname></term>

              <listitem>
                <para>Postleitzahl (Lieferadresse) <link
                linkend="dokumentenvorlagen-und-variablen.anmerkung-shipto">*</link></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>street</varname></term>

              <listitem>
                <para>Straße und Hausnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>taxnumber</varname></term>

              <listitem>
                <para>Steuernummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>ustid</varname></term>

              <listitem>
                <para>Umsatzsteuer-Identifikationsnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>vendoremail</varname></term>

              <listitem>
                <para>Email des Lieferanten; nur für Lieferanten</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>vendorfax</varname></term>

              <listitem>
                <para>Faxnummer des Lieferanten; nur für Lieferanten</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>vendornotes</varname></term>

              <listitem>
                <para>Bemerkungen beim Lieferanten; nur für Lieferanten</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>vendornumber</varname></term>

              <listitem>
                <para>Lieferantennummer; nur für Lieferanten</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>vendorphone</varname></term>

              <listitem>
                <para>Telefonnummer des Lieferanten; nur für
                Lieferanten</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>zipcode</varname></term>

              <listitem>
                <para>Postleitzahl</para>
              </listitem>
            </varlistentry>
          </variablelist>

          <note id="dokumentenvorlagen-und-variablen.anmerkung-shipto">
            <para>Anmerkung: Sind die <varname>shipto*</varname>-Felder in den
            Stammdaten nicht eingetragen, so haben die Variablen
            <varname>shipto*</varname> den gleichen Wert wie die die
            entsprechenden Variablen der Lieferdaten. Das bedeutet, dass sich
            einige <varname>shipto*</varname>-Variablen so nicht in den
            Stammdaten wiederfinden sondern schlicht Kopien der
            Lieferdatenvariablen sind (z.B.
            <varname>shiptocontact</varname>).</para>
          </note>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.allgemein-bearbeiter">
          <title>Informationen über den Bearbeiter</title>

          <variablelist>
            <varlistentry>
              <term><varname>employee_address</varname></term>

              <listitem>
                <para>Adressfeld</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>employee_businessnumber</varname></term>

              <listitem>
                <para>Firmennummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>employee_company</varname></term>

              <listitem>
                <para>Firmenname</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>employee_co_ustid</varname></term>

              <listitem>
                <para>Usatzsteuer-Identifikationsnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>employee_duns</varname></term>

              <listitem>
                <para>DUNS-Nummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>employee_email</varname></term>

              <listitem>
                <para>Email</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>employee_fax</varname></term>

              <listitem>
                <para>Fax</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>employee_name</varname></term>

              <listitem>
                <para>voller Name</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>employee_signature</varname></term>

              <listitem>
                <para>Signatur</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>employee_taxnumber</varname></term>

              <listitem>
                <para>Steuernummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>employee_tel</varname></term>

              <listitem>
                <para>Telefonnummer</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.allgemein-verkaeufer">
          <title>Informationen über den Verkäufer</title>

          <variablelist>
            <varlistentry>
              <term><varname>salesman_address</varname></term>

              <listitem>
                <para>Adressfeld</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>salesman_businessnumber</varname></term>

              <listitem>
                <para>Firmennummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>salesman_company</varname></term>

              <listitem>
                <para>Firmenname</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>salesman_co_ustid</varname></term>

              <listitem>
                <para>Usatzsteuer-Identifikationsnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>salesman_duns</varname></term>

              <listitem>
                <para>DUNS-Nummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>salesman_email</varname></term>

              <listitem>
                <para>Email</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>salesman_fax</varname></term>

              <listitem>
                <para>Fax</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>salesman_name</varname></term>

              <listitem>
                <para>voller Name</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>salesman_signature</varname></term>

              <listitem>
                <para>Signatur</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>salesman_taxnumber</varname></term>

              <listitem>
                <para>Steuernummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>salesman_tel</varname></term>

              <listitem>
                <para>Telefonnummer</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.allgemein-steuern">
          <title>Variablen für die einzelnen Steuern</title>

          <variablelist>
            <varlistentry>
              <term><varname>tax</varname></term>

              <listitem>
                <para>Steuer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>taxbase</varname></term>

              <listitem>
                <para>zu versteuernder Betrag</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>taxdescription</varname></term>

              <listitem>
                <para>Name der Steuer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>taxrate</varname></term>

              <listitem>
                <para>Steuersatz</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.allgemein-lieferbedingungen">
          <title>Variablen für Lieferbedingungen</title>

          <variablelist>
            <varlistentry>
              <term><varname>delivery_term</varname></term>

              <listitem>
                <para>Datenbank-Objekt der Lieferbedingung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>delivery_term.description</varname></term>

              <listitem>
                <para>Beschreibung der Lieferbedingung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>delivery_term.description_long</varname></term>

              <listitem>
                <para>Langtext bzw. übersetzter Langtext der
                Lieferbedingung</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.abweichende-rechnungsadresse">
          <title>Informationen über abweichende Rechnungsadressen (nur Verkaufsbelege)</title>

          <para>
            Abweichende Rechnungsadressen gibt es nur in Verkaufsbelegen. Die entsprechenden Variablen sind nur dann mit Inhalt gefüllt,
            wenn im Beleg eine abweichende Rechnungsadresse ausgewählt wurde. Ob eine Adresse überhaupt ausgewählt wurde, kann über die
            Variable <literal>billing_address_id</literal> getestet werden, die die Datenbank-ID der abweichenden Rechnungsadresse enthält,
            wenn eine ausgewählt ist.
          </para>

          <para>
            Die Variablennamen starten alle mit dem Präfix <literal>billing_address_</literal> und heißen anschließend so, wie ihre Pendants
            aus der Standard-Rechnungsadresse des Kunden. Beispiel: die Postleitzahl, die in der normalen Rechnungsadresse in
            <literal>zipcode</literal> steht, steht für die abweichende Rechnungsadresse in <literal>billing_address_zipcode</literal>.
          </para>

          <para>
            Die folgenden Variablen stehen so zur Verfügung: <literal>billing_address_name</literal>,
            <literal>billing_address_department_1</literal>, <literal>billing_address_department_2</literal>,
            <literal>billing_address_contact</literal>, <literal>billing_address_street</literal>,
            <literal>billing_address_zipcode</literal>, <literal>billing_address_city</literal>, <literal>billing_address_country</literal>,
            <literal>billing_address_gln</literal>, <literal>billing_address_email</literal>, <literal>billing_address_phone</literal> und
            <literal>billing_address_fax</literal>.
          </para>
        </sect3>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.invoice">
        <title>Variablen in Rechnungen</title>

        <sect3 id="dokumentenvorlagen-und-variablen.invoice-allgemein">
          <title>Allgemeine Variablen</title>

          <variablelist>
            <varlistentry>
              <term><varname>creditremaining</varname></term>

              <listitem>
                <para>Verbleibender Kredit</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>currency</varname></term>

              <listitem>
                <para>Währung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cusordnumber</varname></term>

              <listitem>
                <para>Bestellnummer beim Kunden</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>deliverydate</varname></term>

              <listitem>
                <para>Lieferdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>duedate</varname></term>

              <listitem>
                <para>Fälligkeitsdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>globalprojectnumber</varname></term>

              <listitem>
                <para>Projektnummer des ganzen Beleges</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>globalprojectdescription</varname></term>

              <listitem>
                <para>Projekbeschreibung des ganzen Beleges</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>intnotes</varname></term>

              <listitem>
                <para>Interne Bemerkungen</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>invdate</varname></term>

              <listitem>
                <para>Rechnungsdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>invnumber</varname></term>

              <listitem>
                <para>Rechnungsnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>invtotal</varname></term>

              <listitem>
                <para>gesamter Rechnungsbetrag</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>notes</varname></term>

              <listitem>
                <para>Bemerkungen der Rechnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>orddate</varname></term>

              <listitem>
                <para>Auftragsdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>ordnumber</varname></term>

              <listitem>
                <para>Auftragsnummer, wenn die Rechnung aus einem Auftrag
                erstellt wurde</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>payment_description</varname></term>

              <listitem>
                <para>Name der Zahlart</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>payment_terms</varname></term>

              <listitem>
                <para>Zahlungskonditionen</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>quodate</varname></term>

              <listitem>
                <para>Angebotsdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>quonumber</varname></term>

              <listitem>
                <para>Angebotsnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>rounding</varname></term>

              <listitem>
                <para>Betrag, um den <varname>invtotal</varname> gerundet
                wurde (kann positiv oder negativ sein)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shippingpoint</varname></term>

              <listitem>
                <para>Versandort</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>shipvia</varname></term>

              <listitem>
                <para>Transportmittel</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>subtotal</varname></term>

              <listitem>
                <para>Zwischensumme aller Posten ohne Steuern</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>total</varname></term>

              <listitem>
                <para>Restsumme der Rechnung (Summe abzüglich bereits
                bezahlter Posten)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>transaction_description</varname></term>

              <listitem>
                <para>Vorgangsbezeichnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>transdate</varname></term>

              <listitem>
                <para>Auftragsdatum wenn die Rechnung aus einem Auftrag
                erstellt wurde</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3>
          <title>Variablen für die schweizer QR-Rechnung</title>

          <para>Diese Variablen können mit dem LaTeX Modul qrbill verwendet
          werden: <ulink
          url="https://ctan.org/pkg/qrbill?lang=de">https://ctan.org/pkg/qrbill?lang=de</ulink></para>

          <para>Für die Erstellung von QR-Rechnungen mit OpenDocument Vorlagen
          siehe: <xref linkend="OpenDocument-Vorlagen"/></para>

          <variablelist>
            <varlistentry>
              <term>qrbill_iban</term>

              <listitem>
                <para>IBAN/QR-IBAN des Rechnungsstellers, aus <emphasis>System
                → Bankkonten</emphasis></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>qrbill_biller_countrycode</term>

              <listitem>
                <para>Länderkürzel des Rechnungsstellers gem. ISO 3166, aus
                <emphasis>Mandantenkonfiguration → Firmenname und
                -adresse</emphasis></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>qrbill_customer_countrycode</term>

              <listitem>
                <para>Länderkürzel des Rechnungsempfängers gem. ISO 3166, aus
                der jeweiligen Rechnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>qrbill_amount</term>

              <listitem>
                <para>Betrag für die QR-Rechnung (Zahl ohne
                Tausendertrennzeichen mit zwei Nachkommastellen), entsprechend
                total</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>qr_reference</term>

              <listitem>
                <para>QR-Referenz der jeweiligen Rechnung, sofern in der
                <emphasis>Mandantenkonfiguration → Features → Variante QR-IBAN
                mit QR-Referenz erzeugen</emphasis> aktiviert ist</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.invoice-posten">
          <title>Variablen für jeden Posten auf der Rechnung</title>

          <variablelist>
            <varlistentry>
              <term><varname>bin</varname></term>

              <listitem>
                <para>Stellage</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>description</varname></term>

              <listitem>
                <para>Artikelbeschreibung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cusordnumber_oe</varname></term>

              <listitem>
                <para>Bestellnummer des Kunden aus dem Auftrag, aus dem der
                Posten ursprünglich stammt (nur Verkauf)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>discount</varname></term>

              <listitem>
                <para>Rabatt als Betrag</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>discount_sub</varname></term>

              <listitem>
                <para>Zwischensumme mit Rabatt</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>donumber_do</varname></term>

              <listitem>
                <para>Lieferscheinnummer des Lieferscheins, aus dem die
                Position ursprünglich stammt, wenn die Rechnung im Rahmen des
                Workflows aus einem Lieferschein erstellt wurde.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>drawing</varname></term>

              <listitem>
                <para>Zeichnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>ean</varname></term>

              <listitem>
                <para>EAN-Code</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>image</varname></term>

              <listitem>
                <para>Grafik</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>linetotal</varname></term>

              <listitem>
                <para>Zeilensumme (Anzahl * Einzelpreis)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>longdescription</varname></term>

              <listitem>
                <para>Langtext, vorbelegt mit dem Feld Bemerkungen der entsprechenden Ware</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>microfiche</varname></term>

              <listitem>
                <para>Mikrofilm</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>netprice</varname></term>

              <listitem>
                <para>Alternative zu <varname>sellprice</varname>, aber
                <varname>netprice</varname> entspricht dem effektiven
                Einzelpreis und beinhaltet Zeilenrabatt und Preisfaktor.
                <varname>netprice</varname> wird rückgerechnet aus Zeilensumme
                / Menge. Diese Variable ist nützlich, wenn man den gewährten
                Rabatt in der Druckvorlage nicht anzeigen möchte, aber Menge *
                Einzelpreis trotzdem die angezeigte Zeilensumme ergeben soll.
                <varname>netprice</varname> hat nichts mit Netto/Brutto im
                Sinne von Steuern zu tun.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>nodiscount_linetotal</varname></term>

              <listitem>
                <para>Zeilensumme ohne Rabatt</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>nodiscount_sub</varname></term>

              <listitem>
                <para>Zwischensumme ohne Rabatt</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>number</varname></term>

              <listitem>
                <para>Artikelnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>ordnumber_oe</varname></term>

              <listitem>
                <para>Auftragsnummer des Originalauftrags, aus dem der Posten
                ursprünglich stammt. Nützlich, wenn die Rechnung aus mehreren
                Lieferscheinen zusammengefasst wurde, oder wenn zwischendurch
                eine Sammelauftrag aus mehreren Aufträgen erstellt wurde. In
                letzterem Fall wird die unsprüngliche Auftragsnummer
                angezeigt.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>p_discount</varname></term>

              <listitem>
                <para>Rabatt in Prozent</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>partnotes</varname></term>

              <listitem>
                <para>Die beim Artikel gespeicherten Bemerkungen</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>partsgroup</varname></term>

              <listitem>
                <para>Warengruppe</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>price_factor</varname></term>

              <listitem>
                <para>Der Preisfaktor als Zahl, sofern einer eingestellt
                ist</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>price_factor_name</varname></term>

              <listitem>
                <para>Der Name des Preisfaktors, sofern einer eingestellt
                ist</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>projectnumber</varname></term>

              <listitem>
                <para>Projektnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>projectdescription</varname></term>

              <listitem>
                <para>Projektbeschreibung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>qty</varname></term>

              <listitem>
                <para>Anzahl</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>reqdate</varname></term>

              <listitem>
                <para>Lieferdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>runningnumber</varname></term>

              <listitem>
                <para>Position auf der Rechnung (1, 2, 3...)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>sellprice</varname></term>

              <listitem>
                <para>Verkaufspreis</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>serialnumber</varname></term>

              <listitem>
                <para>Seriennummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>tax_rate</varname></term>

              <listitem>
                <para>Steuersatz</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>transdate_do</varname></term>

              <listitem>
                <para>Datum des Lieferscheins, wenn die Rechnung im Rahmen des
                Workflows aus einem Lieferschein stammte.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>transdate_oe</varname></term>

              <listitem>
                <para>Datum des Auftrags, wenn die Rechnung im Rahmen des
                Workflows aus einem Auftrag erstellt wurde. Wenn es
                Sammelaufträge gab wird das Datum des ursprünglichen Auftrags
                genommen.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>transdate_quo</varname></term>

              <listitem>
                <para>Datum des Angebots, wenn die Position im Rahmen des
                Workflows aus einem Angebot stammte.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>unit</varname></term>

              <listitem>
                <para>Einheit</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>weight</varname></term>

              <listitem>
                <para>Gewicht</para>
              </listitem>
            </varlistentry>
          </variablelist>

          <para>Für jeden Posten gibt es ein Unterarray mit den Informationen
          über Lieferanten und Lieferantenartikelnummer, Kunde und Kundenartikelnummer
          und Kunden- bzw. Lieferantentyp und zugehöriger Artikelnummer mit Beschreibung
          und Langtext. Diese müssen jeweils mit
          einer <function>foreach</function>-Schleife ausgegeben werden, da
          für jeden Artikel mehrere Lieferanten- und Kundeninformationen bzw.
          kunden- bzw. lieferantenspezifische Informationen hinterlegt sein
          können. Die Variablen dafür lauten:</para>

          <variablelist>
            <varlistentry>
              <term><varname>make</varname></term>

              <listitem>
                <para>Lieferant</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>model</varname></term>

              <listitem>
                <para>Lieferantenartikelnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>mm_part_description</varname></term>

              <listitem>
                <para>Lieferantenartikelbeschreibung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>mm_part_longdescription</varname></term>

              <listitem>
                <para>Lieferantenartikelbeschreibung (Langtext)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>customer_make</varname></term>

              <listitem>
                <para>Kunde</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>customer_model</varname></term>

              <listitem>
                <para>Kundenartikelnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cm_part_description</varname></term>

              <listitem>
                <para>Kundenartikelbeschreibung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>cm_part_longdescription</varname></term>

              <listitem>
                <para>Kundenartikelbeschreibung (Langtext)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>business_make</varname></term>

              <listitem>
                <para>Kunden-/Lieferantentyp</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>business_model</varname></term>

              <listitem>
                <para>Kunden-/Lieferantentyp-spezifische Artikelnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>bm_part_description</varname></term>

              <listitem>
                <para>Kunden-/Lieferantentyp-spezifische Artikelbeschreibung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>bm_part_longdescription</varname></term>

              <listitem>
                <para>Kunden-/Lieferantentyp-spezifische Artikelbeschreibung (Langtext)</para>
              </listitem>
            </varlistentry>

          </variablelist>

          </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.invoice-posten-cvars">
          <title>Benutzerdefinierte Variablen für jeden Posten auf der Rechnung</title>
          <para>
            Für jeden Posten stehen auch die benutzerdefinierten Variablen zum
            Artikel zur Verfügung. Ihre Namen bestehen aus dem Präfix
            <varname>ic_cvar_</varname> und dem vom Benutzer festgelegten
            Variablennamen.
          </para>
          <para>
            Ebenso stehen die benutzerdefinierten Variablen zum positionsbezogenen
            Projekt unter dem Namen mit dem Präfix <varname>project_cvar_</varname>
            und dem vom Benutzer festgelegten Variablennamen zur Verfügung.
          </para>

        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.invoice-zahlungen">
          <title>Variablen für die einzelnen Zahlungseingänge</title>

          <variablelist>
            <varlistentry>
              <term><varname>payment</varname></term>

              <listitem>
                <para>Betrag</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>paymentaccount</varname></term>

              <listitem>
                <para>Konto</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>paymentdate</varname></term>

              <listitem>
                <para>Datum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>paymentmemo</varname></term>

              <listitem>
                <para>Memo</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>paymentsource</varname></term>

              <listitem>
                <para>Beleg</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.benutzerdefinierte-variablen-vc">
          <title>Benutzerdefinierte Kunden- und Lieferantenvariablen</title>

          <para>Die vom Benutzer definierten Variablen für Kunden und
          Lieferanten stehen beim Ausdruck von Einkaufs- und Verkaufsbelegen
          ebenfalls zur Verfügung. Ihre Namen setzen sich aus dem Präfix
          <varname>vc_cvar_</varname> und dem vom Benutzer festgelegten
          Variablennamen zusammen.</para>

          <para>Beispiel: Der Benutzer hat eine Variable namens
          <varname>number_of_employees</varname> definiert, die die Anzahl der
          Mitarbeiter des Unternehmens enthält. Diese Variable steht dann
          unter dem Namen <varname>vc_cvar_number_of_employees</varname> zur
          Verfügung.</para>

          <para>Die benutzerdefinierten Variablen der Lieferadressen stehen
          unter einem ähnlichen Namensschema zur Verfügung. Hier lautet der
          Präfix <varname>shiptocvar_</varname>.</para>

          <para>Analog stehen die benutzerdefinierten Variablen für
          Ansprechpersonen mit dem Namenspräfix <varname>cp_cvar_</varname>
          zur Verfügung.</para>

          <para>Auch für das globale Projekt des Belegs stehen die
          benutzerdefinierten Variablen mit dem Namenspräfix
          <varname>project_cvar_</varname> zur Verfügung.</para>

        </sect3>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.dunning">
        <title>Variablen in Mahnungen und Rechnungen über Mahngebühren</title>

        <sect3 id="dokumentenvorlagen-und-variablen.dunning-vorlagennamen">
          <title>Namen der Vorlagen</title>

          <para>Die Namen der Vorlagen werden im System-Menü vom Benutzer
          eingegeben. Wird für ein Mahnlevel die Option zur automatischen
          Erstellung einer Rechnung über die Mahngebühren und Zinsen
          aktiviert, so wird der Name der Vorlage für diese Rechnung aus dem
          Vorlagenname für diese Mahnstufe mit dem Zusatz
          <constant>_invoice</constant> gebildet. Weiterhin werden die Kürzel
          für die ausgewählte Sprache und den ausgewählten Drucker
          angehängt.</para>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.dunning-allgemein">
          <title>Allgemeine Variablen in Mahnungen</title>

          <para>Die Variablen des Bearbeiters, bzw. Verkäufers stehen wie
          gewohnt als <varname>employee_...</varname> bzw.
          <varname>salesman_...</varname> zur Verfügung. Werden mehrere
          Rechnungen in einer Mahnung zusammengefasst, so werden die Metadaten
          (Bearbeiter, Abteilung, etc) der ersten angemahnten Rechnung im
          Ausdruck genommen.</para>

          <para>Die Adressdaten des Kunden stehen als Variablen
          <varname>name</varname>, <varname>street</varname>,
          <varname>zipcode</varname>, <varname>city</varname>,
          <varname>country</varname>, <varname>department_1</varname>,
          <varname>department_2</varname>, und <varname>email</varname> zur
          Verfügung. Der Ansprechpartner <varname>cp_...</varname> steht auch
          zu Verfügung, wird allerdings auch nur von der ersten angemahnten
          Rechnung (s.o.) genommen.</para>

          <para>Weitere Variablen beinhalten:</para>

          <variablelist>
            <varlistentry>
              <term><varname>dunning_date</varname></term>

              <listitem>
                <para>Datum der Mahnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dunning_duedate</varname></term>

              <listitem>
                <para>Fälligkeitsdatum für diese Mahhnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dunning_id</varname></term>

              <listitem>
                <para>Mahnungsnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>fee</varname></term>

              <listitem>
                <para>Kumulative Mahngebühren</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>interest_rate</varname></term>

              <listitem>
                <para>Zinssatz per anno in Prozent</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>total_amount</varname></term>

              <listitem>
                <para>Gesamter noch zu zahlender Betrag als
                <function>fee</function> + <function>total_interest</function>
                + <function>total_open_amount</function></para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>total_interest</varname></term>

              <listitem>
                <para>Zinsen per anno über alle Rechnungen</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>total_open_amount</varname></term>

              <listitem>
                <para>Summe über alle offene Beträge der Rechnungen</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.dunning-details">
          <title>Variablen für jede gemahnte Rechnung in einer Mahnung</title>

          <variablelist>
            <varlistentry>
              <term><varname>dn_amount</varname></term>

              <listitem>
                <para>Rechnungssumme (brutto)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_duedate</varname></term>

              <listitem>
                <para>Originales Fälligkeitsdatum der Rechnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_dunning_date</varname></term>

              <listitem>
                <para>Datum der Mahnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_dunning_duedate</varname></term>

              <listitem>
                <para>Fälligkeitsdatum der Mahnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_fee</varname></term>

              <listitem>
                <para>Kummulative Mahngebühr</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_interest</varname></term>

              <listitem>
                <para>Zinsen per anno für diese Rechnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_invnumber</varname></term>

              <listitem>
                <para>Rechnungsnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_linetotal</varname></term>

              <listitem>
                <para>Noch zu zahlender Betrag (ergibt sich aus
                <varname>dn_open_amount</varname> + <varname>dn_fee</varname>
                + <varname>dn_interest</varname>)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_netamount</varname></term>

              <listitem>
                <para>Rechnungssumme (netto)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_open_amount</varname></term>

              <listitem>
                <para>Offener Rechnungsbetrag</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_ordnumber</varname></term>

              <listitem>
                <para>Bestellnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_transdate</varname></term>

              <listitem>
                <para>Rechnungsdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dn_curr</varname></term>

              <listitem>
                <para>Währung, in der die Rechnung erstellt wurde. (Die
                Rechnungsbeträge sind aber immer in der Hauptwährung)</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.dunning-invoice">
          <title>Variablen in automatisch erzeugten Rechnungen über
          Mahngebühren</title>

          <para>Die Variablen des Verkäufers stehen wie gewohnt als
          <varname>employee_...</varname> zur Verfügung. Die Adressdaten des
          Kunden stehen als Variablen <varname>name</varname>,
          <varname>street</varname>, <varname>zipcode</varname>,
          <varname>city</varname>, <varname>country</varname>,
          <varname>department_1</varname>, <varname>department_2</varname>,
          und <varname>email</varname> zur Verfügung.</para>

          <para>Weitere Variablen beinhalten:</para>

          <variablelist>
            <varlistentry>
              <term><varname>duedate</varname></term>

              <listitem>
                <para>Fälligkeitsdatum der Rechnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>dunning_id</varname></term>

              <listitem>
                <para>Mahnungsnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>fee</varname></term>

              <listitem>
                <para>Mahngebühren</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>interest</varname></term>

              <listitem>
                <para>Zinsen</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>invamount</varname></term>

              <listitem>
                <para>Rechnungssumme (ergibt sich aus <varname>fee</varname> +
                <varname>interest</varname>)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>invdate</varname></term>

              <listitem>
                <para>Rechnungsdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>invnumber</varname></term>

              <listitem>
                <para>Rechnungsnummer</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.andere-vorlagen">
        <title>Variablen in anderen Vorlagen</title>

        <sect3>
          <title>Einführung</title>

          <para>Die Variablen in anderen Vorlagen sind ähnlich wie in der
          Rechnung. Allerdings heißen die Variablen, die mit
          <varname>inv</varname> beginnen, jetzt anders. Bei den Angeboten
          fangen sie mit <varname>quo</varname> für "quotation" an:
          <varname>quodate</varname> für Angebotsdatum etc. Bei Bestellungen
          wiederum fangen sie mit <varname>ord</varname> für "order" an:
          <varname>ordnumber</varname> für Bestellnummer etc.</para>

          <para>Manche Variablen sind in anderen Vorlagen hingegen gar nicht
          vorhanden wie z.B. die für bereits verbuchte Zahlungseingänge. Dies
          sind Variablen, die vom Geschäftsablauf her in der entsprechenden
          Vorlage keine Bedeutung haben oder noch nicht belegt sein
          können.</para>

          <para>Im Folgenden werden nur wichtige Unterschiede zu den Variablen
          in Rechnungen aufgeführt.</para>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.andere-vorlagen-quotations">
          <title>Angebote und Preisanfragen</title>

          <variablelist>
            <varlistentry>
              <term><varname>quonumber</varname></term>

              <listitem>
                <para>Angebots- bzw. Anfragenummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>reqdate</varname></term>

              <listitem>
                <para>Gültigkeitsdatum (bei Angeboten) bzw. Lieferdatum (bei
                Preisanfragen)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>transdate</varname></term>

              <listitem>
                <para>Angebots- bzw. Anfragedatum</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.andere-vorlagen-orders">
          <title>Auftragsbestätigungen und Lieferantenaufträge</title>

          <variablelist>
            <varlistentry>
              <term><varname>ordnumber</varname></term>

              <listitem>
                <para>Auftragsnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>reqdate</varname></term>

              <listitem>
                <para>Lieferdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>transdate</varname></term>

              <listitem>
                <para>Auftragsdatum</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.andere-vorlagen-delivery-orders">
          <title>Lieferscheine (Verkauf und Einkauf)</title>

          <variablelist>
            <varlistentry>
              <term><varname>cusordnumber</varname></term>

              <listitem>
                <para>Bestellnummer des Kunden (im Verkauf) bzw. Bestellnummer
                des Lieferanten (im Einkauf)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>donumber</varname></term>

              <listitem>
                <para>Lieferscheinnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>transdate</varname></term>

              <listitem>
                <para>Lieferscheindatum</para>
              </listitem>
            </varlistentry>
          </variablelist>

          <para>Für jede Position eines Lieferscheines gibt es ein Unterarray
          mit den Informationen darüber, von welchem Lager und Lagerplatz aus
          die Waren verschickt wurden (Verkaufslieferscheine) bzw. auf welchen
          Lagerplatz sie eingelagert wurden. Diese müssen mittels einer
          <function>foreach</function>-Schleife ausgegeben werden. Diese
          Variablen sind:</para>

          <variablelist>
            <varlistentry>
              <term><varname>si_bin</varname></term>

              <listitem>
                <para>Lagerplatz</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>si_chargenumber</varname></term>

              <listitem>
                <para>Chargennummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>si_bestbefore</varname></term>

              <listitem>
                <para>Mindesthaltbarkeit</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>si_number</varname></term>

              <listitem>
                <para>Artikelnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>si_qty</varname></term>

              <listitem>
                <para>Anzahl bzw. Menge</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>si_runningnumber</varname></term>

              <listitem>
                <para>Positionsnummer (1, 2, 3 etc)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>si_unit</varname></term>

              <listitem>
                <para>Einheit</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>si_warehouse</varname></term>

              <listitem>
                <para>Lager</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.andere-vorlagen-statement">
          <title>Variablen für Sammelrechnung</title>

          <variablelist>
            <varlistentry>
              <term><varname>c0total</varname></term>

              <listitem>
                <para>Gesamtbetrag aller Rechnungen mit Fälligkeit &lt; 30
                Tage</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>c30total</varname></term>

              <listitem>
                <para>Gesamtbetrag aller Rechnungen mit Fälligkeit &gt;= 30
                und &lt; 60 Tage</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>c60total</varname></term>

              <listitem>
                <para>Gesamtbetrag aller Rechnungen mit Fälligkeit &gt;= 60
                und &lt; 90 Tage</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>c90total</varname></term>

              <listitem>
                <para>Gesamtbetrag aller Rechnungen mit Fälligkeit &gt;= 90
                Tage</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>total</varname></term>

              <listitem>
                <para>Gesamtbetrag aller Rechnungen</para>
              </listitem>
            </varlistentry>
          </variablelist>

          <para>Variablen für jede Rechnungsposition in Sammelrechnung:</para>

          <variablelist>
            <varlistentry>
              <term><varname>invnumber</varname></term>

              <listitem>
                <para>Rechnungsnummer</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>invdate</varname></term>

              <listitem>
                <para>Rechnungsdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>duedate</varname></term>

              <listitem>
                <para>Fälligkeitsdatum</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>amount</varname></term>

              <listitem>
                <para>Summe der Rechnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>open</varname></term>

              <listitem>
                <para>Noch offener Betrag der Rechnung</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>c0</varname></term>

              <listitem>
                <para>Noch offener Rechnungsbetrag mit Fälligkeit &lt; 30
                Tage</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>c30</varname></term>

              <listitem>
                <para>Noch offener Rechnungsbetrag mit Fälligkeit &gt;= 30 und
                &lt; 60 Tage</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>c60</varname></term>

              <listitem>
                <para>Noch offener Rechnungsbetrag mit Fälligkeit &gt;= 60 und
                &lt; 90 Tage</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><varname>c90</varname></term>

              <listitem>
                <para>Noch offener Rechnungsbetrag mit Fälligkeit &gt;= 90
                Tage</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.bloecke">
        <title>Blöcke, bedingte Anweisungen und Schleifen</title>

        <sect3 id="dokumentenvorlagen-und-variablen.bloecke.einfuehrung">
          <title>Einführung</title>

          <para>Der Parser kennt neben den Variablen einige weitere
          Konstrukte, die gesondert behandelt werden. Diese sind wie
          Variablennamen in spezieller Weise markiert:
          <command>&lt;%anweisung%&gt; ... &lt;%end%&gt;</command></para>

          <para>Anmerkung zum <command>&lt;%end%&gt;</command>: Der besseren
          Verständlichkeit halber kann man nach dem <command>end</command>
          noch beliebig weitere Wörter schreiben, um so zu markieren, welche
          Anweisung (z.B. <command>if</command> oder
          <command>foreach</command>) damit abgeschlossen wird.</para>

          <para>Beispiel: Lautet der Beginn eines Blockes z.B.
          <command>&lt;%if type == "sales_quotation"%&gt;</command>, so könnte
          er mit <command>&lt;%end%&gt;</command> genauso abgeschlossen werden
          wie mit <command>&lt;%end if%&gt;</command> oder auch
          <command>&lt;%end type == "sales_quotation"%&gt;</command>.</para>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.bloecke.if">
          <title>Der if-Block</title>

          <programlisting>&lt;%if variablenname%&gt;
...
&lt;%end%&gt;</programlisting>

          <para>Eine normale "if-then"-Bedingung. Die Zeilen zwischen dem "if"
          und dem "end" werden nur ausgegeben, wenn die Variable
          <varname>variablenname</varname> gesetzt und ungleich 0 ist.</para>

          <para>Handelt es sich bei der benannten Variable um ein Array, also
          um einen Variablennamen, über den man mit <command>&lt;%foreach
          variablenname%&gt;</command> iteriert, so wird mit diesem Konstrukt
          darauf getestet, ob das Array Elemente enthält. Somit würde im
          folgenden Beispiel nur dann eine Liste von Zahlungseingängen samt
          ihrer Überschrift "Zahlungseingänge" ausgegeben, wenn tatsächlich
          welche getätigt wurden:</para>

          <programlisting>&lt;%if payment%&gt;
Zahlungseingänge:
 &lt;%foreach payment%&gt;
   Am &lt;%paymentdate%&gt;: &lt;%payment%&gt; €
 &lt;%end foreach%&gt;
&lt;%end if%&gt;</programlisting>

          <para>Die Bedingung kann auch negiert werden, indem das Wort
          <function>not</function> nach dem <filename>if</filename> verwendet
          wird. Beispiel:</para>

          <programlisting>&lt;%if not cp_greeting%&gt;
...
&lt;%end%&gt;</programlisting>

          <para>Zusätzlich zu dem einfachen Test, ob eine Variable gesetzt ist
          oder nicht, bietet dieser Block auch die Möglichkeit, den Inhalt
          einer Variablen mit einer festen Zeichenkette oder einer anderen
          Variablen zu vergleichen. Ob der Vergleich mit einer Zeichenkette
          oder einer anderen Variablen vorgenommen wird, hängt davon ab, ob
          die rechte Seite des Vergleichsoperators in Anführungszeichen
          gesetzt wird (Vergleich mit Zeichenkette) oder nicht (Vergleich mit
          anderer Variablen). Zwei Beispiele, die beide Vergleiche
          zeigen:</para>

          <programlisting>&lt;%if var1 == "Wert"%&gt;</programlisting>

          <para>Testet die Variable <varname>var1</varname> auf
          übereinstimmung mit der Zeichenkette <constant>Wert</constant>.
          Mittels <function>!=</function> anstelle von <function>==</function>
          würde auf Ungleichheit getestet.</para>

          <programlisting>&lt;%if var1 == var2%&gt;</programlisting>

          <para>Testet die Variable <varname>var1</varname> auf
          übereinstimmung mit der Variablen <varname>var2</varname>. Mittel
          <function>!=</function> anstelle von <function>==</function> würde
          auf Ungleichheit getestet.</para>

          <para>Erfahrere Benutzer können neben der Tests auf (Un-)Gleichheit
          auch Tests auf Übereinstimmung mit regulären Ausdrücken ohne
          Berücksichtung der Groß- und Kleinschreibung durchführen. Dazu dient
          dieselbe Syntax wie oben nur mit <function>=~</function> und
          <function>!~</function> als Vergleichsoperatoren.</para>

          <para>Beispiel für einen Test, ob die Variable
          <varname>intnotes</varname> (interne Bemerkungen) das Wort
          <constant>schwierig</constant> enthält:</para>

          <programlisting>&lt;%if intnotes =~ "schwierig"%&gt;</programlisting>
        </sect3>

        <sect3 id="dokumentenvorlagen-und-variablen.bloecke.foreach">
          <title>Der foreach-Block</title>

          <programlisting>&lt;%foreach variablenname%&gt;
...
&lt;%end%&gt;</programlisting>

          <para>Fügt die Zeilen zwischen den beiden Anweisungen so oft ein,
          wie das Perl-Array der Variablen <varname>variablenname</varname>
          Elemente enthät. Dieses Konstrukt wird zur Ausgabe der einzelnen
          Posten einer Rechnung / eines Angebots sowie zur Ausgabe der Steuern
          benutzt. In jedem Durchlauf werden die <link
          linkend="dokumentenvorlagen-und-variablen.invoice-posten">zeilenbezogenen
          Variablen</link> jeweils auf den Wert für die aktuelle Position
          gesetzt.</para>

          <para>Die Syntax sieht normalerweise wie folgt aus:</para>

          <programlisting>&lt;%foreach number%&gt;
Position: &lt;%runningnumber%&gt;
Anzahl: &lt;%qty%&gt;
Artikelnummer: &lt;%number%&gt;
Beschreibung: &lt;%description%&gt;
...
&lt;%end%&gt;</programlisting>

          <para>Besonderheit in OpenDocument-Vorlagen: Tritt ein
          <function>&lt;%foreach%&gt;</function>-Block innerhalb einer
          Tabellenzelle auf, so wird die komplette Tabellenzeile so oft
          wiederholt wie notwendig. Tritt er außerhalb auf, so wird nur der
          Inhalt zwischen <function>&lt;%foreach%&gt;</function> und
          <function>&lt;%end%&gt;</function> wiederholt, nicht aber die
          komplette Zeile, in der er steht.</para>
        </sect3>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.markup">
        <title>Markup-Code zur Textformatierung innerhalb von
        Formularen</title>

        <para>Wenn der Benutzer innhalb von Formularen in kivitendo Text
        anders formatiert haben möchte, so ist dies begrenzt möglich.
        kivitendo unterstützt die Textformatierung mit HTML-ähnlichen Tags.
        Der Benutzer kann z.B. bei der Artikelbeschreibung auf einer Rechnung
        Teile des Texts zwischen Start- und Endtags setzen. Dieser Teil wird
        dann automatisch in Anweisungen für das ausgewählte Vorlagenformat
        (HTML oder PDF über LaTeX) umgesetzt.</para>

        <para>Die unterstützen Formatierungen sind:</para>

        <variablelist>
          <varlistentry>
            <term>&lt;b&gt;Text&lt;/b&gt;</term>

            <listitem>
              <para>Text wird in Fettdruck gesetzt.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>&lt;i&gt;Text&lt;/i&gt;</term>

            <listitem>
              <para>Text wird kursiv gesetzt.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>&lt;u&gt;Text&lt;/u&gt;</term>

            <listitem>
              <para>Text wird unterstrichen.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>&lt;s&gt;Text&lt;/s&gt;</term>

            <listitem>
              <para>Text wird durchgestrichen. Diese Formatierung ist nicht
              bei der Ausgabe als PDF über LaTeX verfügbar.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>&lt;bullet&gt;</term>

            <listitem>
              <para>Erzeugt einen ausgefüllten Kreis für Aufzählungen (siehe
              unten).</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>Der Befehl <command>&lt;bullet&gt;</command> funktioniert
        momentan auch nur in Latex-Vorlagen.</para>
      </sect2>

      <sect2 id="dokumentenvorlagen-und-variablen.anrede"
             xreflabel="Hinweise zur Anrede">
        <title>Hinweise zur Anrede</title>

        <para>Das Flag "natürliche Person"
        (<varname>natural_person</varname>) aus den Kunden- oder
        Lieferantenstammdaten kann in den Druckvorlagen zusammen mit
        dem Feld "Anrede" (<varname>greeting</varname>) z.B. dafür
        verwendet werden, die Anrede zwischen einer allgemeinen und
        einer persönlichen Anrede zu unterscheiden.
        <programlisting>&lt;%if natural_person%&gt;&lt;%greeting%&gt; &lt;%name%&gt;&lt;%else%&gt;Sehr geehrte Damen und Herren&lt;%end if%&gt;</programlisting>
        </para>
      </sect2>

    </sect1>

    <sect1 id="excel-templates">
      <title>Excel-Vorlagen</title>

      <sect2 id="excel-templates.summary">
        <title>Zusammenfassung</title>

        <para>Dieses Dokument beschreibt den Mechanismus, mit dem
        Exceltemplates abgearbeitet werden, und die Einschränkungen, die damit
        einhergehen.</para>
      </sect2>

      <sect2 id="excel-templates.usage">
        <title>Bedienung</title>

        <para>Der Excel Mechanismus muss in der Konfigurationsdatei aktiviert
        werden. Die Konfigurationsoption heißt <varname>excel_templates =
        1</varname> im Abschnitt <varname>[print_templates]</varname>.</para>

        <para>Eine Excelvorlage kann dann unter dem Namen einer beliebigen
        anderen Vorlage mit der Endung <filename>.xls</filename> gespeichert
        werden. In den normalen Verkaufsmasken taucht nun
        <constant>Excel</constant> als auswählbares Format auf und kann von da
        an wie LaTeX- oder OpenOffice-Vorlagen benutzt werden.</para>

        <para>Der Sonderfall der Angebote aus der Kundenmaske ist ebenfalls
        eine Angebotsvorlage und wird unter dem internen Namen der Angebote
        <filename>sales_quotation.xls</filename> gespeichert.</para>
      </sect2>

      <sect2 id="excel-templates.syntax">
        <title>Variablensyntax</title>

        <para>Einfache Syntax:
        <command>&lt;&lt;varname&gt;&gt;</command></para>

        <para>Dabei sind <constant>&lt;&lt;</constant> und
        <constant>&gt;&gt;</constant> die Delimiter. Da Excel auf festen
        Breiten besteht, kann der Tag künstlich verlängert werden, indem
        weitere <constant>&lt;</constant> oder <constant>&gt;</constant>
        eingefügt werden. Der Tag muss nicht symmetrisch sein.
        Beispiel:</para>

        <programlisting>&lt;&lt;&lt;&lt;&lt;varname&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</programlisting>

        <para>Um die Limitierung der festen Breite zu reduzieren, können
        weitere Variablen in einem Block interpoliert werden. Whitespace wird
        dazwishen dann erhalten. Beispiel:</para>

        <programlisting>&lt;&lt;&lt;&lt;&lt;varname1 varname2   varname3&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</programlisting>

        <para>Die Variablen werden interpoliert, und linksbündig mit
        Leerzeichen auf die gewünschte Länge aufgefüllt. Ist der String zu
        lang, werden überzählige Zeichen abgeschnitten.</para>

        <para>Es ist ausserdem möglich, Daten rechtsbündig darzustellen, wenn
        der Block mit einem Leerzeichen anfängt. Beispiel:</para>

        <programlisting>&lt;&lt;&lt;&lt;&lt;&lt;            varname&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</programlisting>

        <para>Dies würde rechtsbündig triggern. Wenn bei rechtsbündiger
        Ausrichtung Text abgeschnitten werden muss, wird er vom linken Ende
        entfernt.</para>
      </sect2>

      <sect2 id="excel-templates.limitations">
        <title>Einschränkungen</title>

        <para>Das Excelformat bis 2002 ist ein binäres Format, und kann nicht
        mit vertretbarem Aufwand editiert werden. Der Templatemechanismus
        beschränkt sich daher darauf, Textstellen exakt durch einen anderen
        Text zu ersetzen.</para>

        <para>Aus dem gleichen Grund sind die Kontrolllstrukturen
        <command>&lt;%if%&gt;</command> und
        <command>&lt;%foreach%&gt;</command> nicht vorhanden. Der Delimiter
        <constant>&lt;% %&gt;</constant> kommt in den Headerinformationen
        evtl. vor. Deshalb wurde auf den sichereren Delimiter
        <constant>&lt;&lt;</constant> und <constant>&gt;&gt;</constant>
        gewechselt.</para>
      </sect2>
    </sect1>

    <sect1 id="features.warehouse">
      <title>Mandantenkonfiguration Lager</title>

      <para>Die Lagerverwaltung in kivitendo funktioniert standardmässig wie
      folgt: Wird ein Lager mit einem Lagerplatz angelegt, so gibt es die
      Möglichkeit hier über den Menüpunkt Lager entsprechende Warenbewegungen
      durchzuführen. Ferner kann jede Position eines Lieferscheins ein-, bzw.
      ausgelagert werden (Einkauf-, bzw. Verkauf). Es können beliebig viele
      Lager mit beliebig vielen Lagerplätzen abgebildet werden. Die
      Lagerbewegungen über einen Lieferschein erfolgt durch Anklicken jeder
      Einzelposition und das Auswählen dieser Position zu einem Lager mit
      Lagerplatz. Dieses Verfahren lässt sich schrittweise vereinfachen, je
      nachdem wie die Einstellungen in der Mandatenkonfiguration gesetzt
      werden.</para>

      <itemizedlist>
        <listitem>
          <para><option>Auslagern über Standardlagerplatz</option> Hier wird
          ein zusätzlicher Knopf (Auslagern über Standard-Lagerplatz) in dem
          Lieferschein-Beleg hinzugefügt, der dann alle Lagerbewegungen über
          den Standardlagerplatz (konfigurierbar pro Ware) durchführt.</para>
        </listitem>

        <listitem>
          <para><option>Auslagern ohne Bestandsprüfung</option> Das obige
          Auslagern schlägt fehl, wenn die entsprechende Menge für die
          Lagerbewegung nicht vorhanden ist, möchte man dies auch ignorieren
          und ggf. dann nachpflegen, so kann man eine Negativ-Warenmenge mit
          dieser Option erlauben. Hierfür muss ein entsprechender Lagerplatz
          (Fehlbestand, o.ä.) konfiguriert sein.</para>
        </listitem>
      </itemizedlist>

      <para>Zusätzliche Funktionshinweise:</para>

      <itemizedlist>
        <listitem>
          <para><option>Standard-Lagerplatz</option> Ist dieser konfiguriert,
          wird dies auch als Standard-Voreinstellung bei der Neuerfassung von
          Stammdaten → Waren / Dienstleistung / Erzeugnis verwendet.</para>
        </listitem>

        <listitem>
          <para><option>Standard-Lagerplatz verwenden, falls keiner in
          Stammdaten definiert</option> Wird beim 'Auslagern über
          Standardlagerplatz' keine Standardlagerplatz zu der Ware gefunden,
          so wird mit dieser Option einfach der Standardlagerplatz
          verwendet.</para>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1 id="features.swiss-charts-of-accounts">
      <title>Schweizer Kontenpläne</title>

      <para>Seit der Version 3.5 stehen in kivitendo 3 Kontenpläne für den
      Einsatz in der Schweiz zur Verfügung, einer für Firmen und
      Organisationen, die nicht mehrwertsteuerpflichtig sind, einer für
      Firmen, die mehrwertsteuerpflichtig sind und einer speziell für
      Vereine.</para>

      <para>Die Kontenpläne orientieren sich am in der Schweiz üblicherweise
      verwendeten KMU-Kontenrahmen und sind mit der Revision des
      Schweizerischen Obligationenrechts (OR) vom 1.1.2013 kompatibel,
      insbesondere <literal>Art.957a Abs.2</literal>.</para>

      <para>Beim Vereinskontenplan sind standardmässig nur die Konten 1100
      (Debitoren CHF) und 1101 (Debitoren EUR) als Buchungskonten im Verkauf
      sowie die Konten 2000 (Kreditoren CHF) und 2001 (Kreditoren EUR) als
      Buchungskonten im Einkauf vorgesehen. Weitere Konten können bei Bedarf
      in den Konto-Detaileinstellungen als Einkaufs- oder Verkaufskonten
      konfiguriert werden.</para>

      <para>Die Möglichkeit, Saldosteuersätze zu verwenden ist in der
      aktuellen Version von kivitendo noch nicht integriert.</para>

      <para>Trotzdem können auch Firmen, die per Saldosteuersatz mit der
      Eidgenössischen Steuerverwaltung abrechnen, kivitendo bereits nutzen.
      Dazu wird der Kontenplan mit MWST ausgewählt. Anschliessend müssen alle
      Aufwandskonten editiert werden und dort der Steuersatz auf 0% gesetzt
      werden.</para>

      <para>So werden bei Kreditorenbuchungen keine Vorsteuern
      verbucht.</para>

      <para>Bezugssteuern für aus dem Ausland bezogene Dienstleistungen müssen
      manuell verbucht werden.</para>

      <para>Wünsche für Anpassungen an den Schweizer Kontenplänen sowie
      Vorschläge für weitere (z.B. branchenspezifische) Kontenpläne bitte an
      <literal>empfang@revamp-it.ch</literal> senden.</para>
    </sect1>

    <sect1 id="features.part_classification">
      <title>Artikelklassifizierung</title>

      <sect2>
        <title>Übersicht</title>

        <para>Die Klassifizierung von Artikeln dient einer weiteren
        Gliederung, um zum Beispiel den Einkauf vom Verkauf zu trennen,
        gekennzeichnet durch eine Beschreibung (z.B. "Einkauf") und ein Kürzel
        (z.B. "E"). Für jede Klassifizierung besteht eine Beschreibung und
        eine Abkürzung die normalerweise aus einem Zeichen besteht, kann aber
        auf mehrere Zeichen erweitert werden, falls zur Unterscheidung
        notwendig. Sinnvoll sind jedoch nur maximal 2 Zeichen.</para>
      </sect2>

      <sect2>
        <title>Basisklassifizierung</title>

        <para>Als Basisklassifizierungen gibt es</para>

        <itemizedlist>
          <listitem>
            <para>Einkauf</para>
          </listitem>

          <listitem>
            <para>Verkauf</para>
          </listitem>

          <listitem>
            <para>Handelsware</para>
          </listitem>

          <listitem>
            <para>Produktion</para>
          </listitem>

          <listitem>
            <para>- keine - (diese wird bei einer Aktualisierung für alle
            existierenden Artikel verwendet und ist gültig für Verkauf und
            Einkauf)</para>
          </listitem>
        </itemizedlist>

        <para>Es können weitere Klassifizierungen angelegt werden. So kann es
        z.B. für separat auszuweisende Artikel folgende Klassen geben:</para>

        <itemizedlist>
          <listitem>
            <para>Lieferung (Logistik, Transport) mit Kürzel L</para>
          </listitem>

          <listitem>
            <para>Material (Verpackungsmaterial) mit Kürzel M</para>
          </listitem>
        </itemizedlist>
      </sect2>

      <sect2>
        <title>Attribute</title>

        <para>Bisher haben die Klassifizierungen folgende Attribute, die auch
        alle gleichzeitg gültig sein können</para>

        <itemizedlist>
          <listitem>
            <para>gültig für Verkauf - dieser Artikel kann im Verkauf genutzt
            werden</para>
          </listitem>

          <listitem>
            <para>gültig für Einkauf - dieser Artikel kann im Einkauf genutzt
            werden</para>
          </listitem>

          <listitem>
            <para>separat ausweisen - hierzu gibt es zur Dokumentengenerierung
            (LaTeX) eine zusätzliche Variable</para>
          </listitem>
        </itemizedlist>

        <para>Für das Attribut "separat ausweisen" stehen in den
        LaTeX-Vorlagen die Variable <emphasis
        role="bold">&lt;%non_separate_subtotal%&gt; </emphasis>zur Verfügung,
        die alle nicht separat auszuweisenden Artikelkosten saldiert, sowie
        pro separat auszuweisenden Klassifizierungen die Variable<emphasis
        role="bold">&lt; %separate_X_subtotal%&gt;</emphasis>, wobei X das
        Kürzel der Klassifizierung ist.</para>

        <para>Im obigen Beispiel wäre das für Lieferkosten <emphasis
        role="bold">&lt;%separate_L_subtotal%&gt;</emphasis> und für
        Verpackungsmaterial <emphasis role="bold">
        &lt;%separate_M_subtotal%&gt;</emphasis>.</para>
      </sect2>

      <sect2>
        <title>Zwei-Zeichen Abkürzung</title>

        <para>Der Typ des Artikels und die Klassifizierung werden durch zwei
        Buchstaben dargestellt. Der erste Buchstabe ist eine Lokalisierung des
        Artikel-Typs ('P','A','S'), deutsch 'W', 'E', und 'D' für Ware
        Erzeugnis oder Dienstleistung und ggf. weiterer Typen.</para>

        <para>Der zweite Buchstabe (und ggf. auch ein dritter, falls nötig)
        entspricht der lokalisierten Abkürzung der Klassifizierung.</para>

        <para>Diese Abkürzung wird überall beim Auflisten von Artikeln zur
        Erleichterung mit dargestellt.</para>
      </sect2>
    </sect1>

    <sect1 id="features.file_managment">
      <title>Dateiverwaltung (Mini-DMS)</title>

      <sect2>
        <title>Übersicht</title>

        <para>Parallel zum alten WebDAV gibt es ein Datei-Management-System,
        das Dateien verschiedenen Typs verwaltet. Dies können</para>

        <orderedlist>
          <listitem>
            <para>aus ERP-Daten per LaTeX Template erzeugte
            PDF-Dokumente,</para>
          </listitem>

          <listitem>
            <para>zu bestimmten ERP-Daten gehörende Anhangdateien
            unterschiedlichen Formats,</para>
          </listitem>

          <listitem>
            <para>per Scanner eingelesene PDF-Dateien,</para>
          </listitem>

          <listitem>
            <para>per E-Mail empfangene Dateianhänge unterschiedlichen
            Formats,</para>
          </listitem>

          <listitem>
            <para>sowie speziel für Artikel hochgeladene Bilder sein.</para>
          </listitem>
        </orderedlist>

        <screenshot>
          <screeninfo>Übersicht</screeninfo>

          <mediaobject>
            <imageobject>
              <imagedata contentwidth="600" fileref="images/DMS-Overview.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </sect2>

      <sect2>
        <title>Struktur</title>

        <para>Über eine vom Speichermedium unabhängige Zwischenschicht werden
        die Dateien und ihre Versionen in der Datenbank verwaltet. Darunter
        können verschiedene Implementierungen (Backends) gleichzeitig
        existieren:</para>

        <itemizedlist>
          <listitem>
            <para>Dateisystem</para>
          </listitem>

          <listitem>
            <para>WebDAV</para>
          </listitem>

          <listitem>
            <para>Schnittstelle zu externen
            Dokumenten-Management-Systemen</para>
          </listitem>

          <listitem>
            <para>andere Datenbank</para>
          </listitem>

          <listitem>
            <para>etc ...</para>
          </listitem>
        </itemizedlist>

        <para>Es gibt unterschiedliche Typen von Dateien. Jedem Typ läßt sich
        in der Mandantenkonfiguration ein bestimmtes Backend zuordnen.</para>

        <itemizedlist>
          <listitem>
            <para>"document": Das sind entweder generierte, eingescannte oder
            hochgeladene PDF-Dateien, die zu bestimmten ERP-Daten
            (ERP-Objekte, wie z.B. Rechnung, Lieferschein) gehören.</para>
          </listitem>

          <listitem>
            <para>"attachment": zusätzlich hochgeladene Dokumente, die an
            bestimmte ERP-Objekte angehängt werden, z.B. technische
            Zeichnungen, Aufmaße. Diese können auch für Artikel, Lieferanten
            und Kunden hinterlegt sein.</para>
          </listitem>

          <listitem>
            <para>"image": Bilder für Artikel. Diese können auch verkleinert
            in einer Vorschau (Thumbnail) angezeigt werden.</para>
          </listitem>
        </itemizedlist>

        <para>Zusätzlich werden in der Datenbank zu den Dateien neben der
        Zuordnung zu ERP-Objekten, Dateityp Dateinamen und Backend, in dem die
        Datei gespeichert ist, auch die Quelle der Datei notiert:</para>

        <itemizedlist>
          <listitem>
            <para>"created": vom System erzeugte Dokumente"</para>
          </listitem>

          <listitem>
            <para>"uploaded": hochgeladene Dokumente</para>
          </listitem>

          <listitem>
            <para>"email": vom Mail-System empfangene Dateien</para>
          </listitem>

          <listitem>
            <para>"scanner[1]": von einem oder mehreren Scannern erzeugte
            Dateien. Existieren mehrere Scanner, so sind diese durch
            unterschiedliche Quellennamen zu definieren.</para>
          </listitem>
        </itemizedlist>

        <para>Je nach Dateityp sind nur bestimmte Quellen zulässig. So gibt es
        für "attachment" und "image" nur die Quelle "uploaded". Für "document"
        gibt es auf jeden Fall die Quelle "created". Die Quellen "scanner" und
        "email" müssen derzeit in der Datenbank konfiguriert werden (siehe
        <xref linkend="file_management.dbconfig"/>).</para>
      </sect2>

      <sect2>
        <title>Anwendung</title>

        <para>Die Daten werden bei den ERP-Objekten als extra Reiter
        dargestellt. Eine Verkaufsrechnung z.B. hat die Reiter "Dokumente" und
        "Dateianhänge".</para>

        <screenshot>
          <screeninfo>Reiter "Dateianhänge"</screeninfo>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/DMS-Anhaenge.png" scale="50"/>
            </imageobject>
          </mediaobject>
        </screenshot>

        <para>Bei den Dateianhängen wird immer nur die aktuelle Version einer
        Datei angezeigt. Wird eine Datei mit gleichem Namen hochgeladen, so
        wird eine neue Version der Datei erstellt. Vorher wird der Anwender
        durch einen Dialog gefragt, ob er eine neue Version anlegen will oder
        ob er die Datei umbenennen will, falls es eine neue Datei sein
        soll.</para>

        <screenshot>
          <screeninfo>Reiter "Dateianhänge"</screeninfo>

          <mediaobject>
            <imageobject>
              <imagedata contentwidth="40"
                         fileref="images/DMS-Anhaenge-hochladen.png"
                         width="100"/>
            </imageobject>
          </mediaobject>
        </screenshot>

        <para>Es können mehrere Dateien gleichzeitig hochgeladen werden,
        solange in Summe die maximale Größe nicht überschritten wird (siehe
        <xref linkend="file_management.clientconfig"/>).</para>

        <screenshot>
          <screeninfo>Reiter "Dokumente"</screeninfo>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/DMS-Dokumente.png" width="500"/>
            </imageobject>
          </mediaobject>
        </screenshot>

        <para>Sind keine weiteren Quellen für Dokumente konfiguriert, so gibt
        es nur "erzeugte Dokumente". Es werden alle Versionen der generierten
        Datei angezeigt. Für Verkaufsrechnungen kommen keine anderen Quellen
        zur Geltung. Werden entsprechend der <xref
        linkend="file_management.dbconfig"/> zusätzliche Quellen konfiguriert,
        so sind diese z.B. bei Einkaufsrechnungen sichtbar:</para>

        <screenshot>
          <screeninfo>Reiter "Dokumente"</screeninfo>

          <mediaobject>
            <imageobject>
              <imagedata contentwidth="600"
                         fileref="images/DMS-Dokumente-Scanner.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>

        <para>Statt des Löschens wird hier die Datei zurück zur Quelle
        verschoben. Somit kann die Datei anschließend an ein anderes
        ERP-Objekt angehängt werden.</para>

        <para>Derzeit sind "Titel" und "Beschreibung" noch nicht genutzt. Sie
        sind bisher nur bei Bildern relevant.</para>
      </sect2>

      <sect2>
        <title>Konfigurierung</title>

        <sect3 id="file_management.clientconfig"
               xreflabel="Mandantenkonfigurierung">
          <title>Mandantenkonfiguration</title>

          <sect4>
            <title>Reiter "Features"</title>

            <para>Unter dem Reiter <emphasis role="bold">Features</emphasis>
            im Abschnitt Dateimanagement ist neben dem "alten" WebDAV das
            Dateimangement generell zu- und abschaltbar, sowie die Zuordnung
            der Dateitypen zu Backends. Die Löschbarkeit von Dateien, sowie
            die maximale Uploadgröße sind Backend-unabhängig</para>

            <screenshot>
              <screeninfo>Mandantenkonfig Reiter "Features"</screeninfo>

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/DMS-ClientConfig.png" width="500"/>
                </imageobject>
              </mediaobject>
            </screenshot>

            <para>Die einzelnen Backends sind einzeln einschaltbar.
            Spezifische Backend-Konfigurierungen sind hier noch
            ergänzbar.</para>
          </sect4>

          <sect4>
            <title>Reiter "Allgemeine Dokumentenanhänge"</title>

            <para>Unter dem Reiter <emphasis role="bold">Allgemeine
            Dokumentenanhänge</emphasis> kann für alle ERP-Dokumente (
            Angebote, Aufträge, Lieferscheine, Rechnungen im Verkauf und
            Einkauf ) allgemeingültige Anhänge hochgeladen werden.</para>

            <screenshot>
              <screeninfo>Mandantenkonfig Reiter "Allgemeine
              Dokumentenanhänge"</screeninfo>

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/DMS-Allgemeine-Dokumentenanhaenge.png"
                             width="500"/>
                </imageobject>
              </mediaobject>
            </screenshot>

            <para>Diese Anhänge werden beim Generieren von PDF-Dateien an die
            ERP-Dokumente angehängt, z.B. AGBs oder aktuelle Angebote. Es
            werden in dem Fall die Daten kopiert, sodass an den ERP-Dokumenten
            immer die Anhänge zum Generierungszeitpunkt eingebettet
            sind.</para>
          </sect4>
        </sect3>

        <sect3 id="file_management.dbconfig"
               xreflabel="Datenbank-Konfigurierung">
          <title>Datenbank-Konfigurierung</title>

          <para>Die zusätzlichen Quellen für "email" oder ein oder mehrere
          Scanner sind derzeit vom Administrator direkt in der
          Datenbanktabelle "user_preferences" einzurichten. Die "value" ist im
          JSON-Format mit den jeweiligen Werten des Verzeichnisses und der
          Beschreibung der Quelle.</para>

          <programlisting>
 id |  login    |  namespace   | version |   key    |          value
----+-----------+--------------+---------+----------+---------------------------
  1 | #default# | file_sources | 0.00000 | scanner1 |
                             {"dir":"/var/tmp/scanner1","desc":"Scanner Einkauf"}
  2 | #default# | file_sources | 0.00000 | scanner2 |
                             {"dir":"/var/tmp/scanner2","desc":"Scanner Verkauf"}
  3 | #default# | file_sources | 0.00000 | emails   |
                             {"dir":"/var/tmp/emails","desc":"Empfangene Mails" }
          </programlisting>

          <para>Es ist daran gedacht, statt dem Default-Eintrag später für
          bestimmte Benutzer ('login') bestimmte Quellen zuzulassen. Dies wird
          nach Bedarf implementiert.</para>
        </sect3>

        <sect3 id="file_management.kiviconfig"
               xreflabel="kivitendo-Konfigurationsdatei">
          <title>kivitendo-Konfigurationsdatei</title>

          <para>Dort ist im Abschnitt [paths] der relative oder absolute Pfad
          zum Dokumentenwurzelverzeichnis einzutragen. Dieser muss für den
          Webserver schreib- und lesbar sein, jedoch nicht ausführbar.</para>

          <programlisting>
[paths]
document_path = /var/local/kivi_documents
          </programlisting>

          <para>Unter diesem Wurzelverzeichnis wird pro Mandant automatisch
          ein Unterverzeichnis mit der ID des Mandanten angelegt.</para>
        </sect3>
      </sect2>
    </sect1>

    <sect1>
      <title>Webshop-Api</title>

      <para>Das Shopmodul bietet die Möglichkeit Onlineshopartikel und
      Onlineshopbestellungen zu verwalten und zu bearbeiten.</para>

      <para>Es ist Multishopfähig, d.h. Artikel können mehreren oder
      unterschiedlichen Shops zugeordnet werden. Bestellungen können aus
      mehreren Shops geholt werden.</para>

      <para>Zur Zeit bietet das Modul nur einen Connector zur REST-Api von
      Shopware. Weitere Connectoren können dazu programmiert und eingerichtet
      werden.</para>

      <sect2>
        <title>Rechte für die Webshopapi</title>

        <para>In der Administration können folgende Rechte vergeben
        werden</para>

        <itemizedlist>
          <listitem>
            <para>Webshopartikel anlegen und bearbeiten</para>
          </listitem>

          <listitem>
            <para>Shopbestellungen holen und bearbeiten</para>
          </listitem>

          <listitem>
            <para>Shop anlegen und bearbeiten</para>
          </listitem>
        </itemizedlist>
      </sect2>

      <sect2>
        <title>Konfiguration</title>

        <para>Unter System-&gt;Webshops können Shops angelegt und konfiguriert
        werden</para>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="500" contentwidth="700"
                       fileref="images/Shop_Listing.png"/>
          </imageobject>
        </mediaobject>
      </sect2>

      <sect2>
        <title>Webshopartikel</title>

        <sect3>
          <title>Shopvariablenreiter in Artikelstammdaten</title>

          <para>Mit dem Recht "Shopartikel anlegen und bearbeiten" und des
          Markers <emphasis role="bold">"Shopartikel" in den Basisdaten
          </emphasis>zeigt sich der Reiter "Shopvariablen" in den
          Artikelstammdaten. Hier können jetzt die Artikel mit
          unterschiedlichen Beschreibung und/oder Preisen für die
          konfigutierten Shops angelegt und bearbeitet werden. An dieser
          Stelle können auch beliebig viele Bilder dem Shopartikel zugeordnet
          werden. Artikelbilder gelten für alle Shops.</para>

          <mediaobject>
            <imageobject>
              <imagedata contentdepth="500" contentwidth="600"
                         fileref="images/Shop_Artikel.png"/>
            </imageobject>
          </mediaobject>

          <para>Die Artikelgruppen werden direkt vom Shopsystem geholt somit
          ist es möglich einen Artikel auch mehreren Gruppen
          zuzuordenen</para>
        </sect3>

        <sect3>
          <title>Shopartikelliste</title>

          <para>Unter dem Menu Webshop-&gt;Webshop Artikel hat man nochmal
          eine Gesamtübersicht. Von hier aus ist es möglich Artikel im Stapel
          unter verschiedenen Kriterien &lt;alles&gt;&lt;nur Preis&gt;&lt;nur
          Bestand&gt;&lt;Preis und Bestand&gt; an die jeweiligen Shops
          hochzuladen.</para>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/Shop_Artikel_Listing.png"/>
            </imageobject>
          </mediaobject>
        </sect3>
      </sect2>

      <sect2>
        <title>Bestellimport</title>

        <para>Unter dem Menupunkt Webshop-&gt;Webshop Import öffnet sich die
        Bestellimportsliste. Hier ist sind Möglichkeiten gegeben Neue
        Bestellungen vom Shop abzuholen, geholte Bestellungen im Stapel oder
        einzeln als Auftrag zu transferieren. Die Liste kann nach
        verschiedenen Kriterien gefiltert werden.</para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Shop_Bestell.png"/>
          </imageobject>
        </mediaobject>

        <para>Bei Einträgen in der Liste.</para>

        <itemizedlist>
          <listitem>
            <para>keine Kundennummer: Es gibt ähnliche Kundendatensätze und
            der Datensatz konnte nicht eindeutig zugewiesen werden.</para>
          </listitem>

          <listitem>
            <para>Kundennummer und Rechnungen rot hinterlegt: Der Kunde hat
            offene Posten und kann deswegen nicht im Stapel übernommen
            werden.</para>
          </listitem>

          <listitem>
            <para>Rechnungsadresse grün hinterlegt: Der Kunde konnte eindeutig
            einem Datensatz zugeordnet werden. Die Shopbestellung kann im
            Stapel mit dem Button "Anwenden" und wenn markiert als Auftrag
            übernommen werden.</para>
          </listitem>

          <listitem>
            <para>Kundennummer vorhanden, aber die Checkbox "Auftrag
            erstellen" fehlt. Der Kunde hat vermutlich eine
            Shopauftragssperre.</para>
          </listitem>

          <listitem>
            <para>Lieferadresse grau hinterlegt: Optische Anzeige, dass es
            sich um eine unterschiedliche Lieferadresse handelt.
            Lieferadressen werden aber grundsätzlich beim Transferieren zu
            Aufträgen mit übernommen.</para>
          </listitem>

          <listitem>
            <para>In der Spalte Positionen/Betrag/Versandkosten zeigt sich ein
            tooltip zu den Positionen.</para>
          </listitem>
        </itemizedlist>

        <para>Maske Auftrag erstellen</para>

        <para>Viele Shopsysteme haben drei verschieden Adresstypen Kunden-,
        Rechnungs-, und Lieferadresse, die sich auch alle unterscheiden
        können. Diese werden im oberen Bereich angezeigt. Es ist möglich jede
        dieser Adresse einzeln in kivitendo als Kunde zu übernehmen. Es werden
        die Werte Formulareingabe übernommen. Es wird bei einer Änderung
        allerdings nur diese in die kivitendo Kundenstammdaten übernommen, die
        Shopbestellung bleibt bestehen.</para>

        <para>Mit der mittleren Adresse(Rechnungsadresse) im oberen Bereich,
        kann ich den ausgewählten kivitendodatensatz des mittleren Bereich
        überschreiben. Das ist sinnvoll, wenn ich erkenne, das der Kunde z.B.
        umgezogen ist.</para>

        <para>Im mittleren Bereich das Adresslisting zeigt:</para>

        <itemizedlist>
          <listitem>
            <para>Rot hinterlegt: Kunde hat eine Shopauftragssperre, diese
            muss zuerst deaktiviert werden bevor ich diesem Kunden eine
            Shopbestellung zuordnen kann.</para>
          </listitem>

          <listitem>
            <para>Kundenname fett und rot: Hier hat der Kunde eine Bemerkung
            in den Stammdaten. Ein Tooltip zeigt diese Bemerkung. Das kann dan
            auch der Grund für die Auftragssperre sein.</para>
          </listitem>

          <listitem>
            <para>Die Buttons "Auftrag erstellen" und "Kunde mit
            Rechnungsadresse überschreiben" zeigen sich erst, wenn ein Kunde
            aus dem Listing ausgewählt ist.</para>
          </listitem>

          <listitem>
            <para>Es ist aber möglich die Shopbestellung zu löschen.</para>
          </listitem>

          <listitem>
            <para>Ist eine Bestellung schon übernommen, zeigen sich an dieser
            Stelle, die dazugehörigen Belegverknüpfungen.</para>
          </listitem>
        </itemizedlist>
      </sect2>

      <sect2>
        <title>Mapping der Daten</title>

        <para>Das Mapping der kivitendo Daten mit den Shopdaten geschieht in
        der Datei SL/ShopConnector/&lt;SHOPCONNECTORNAME&gt;.pm
        z.B.:SL/ShopConnector/Shopware.pm</para>

        <para>In dieser Datei gibt es einen Bereich wo die Bestellpostionen,
        die Bestellkopfdaten und die Artikeldaten gemapt werden. In dieser
        Datei kann ein individelles Mapping dann gemacht werden. Zu Shopware
        gibt es hier eine sehr gute Dokumentation: <ulink
        url="https://developers.shopware.com/developers-guide/rest-api/">https://developers.shopware.com/developers-guide/rest-api/</ulink></para>
      </sect2>
    </sect1>
    <sect1 id="features.zugferd">
      <title>ZUGFeRD Rechnungen</title>
      <sect2 id="features.zugferd.preamble">
        <title>Vorbedingung</title>
           <para>
            Für die Erstellung von ZUGFeRD PDFs wird TexLive2018 oder höher benötigt.
           </para>
          <note>
           <para>
            Wer kein TexLive2018 oder höher installieren kann, kann eine lokale Umgebung nur für kivitendo wie folgt erzeugen:
           </para>
          <programlisting>
          1. Download des offiziellen Installers von https://www.tug.org/texlive/quickinstall.html

          2. Installer ausführen, Standard-Ort für Installation belassen, evtl. ein paar Pakete abwählen, installieren lassen

          3. Ein kleine Script »run_pdflatex.sh« anlegen, das den PATH auf das  Installationsverezichnis setzt und pdflatex ausführt:

          ------------------------------------------------------------
          #!/bin/bash

          export PATH=/usr/local/texlive/2020/bin/x86_64-linux:$PATH
          hash -r

          exec latexmk --pdflatex &quot;$@&quot;
          ------------------------------------------------------------

          4. In config/kivitendo.conf den Parameter »latex« auf den Pfad zu »run_pdflatex.sh« setzen

          5. Webserver neu starten
          </programlisting>
        </note>
      </sect2>
      <sect2 id="features.zugferd.summary">
        <title>Übersicht</title>

        <para>Mit der Version 3.5.6 bietet kivitendo die Möglichkeit ZUGFeRD
        Rechnungen zu erstellen, sowie auch  ZUGFeRD Rechnungen direkt in
        kivitendo einzulesen. </para>

        <para>Bei  ZUGFeRD Rechnungen handelt es sich um eine PDF Datei in
        der eine XML-Datei eingebettet ist. Der Aufbau der XML-Datei ist
        standardisiert und ermöglicht so den Austausch zwischen
        den verschiedenen Softwareprodukten. Kivitendo setzt mit der
        Version 3.5.6 den ZUGFeRD 2.1 Standard um.</para>

        <para>Weiter Details zu ZUGFeRD sind unter diesem Link zu finden:
        <ulink url="https://www.ferd-net.de/standards/was-ist-zugferd/index.html">https://www.ferd-net.de/standards/was-ist-zugferd/index.html</ulink>
        </para>
      </sect2>
      <sect2 id="features.zugferd.create_zugferd_bills">

        <title>Erstellen von ZUGFeRD Rechnungen in Kivitendo</title>
        <para>Für die Erstellung von ZUGFeRD Rechnungen bedarf es in
        kivitendo zwei Dinge:</para>

        <orderedlist>

          <listitem>
            <para>Die Erstellung muss in der Mandantenkonfiguration
            aktiviert sein</para>
          </listitem>

          <listitem>
            <para>Beim mindestens einem Bankkonto muss die Option
            „Nutzung von ZUGFeRD“ aktiviert sein</para>
          </listitem>

        </orderedlist>
        <sect3>
          <title>Mandantenkonfiguration</title>

          <para>Die Einstellung für die Erstellung von ZUGFeRD Rechnungen
          erfolgt unter „System“ → „Mandatenkonfiguration“ → „Features“.
          Im Abschnitt „Einkauf und Verkauf“ finden Sie die Einstellung
          „Verkaufsrechnungen mit ZUGFeRD-Daten erzeugen“.
          Hier besteht die Auswahl zwischen:</para>

          <itemizedlist>
            <listitem>
              <para>ZUGFeRD-Rechnungen erzeugen</para>
            </listitem>

            <listitem>
              <para>ZUGFeRD-Rechnungen im Testmodus erzeugen</para>
            </listitem>

            <listitem>
              <para>Keine ZUGFeRD Rechnungen erzeugen</para>
            </listitem>

          </itemizedlist>

          <para>Rechnungen die als PDF erzeugt werden, werden je nach
          Einstellung nun im ZUGFeRD Format ausgegeben.</para>

        </sect3>
        <sect3>
          <title>Konfiguration der Bankkonten</title>

          <para>Unter „System → Bankkonten“ muss bei mindestens einem
          Bankkonto die Option „Nutzung mit ZUGFeRD“ auf „Ja“ gestellt
          werden.</para>
        </sect3>
      </sect2>

      <sect2 id="features.zugferd.read_zugferd_bills">

        <title>Einlesen von ZUGFeRD Rechnungen in Kivitendo</title>

        <para>Es lassen sich auch Rechnungen von Kreditoren, die im
        ZUGFeRD Format erstellt wurden, nach Kivitendo importieren.
        Hierfür müssen auch zwei Voraussetzungen erfüllt werden:
        </para>

        <orderedlist>

          <listitem>
            <para>Beim Lieferanten muss die Umsatzsteuer-ID und das
            Bankkonto hinterlegt sein</para>
          </listitem>

          <listitem>
            <para>Für den Kreditoren muss eine Buchungsvorlage existieren.</para>
          </listitem>

        </orderedlist>

        <para>Wenn diese Voraussetzungen erfüllt sind, kann die Rechnung
        über „Finanzbuchhaltung“ → „Factur-X-/ZUGFeRD-Import“ über die „Durchsuchen“
        Schaltfläche ausgewählt werden und über die Schaltfläche „Import“
        eingeladen werden. Es öffnet sich daraufhin die Kreditorenbuchung.
        Die auslesbaren Daten aus dem eingebetteten XML der PDF Datei
        werden in der Kreditorenbuchung ergänzt.</para>

      </sect2>

    </sect1>

    <sect1 id="features.reclamations">
      <title>Reklamationen</title>

      <para> Reklamationen dienen dazu im Verkauf die Kundenzufriedenheit zu verbessern und Fehler in der Abwicklung von Aufträgen aufzuspüren und dann zu vermeiden.</para>

      <para>Im Einkauf helfen Reklamationen beanstandete Lieferungen zu verwalten und zu kontrollieren.</para>
      <sect2>
        <title>Konfiguration des Reklamationsmodul</title>
        <para>Unter dem Menu "System->Reklamationsgründe" muss mindestens ein Reklamationsgrund erfasst werden.</para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Reklamationsgruende_anlegen.png"/>
          </imageobject>
        </mediaobject>
        <para>Aufgrund der Gründe können später in den Berichten Auswertungen gemacht werden.</para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Reklamationsgruende_liste.png"/>
          </imageobject>
        </mediaobject>
      </sect2>
      <sect2>
        <title>Reklamation erfassen</title>
        <para>Aus den Belegen EK/VK Auftrag, EK/VK Lieferschein, EK/VK Rechnung kann unter "Workflow->Reklöamation erfassen" eine dem Workflow zugehörige Reklamation erfasst werden.
          Die Reklamationsmaske ähnelt im großem die der Auftragsmaske.</para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Reklamation_erfassen.png"/>
          </imageobject>
        </mediaobject>
        <para>Es werden alle Positionen aus dem Beleg übernomen. Deswegen müssen hie die Positionen angepasst werden.
          Zusätzlich muss noch ein Reklamationsgrund angegeben werden.</para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Reklamation_erfassen_grund.png"/>
          </imageobject>
        </mediaobject>
        <para>Die Reklamationsgründe sind für spätere Auswertungen notwendig</para>
        <note id="reclamations.anmerkung_grund_einkauf">
          <para>Anmerkung: Da bei einem Auftrag, sowohl im EK als auch im VK, noch keine Ware versendet bzw. empfangen wurde, könnte hier ein Reklamationsgrund "Lieferver sein.</para>
        </note>
      </sect2>
      <sect2>
        <title>Reklamationen auswerten</title>
        <para>Bisher gibt es nur eine Liste mit Reklamationen und deren Filtermöglichkeiten.</para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Reklamation_erfassen_grund.png"/>
          </imageobject>
        </mediaobject>
        <para>Einen individuellen Reklamationsbericht kann über einen "benutzerdefinierten Datenexport" erstellt werden</para>
      </sect2>
    </sect1>

    <sect1 id="features.dispositionsmanager">
      <title>Dispositionsmanager/Einkaufshelfer</title>

      <para> Der Einkaufshelfer generiert Lieferantenaufträge anhand eines Warenkorbes. Der Warenkorb kann
      einzeln oder mit dem Meldebestandsbericht gefüllt werden. Mit dem Filter „Lieferant“ im
      Warenkorb werden die Artikel einem Lieferanten zugeordnet und können dann bestellt, d.h. ein
      Lieferantenauftragerstellt, werden.</para>

      <sect2>
        <title>So kommen die Artikel in den Einkaufswarenkorb:</title>
        <para>1) Sofern ein Artikel einen oder mehrere Lieferanten hat kann dieser über den Button „Einkaufen“
        in den Einkaufswarenkorn gelegt werden. Soll der Einkauf über den Mindestlagerbestand gesteuert werden sind die Felder "Mindestlagerbestand" und "Bestellmenge" auszufüllen.</para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Disp-Artikel.png"/>
          </imageobject>
        </mediaobject>
        <para>Der Button „Einkaufen“ ist deaktiviert, wenn es keinen Lieferanten zu diesem Artikel gibt oder der
        Artikel schon im Einkaufswarenkorb liegt.</para>
      <para>2) Bericht „Meldebestand“
      Über das Menu "Einkauf->Meldebestand" kann der Meldebestand abgerufen werden</para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Disp-Einkauf-meldeb.png"/>
          </imageobject>
        </mediaobject>
        <para>Die obere Tabelle zeigt die Artikel an, die den Mindestbestand unterschritten haben und können
        sofern markiert über die Aktion "Einkaufen" in den Einkaufswarenkorb gelegt werden. Hierzu muss
        das Feld Mindesbestand in den Artikelstammdaten einen Wert > 0 haben</para>
      <para>Die untere Tabelle zeigt die Artikel an, die den Mindestbestand unterschritten haben aber bestellt sind.</para>
      </sect2>

      <sect2>
        <title>Der Einkaufswarenkorb</title>
        <para>Ohne Filter: der erste Lieferant ist ausgewählt. Hier kann jetzt auch ein anderer Lieferant
        ausgewählt werden.</para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Disp-Einkauf-wrnkrb1.png"/>
          </imageobject>
        </mediaobject>
        <para>Wird dann nach einem Lieferanten gefiltert und dieser ist und bleibt eindeutig, kann daraus ein
        Lieferantenauftrag erstellt werden.</para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Disp-Einkauf-wrnkrb.png"/>
          </imageobject>
        </mediaobject>
        <para>Die obere Tabelle zeigt die Artikel an, die den Mindestbestand unterschritten haben, der untere Teil zeigt alle 
        Artikel des Lieferanten an, somit ist es möglich diese Artikel auszuwählen und gleich mitzubestellen</para>
      </sect2>
    </sect1>

    <sect1 id="features.timerecording">
      <title>Zeiterfassung</title>
      <para>
        Seit der Version 3.5.7 enthält kivitendo ein Modul zur Zeiterfassung.
        Damit ist es möglich, auftrags-, kunden- oder projektbezogen,
        Arbeitszeiten zu erfassen. Die erfassten Zeiten können über einen
        Hintergrund-Job in Lieferscheine umgewandelt werden.
      </para>
      <sect2 id="features.timerecording.config">
        <title>Konfiguration</title>
        <para>
          Die Zeiterfasssung funktioniert auch ohne Konfiguration, sofern der Benutzer
          die entsprechenden Rechte besitzt. Allerdings ist
          es möglich, Artikel für die Zeiterfassung zu konfigurieren, die im Bericht
          ausgewertet und bei der Umwandlung zum Lieferschein verwendet werden
          können.
          Zudem kann auf benutzerebene eingestellt werden, ob Zeiten mit Start- und
          End-Zeit oder mit Datum und Dauer erfasst werden sollen.
        </para>
        <sect3 id="features.timerecording.config.rights">
          <title>Zugriffsrechte</title>
          <para>
            In der Rechteverwaltung im Admin-Bereich können im Zusammenhang mit
            der Zeiterfassung drei verschiedene Rechte vergeben werden:

            <itemizedlist>
              <listitem>
                <para><emphasis>Zeiterfassungen erfassen, bearbeiten und ansehen</emphasis></para>
                <para>Diese Recht steuert, ob eine Gruppe den Menüpunkt zur
                Zeiterfassung überhaupt sehen und diese verwenden kann.</para>
              </listitem>

              <listitem>
                <para><emphasis>Zeiterfassungseinträge aller Mitarbeiter anzeigen</emphasis></para>
                <para>Ohne dieses Recht darf ein Benutzer einer Benutzergruppe,
                die die Zeiterfassung verwenden darf, nur Zeiteinträge im Bericht
                sehen, bei denen dieser als Mitarbeiter eingetragen ist.</para>
              </listitem>

              <listitem>
                <para><emphasis>Zeiterfassungseinträge aller Mitarbeiter bearbeiten</emphasis></para>
                <para>Ohne dieses Recht darf ein Benutzer einer Benutzergruppe,
                die die Zeiterfassung verwenden darf, nur Zeiteinträge anlegen
                und bearbeiten, bei denen dieser als Mitarbeiter eingetragen ist.</para>
              </listitem>
          </itemizedlist>

          </para>
        </sect3>
        <sect3 id="features.timerecording.config.part">
          <title>Artikel für Zeiterfassung</title>
          <para>
            Unter <emphasis><guimenu>System</guimenu>
            → <guisubmenu>Artikel für Zeiterfassung</guisubmenu></emphasis>
            können Artikel zur Nutzung mit der Zeiterfassung erfasst werden. Diese Artikel
            müssen eine zeitbasierte Einheit haben.
          </para>
        </sect3>
        <sect3 id="features.timerecording.config.time_or_duration">
          <title>Benutzereinstellungen</title>
          <para>
            Unter <emphasis><guimenu>Programm</guimenu>
            → <guisubmenu>Benutzereinstellungen</guisubmenu></emphasis>
            im Reiter <emphasis>Persönliche Einstellungen</emphasis> bei
            <emphasis>Datum und Dauer für Zeiterfassung verwenden</emphasis>
            kann der Benutzer angeben, ob Zeiten mit Start- und End-Zeit oder mit
            Datum und Dauer erfasst werden sollen.
          </para>
        </sect3>
      </sect2>
      <sect2 id="features.timerecording.add">
        <title>Erfassen</title>
        <para>
          Über den Menüpunkt <emphasis><guimenu>Produktivität</guimenu>
          → <guisubmenu>Zeiterfassung</guisubmenu></emphasis>
          gelangt man zur Erfassungsmaske der Zeiterfassung. Je nach Einstellung
          muss ein Datum oder Datum und Start-Zeit angegeben werden. Ebenso sind
          die Felder <emphasis>Kunde</emphasis> und
          <emphasis>Beschreibung</emphasis>
          Pflichtfelder.
        </para>
        <para>
          Wird ein Auftrag oder ein Projekt, dem ein Kunde zugeordnet ist,
          ausgewählt, so wird das Feld <emphasis>Kunde</emphasis>
          automatisch mit dem zugehörigen Kunden gefüllt und für die
          manuelle Bearbeitung gesperrt.
        </para>
        <para>
          Die End-Zeit bzw. die Dauer ist kein Pflichtfeld, damit
          man einen Eintrag z.B. beim Start der Arbeit anlegen und
          später am Ende dann die End-Zeit bzw. Dauer erfassen kann.
          Bei Eingabe über Start- und End-Zeit dürfen sich die Zeiten für
          ein und denselben Mitarbeiter nicht überlappen.
        </para>
        <para>
          Falls der Bearbeiter das Recht
          <emphasis>Zeiterfassungseinträge aller Mitarbeiter
          bearbeiten</emphasis> besitzt, kann auch der Mitarbeiter für
          diesen Zeiteintrag ausgewählt werden.
        </para>
      </sect2>
      <sect2 id="features.timerecording.report">
        <title>Bericht</title>
        <para>
          Ein Bericht über die erfassten Zeiten lässt sich über
          <emphasis><guimenu>Produktivität</guimenu> → <guisubmenu>Berichte</guisubmenu>
          → <guisubmenu>Zeiterfassung</guisubmenu></emphasis> ausgeben.
          Hier lassen sich die Zeiten auch filtern, sortieren und exportieren.
        </para>
        <para>
          Ausgewählte Zeiteinträge können über <emphasis><guimenu>Aktionen</guimenu>
          → <guisubmenu>Als gebucht markieren</guisubmenu></emphasis> als schon gebucht
          markiert werden. Dies geschieht normalerweise bei der Konvertierung
          zum Lieferschein und kann hier händisch durchgeführt werden, wenn diese
          Zeitbuchungen bei der Konvertierung nicht mehr berücksichtigt werden sollen.
        </para>
      </sect2>
      <sect2 id="features.timerecording.conversion">
        <title>Konvertierung zu Lieferscheinen</title>
        <para>
          Über den Hintergrund-Job
          <emphasis>ConvertTimeRecordings</emphasis> können
          Zeiteinträge in Lieferscheine umgewandelt werden. Hierbei
          werden alle noch nicht gebuchten Zeiteinträge eines
          bestimmten Zeitraums für bestimmte Kunden gesammelt und
          in Lieferscheine umgewandelt.
          Pro Kunde wird ein Lieferschein generiert und
          pro Artikel wird eine Positionszeile erzeugt. Dabei werden
          Einträge mit gleichen Beschreibungen zusammengefasst. Die
          Details landen im Langtext der Position.
        </para>
        <para>
          Ohne übergebene Parameter im Feld <emphasis>Daten</emphasis> werden alle
          Zeiteinträge des letzten Monats für alle Kunden umgewandelt. Dabei
          werden die Zeiten auf volle Viertelstunden aufgerundet (siehe auch
          <xref linkend="features.timerecording.configuration"/>).
        </para>
        <sect3 id="features.timerecording.configuration" xreflabel="Konfigurations-Optionen der Zeiterfassung">
          <title>Konfigurations-Optionen</title>
          <para>
            Zur generellen Konfiguration von Hintergrund-Jobs und zur Übergabe
            von Parametern als Daten an diese, siehe <xref linkend="config.task-server"/>
            bzw. <xref linkend="Tasks-konfigurieren"/>).
          </para>
          <para>
            Folgende Parameter können als <emphasis>Daten</emphasis> an den
            Hintergrund-Job zur Konvertierung übergeben werden:
            <itemizedlist>
              <listitem>
                <para>
                  <emphasis>from_date</emphasis>
                </para>
                <para>
                  Das Startdatum, von welchen an die Zeiteinträge berücksicht werden.
                  Voreinstellung ist der erste Tag des vorherigen Montats.
                </para>
                <para>
                  Beispiel (das Zeitformat hängt von der persönlichen Einstellungen ab):
                  <programlisting>from_date: 01.12.2020</programlisting>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>to_date</emphasis>
                </para>
                <para>
                  Das Datum, bis zu welchem die Zeiteinträge zur Konvertierung gesammelt
                  werden. Voreinstellung ist der letzte Tag des vorherigen Montas.
                </para>
                <para>
                  Beispiel (das Zeitformat hängt von der persönlichen Einstellungen ab):
                  <programlisting>to_date: 15.12.2020</programlisting>
                </para>
              </listitem>

              <listitem>
                <para>
                  <emphasis>customernumbers</emphasis>
                </para>
                <para>
                  Eine Liste mit Kundennummern, für die Zeiteinträge gesammelt werden
                  sollen. Wird diese Liste nicht angegeben, werden Einträge für
                  alle Kunden berücksichtig.
                </para>
                <para>
                  <programlisting>customernumbers: [c1,22332,334343]</programlisting>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>override_part_id</emphasis>
                </para>
                <para>
                  Die Datenbank-Id einer zeitbasierten Dienstleistung, die verwendet
                  werden soll, um die Zeiteinträge zu buchen. Dieser Wert überschreibt
                  den Eintrag des Artikels des Zeiteintrags.
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>default_part_id</emphasis>
                </para>
                <para>
                  Die Datenbank-Id einer zeitbasierten Dienstleistung, die verwendet
                  werden soll, um die Zeiteinträge zu buchen, falls im Zeiteintrag
                  kein Artikel gespeichert ist.
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>rounding</emphasis>
                </para>
                <para>
                  Ist dieser Wert <literal>0</literal>, so werden die Zeiten nicht gerundet.
                  Ist der Wert <literal>1</literal> (oder "wahr" in Perl"), so werden die Zeiten auf volle Viertelstunden aufgerundet, also z.B. 0.25h, 0.5h, 0.75h,
                  1.25h ...
                </para>
                <para>
                  Voreinstellung ist <literal>1</literal> ("wahr").
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>link_order</emphasis>
                </para>
                <para>
                  Ist der Wert <literal>1</literal> (oder "wahr" in Perl"), so verknüpft
                  der Hintergrund-Job den erzeugten Lieferschein mit dem im Zeiteintrag
                  angegebenen Auftrag.
                  Ist kein Auftrag angegeben, wird versucht, einen Auftrag für den
                  angegebenen Kunden und die angegebene Projektnummer zu finden.
                </para>
                <para>
                  Folgende Kriterien werden zum Finden eines Vorgängerauftrags angwendet:
                  <itemizedlist>
                    <listitem><para>
                      Auftrag ist im Zeiteintrag angegeben <emphasis>oder</emphasis>
                    </para></listitem>
                    <listitem><para>
                      Datenbank-Id des Projekts des Auftrags ist gleich
                      der Datenbank-Id des Zeiteintrags <emphasis>oder</emphasis> der in den Daten
                      übergebenen Projekt-Id
                    </para></listitem>
                    <listitem><para>
                      Kunde des Auftrags ist gleich Kunde des Zeiteintrags
                    </para></listitem>
                    <listitem><para>
                      der Auftrag muss mindestens eine zugehörige zeitbasierte Position haben
                    </para></listitem>
                    <listitem><para>
                      das Projekt muss gültig und aktiv sein
                    </para></listitem>
                  </itemizedlist>
                </para>
                <para>
                  Voreinstellung ist aus. Wenn dieser Parameter gesetzt ist, läuft der
                  Hintergrund-Job auf einen Fehler, falls kein geeigneter Vorgängerauftrag
                  gefunden werden kann.
                </para>
                <para>
                  Der Job beachtet nicht, ob der Auftrag schon geliefert oder geschlossen
                  ist.
                  Wenn der Kundenauftrag überliefert wird, muss dies organisatorisch
                  geklärt werden. Der Kundenauftrag kann auch bereits geschlossen sein,
                  d.h. der Betrag ist vollständig fakturiert, aber die Leistungen sind
                  noch nicht vollständig geliefert (einfacher Fall: "Vorauskasse").
                </para>
                <para>
                  siehe auch den Hintergrund-Job
                  <literal>CloseProjectsBelongingToClosedSalesOrder</literal>
                  für eine weitergehende Automatisierung der Abläufe.
                </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis>override_project_id</emphasis>
                  </para>
                  <para>
                    Verwende diese Datenbank-Id für das Projekt an Stelle des
                    im Zeiteintrag angegebenen Projekts, um den zugehörigen Auftrag
                    zu finden. Dieser Parameter wird nur berücksichtig, wenn
                    <emphasis>link_order</emphasis> wahr ist.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis>default_project_id</emphasis>
                  </para>
                  <para>
                    Verwende diese Datenbank-Id für das Projekt, falls
                    im Zeiteintrag kein Projekt angegeben ist, um den
                    zugehörigen Auftrag zu finden.
                    Dieser Parameter wird nur berücksichtig, wenn
                  </para>
                </listitem>
            </itemizedlist>
          </para>
        </sect3>
      </sect2>
    </sect1>

  </chapter>

  <chapter>
    <title>Entwicklerdokumentation</title>

    <sect1 id="devel.globals" xreflabel="Globale Variablen">
      <title>Globale Variablen</title>

      <sect2>
        <title>Wie sehen globale Variablen in Perl aus?</title>

        <para>Globale Variablen liegen in einem speziellen namespace namens
        "main", der von überall erreichbar ist. Darüber hinaus sind bareword
        globs global und die meisten speziellen Variablen sind...
        speziell.</para>

        <para>Daraus ergeben sich folgende Formen:</para>

        <variablelist>
          <varlistentry>
            <term><literal>$main::form</literal></term>

            <listitem>
              <para>expliziter Namespace "main"</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>$::form</literal></term>

            <listitem>
              <para>impliziter Namespace "main"</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>open FILE, "file.txt"</literal></term>

            <listitem>
              <para><varname>FILE</varname> ist global</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>$_</literal></term>

            <listitem>
              <para>speziell</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>Im Gegensatz zu <productname>PHP</productname> gibt es kein
        Schlüsselwort wie "<function>global</function>", mit dem man
        importieren kann. <function>my</function>, <function>our</function>
        und <function>local</function> machen was anderes.</para>

        <variablelist>
          <varlistentry>
            <term><literal>my $form</literal></term>

            <listitem>
              <para>lexikalische Variable, gültig bis zum Ende des
              Scopes</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>our $form</literal></term>

            <listitem>
              <para><varname>$form</varname> referenziert ab hier
              <varname>$PACKAGE::form</varname>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>local $form</literal></term>

            <listitem>
              <para>Alle Änderungen an <varname>$form</varname> werden am Ende
              des scopes zurückgesetzt</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect2>

      <sect2>
        <title>Warum sind globale Variablen ein Problem?</title>

        <para>Das erste Problem ist <productname>FCGI</productname>.</para>

        <para><productname>SQL-Ledger</productname> hat fast alles im globalen
        namespace abgelegt, und erwartet, dass es da auch wiederzufinden ist.
        Unter <productname>FCGI</productname> müssen diese Sachen aber wieder
        aufgeräumt werden, damit sie nicht in den nächsten Request kommen.
        Einige Sachen wiederum sollen nicht gelöscht werden, wie zum Beispiel
        Datenbankverbindungen, weil die sehr lange zum Initialisieren
        brauchen.</para>

        <para>Das zweite Problem ist <function>strict</function>. Unter
        <function>strict</function> werden alle Variablen die nicht explizit
        mit <function>Package</function>, <function>my</function> oder
        <function>our</function> angegeben werden als Tippfehler angemarkert,
        dies hat, seit der Einführung, u.a. schon so manche langwierige
        Bug-Suche verkürzt. Da globale Variablen aber implizit mit Package
        angegeben werden, werden die nicht geprüft, und somit kann sich
        schnell ein Tippfehler einschleichen.</para>
      </sect2>

      <sect2>
        <title>Kanonische globale Variablen</title>

        <para>Um dieses Problem im Griff zu halten gibt es einige wenige
        globale Variablen, die kanonisch sind, d.h. sie haben bestimmte
        vorgegebenen Eigenschaften, und alles andere sollte anderweitig
        umhergereicht werden.</para>

        <para>Diese Variablen sind im Moment die folgenden neun:</para>

        <itemizedlist>
          <listitem>
            <para><varname>$::form</varname></para>
          </listitem>

          <listitem>
            <para><varname>%::myconfig</varname></para>
          </listitem>

          <listitem>
            <para><varname>$::locale</varname></para>
          </listitem>

          <listitem>
            <para><varname>$::lxdebug</varname></para>
          </listitem>

          <listitem>
            <para><varname>$::auth</varname></para>
          </listitem>

          <listitem>
            <para><varname>$::lx_office_conf</varname></para>
          </listitem>

          <listitem>
            <para><varname>$::instance_conf</varname></para>
          </listitem>

          <listitem>
            <para><varname>$::dispatcher</varname></para>
          </listitem>

          <listitem>
            <para><varname>$::request</varname></para>
          </listitem>
        </itemizedlist>

        <para>Damit diese nicht erneut als Müllhalde missbraucht werden, im
        Folgenden eine kurze Erläuterung der bestimmten vorgegebenen
        Eigenschaften (Konventionen):</para>

        <sect3>
          <title>$::form</title>

          <itemizedlist>
            <listitem>
              <para>Ist ein Objekt der Klasse
              "<classname>Form</classname>"</para>
            </listitem>

            <listitem>
              <para>Wird nach jedem Request gelöscht</para>
            </listitem>

            <listitem>
              <para>Muss auch in Tests und Konsolenscripts vorhanden
              sein.</para>
            </listitem>

            <listitem>
              <para>Enthält am Anfang eines Requests die Requestparameter vom
              User</para>
            </listitem>

            <listitem>
              <para>Kann zwar intern über Requestgrenzen ein Datenbankhandle
              cachen, das wird aber momentan absichtlich zerstört</para>
            </listitem>
          </itemizedlist>

          <para><varname>$::form</varname> wurde unter <productname>SQL
          Ledger</productname> als Gottobjekt für alles missbraucht. Sämtliche
          alten Funktionen unter SL/ mutieren <varname>$::form</varname>, das
          heißt, alles was einem lieb ist (alle Variablen die einem ans Herz
          gewachsen sind), sollte man vor einem Aufruf (!) von zum Beispiel
          <function>IS-&gt;retrieve_customer()</function> in Sicherheit
          bringen.</para>

          <para>Z.B. das vom Benutzer eingestellte Zahlenformat, bevor man
          Berechnung in einem bestimmten Format durchführt (SL/Form.pm Zeile
          3552, Stand version 2.7beta), um dies hinterher wieder auf den
          richtigen Wert zu setzen:</para>

          <programlisting>  my $saved_numberformat    = $::myconfig{numberformat};
  $::myconfig{numberformat} = $numberformat;
  # (...) div Berechnungen
  $::myconfig{numberformat} = $saved_numberformat;</programlisting>

          <para>Das Objekt der Klasse Form hat leider im Moment noch viele
          zentrale Funktionen die vom internen Zustand abhängen, deshalb bitte
          nie einfach zerstören oder überschreiben (zumindestens nicht kurz
          vor einem Release oder in Absprache über bspw. die devel-Liste ;-).
          Es geht ziemlich sicher etwas kaputt.</para>

          <para><varname>$::form</varname> ist gleichzeitig der Standard Scope
          in den <productname>Template::Toolkit</productname> Templates
          außerhalb der Controller: der Ausdruck <function>[% var
          %]</function> greift auf <varname>$::form-&gt;{var}</varname> zu.
          Unter Controllern ist der Standard Scope anders, da lautet der
          Zugriff <function>[% FORM.var %]</function>. In Druckvorlagen sind
          normale Variablen ebenfall im <varname>$::form</varname> Scope, d.h.
          <function>&lt;%var%&gt;</function> zeigt auf
          <varname>$::form-&gt;{var}</varname>. Nochmal von der anderen Seite
          erläutert, innerhalb von (Web-)Templates sieht man häufiger solche
          Konstrukte:</para>

          <programlisting>[%- IF business %]
# (... Zeig die Auswahlliste Kunden-/Lieferantentyp an)
[%- END %]</programlisting>

          <para>Entweder wird hier dann $::form-&gt;{business} ausgewertet
          oder aber der Funktion
          <function>$form-&gt;parse_html_template</function> wird explizit
          noch ein zusätzlicher Hash übergeben, der dann auch in den
          (Web-)Templates zu Verfügung steht, bspw. so:</para>

          <programlisting>$form-&gt;parse_html_template("is/form_header", \%TMPL_VAR);</programlisting>

          <para>Innerhalb von Schleifen wird
          <varname>$::form-&gt;{TEMPLATE_ARRAYS}{var}[$index]</varname>
          bevorzugt, wenn vorhanden. Ein Beispiel findet sich in SL/DO.pm,
          welches über alle Positionen eines Lieferscheins in Schleife
          läuft:</para>

          <programlisting>for $i (1 .. $form-&gt;{rowcount}) {
  # ...
  push @{ $form-&gt;{TEMPLATE_ARRAYS}{runningnumber} },   $position;
  push @{ $form-&gt;{TEMPLATE_ARRAYS}{number} },          $form-&gt;{"partnumber_$i"};
  push @{ $form-&gt;{TEMPLATE_ARRAYS}{description} },     $form-&gt;{"description_$i"};
  # ...
}</programlisting>
        </sect3>

        <sect3>
          <title>%::myconfig</title>

          <itemizedlist>
            <listitem>
              <para>Das einzige Hash unter den globalen Variablen</para>
            </listitem>

            <listitem>
              <para>Wird spätestens benötigt wenn auf die Datenbank
              zugegriffen wird</para>
            </listitem>

            <listitem>
              <para>Wird bei jedem Request neu erstellt.</para>
            </listitem>

            <listitem>
              <para>Enthält die Userdaten des aktuellen Logins</para>
            </listitem>

            <listitem>
              <para>Sollte nicht ohne Filterung irgendwo gedumpt werden oder
              extern serialisiert werden, weil da auch der Datenbankzugriff
              für diesen user drinsteht.</para>
            </listitem>

            <listitem>
              <para>Enthält unter anderem Datumsformat dateformat und
              Nummernformat numberformat</para>
            </listitem>

            <listitem>
              <para>Enthält Datenbankzugriffinformationen</para>
            </listitem>
          </itemizedlist>

          <para><varname>%::myconfig</varname> ist im Moment der Ersatz für
          ein Userobjekt. Die meisten Funktionen, die etwas anhand des
          aktuellen Users entscheiden müssen, befragen
          <varname>%::myconfig</varname>. Innerhalb der Anwendungen sind dies
          überwiegend die Daten, die sich unter <guimenu>Programm</guimenu>
          -&gt; <guimenuitem>Einstellungen</guimenuitem> befinden, bzw. die
          Informationen über den Benutzer die über die
          Administrator-Schnittstelle eingegeben wurden.</para>
        </sect3>

        <sect3>
          <title>$::locale</title>

          <itemizedlist>
            <listitem>
              <para>Objekt der Klasse "Locale"</para>
            </listitem>

            <listitem>
              <para>Wird pro Request erstellt</para>
            </listitem>

            <listitem>
              <para>Muss auch für Tests und Scripte immer verfügbar
              sein.</para>
            </listitem>

            <listitem>
              <para>Cached intern über Requestgrenzen hinweg benutzte
              Locales</para>
            </listitem>
          </itemizedlist>

          <para>Lokalisierung für den aktuellen User. Alle Übersetzungen,
          Zahlen- und Datumsformatierungen laufen über dieses Objekt.</para>
        </sect3>

        <sect3>
          <title>$::lxdebug</title>

          <itemizedlist>
            <listitem>
              <para>Objekt der Klasse "LXDebug"</para>
            </listitem>

            <listitem>
              <para>Wird global gecached</para>
            </listitem>

            <listitem>
              <para>Muss immer verfügbar sein, in nahezu allen
              Funktionen</para>
            </listitem>
          </itemizedlist>

          <para><varname>$::lxdebug</varname> stellt Debuggingfunktionen
          bereit, wie "<function>enter_sub</function>" und
          "<function>leave_sub</function>", mit denen in den alten Modulen ein
          brauchbares Tracing gebaut ist, "<function>log_time</function>", mit
          der man die Wallclockzeit seit Requeststart loggen kann, sowie
          "<function>message</function>" und "<function>dump</function>" mit
          denen man flott Informationen ins Log (tmp/kivitendo-debug.log)
          packen kann.</para>

          <para>Beispielsweise so:</para>

          <programlisting>$main::lxdebug-&gt;message(0, 'Meine Konfig:' . Dumper (%::myconfig));
$main::lxdebug-&gt;message(0, 'Wer bin ich? Kunde oder Lieferant:' . $form-&gt;{vc});</programlisting>
        </sect3>

        <sect3>
          <title>$::auth</title>

          <itemizedlist>
            <listitem>
              <para>Objekt der Klasse "SL::Auth"</para>
            </listitem>

            <listitem>
              <para>Wird global gecached</para>
            </listitem>

            <listitem>
              <para>Hat eine permanente DB Verbindung zur Authdatenbank</para>
            </listitem>

            <listitem>
              <para>Wird nach jedem Request resettet.</para>
            </listitem>
          </itemizedlist>

          <para><varname>$::auth</varname> stellt Funktionen bereit um die
          Rechte des aktuellen Users abzufragen. Obwohl diese Informationen
          vom aktuellen User abhängen wird das Objekt aus
          Geschwindigkeitsgründen nur einmal angelegt und dann nach jedem
          Request kurz resettet.</para>

          <para>Dieses Objekt kapselt auch den gerade aktiven Mandanten.
          Dessen Einstellungen können über
          <literal>$::auth-&gt;client</literal> abgefragt werden; Rückgabewert
          ist ein Hash mit den Werten aus der Tabelle
          <literal>auth.clients</literal>.</para>
        </sect3>

        <sect3>
          <title>$::lx_office_conf</title>

          <itemizedlist>
            <listitem>
              <para>Objekt der Klasse
              "<classname>SL::LxOfficeConf</classname>"</para>
            </listitem>

            <listitem>
              <para>Global gecached</para>
            </listitem>

            <listitem>
              <para>Repräsentation der
              <filename>config/kivitendo.conf[.default]</filename>-Dateien</para>
            </listitem>
          </itemizedlist>

          <para>Globale Konfiguration. Configdateien werden zum Start gelesen
          und danach nicht mehr angefasst. Es ist derzeit nicht geplant, dass
          das Programm die Konfiguration ändern kann oder sollte.</para>

          <para>Beispielsweise ist über den Konfigurationseintrag [debug] die
          Debug- und Trace-Log-Datei wie folgt konfiguriert und
          verfügbar:</para>

          <programlisting>[debug]
file_name = /tmp/kivitendo-debug.log</programlisting>

          <para>ist der Key <varname>file</varname> im Programm als
          <varname>$::lx_office_conf-&gt;{debug}{file}</varname>
          erreichbar.</para>

          <warning>
            <para>Zugriff auf die Konfiguration erfolgt im Moment über
            Hashkeys, sind also nicht gegen Tippfehler abgesichert.</para>
          </warning>
        </sect3>

        <sect3>
          <title>$::instance_conf</title>

          <itemizedlist>
            <listitem>
              <para>Objekt der Klasse
              "<classname>SL::InstanceConfiguration</classname>"</para>
            </listitem>

            <listitem>
              <para>wird pro Request neu erstellt</para>
            </listitem>
          </itemizedlist>

          <para>Funktioniert wie <varname>$::lx_office_conf</varname>,
          speichert aber Daten die von der Instanz abhängig sind. Eine Instanz
          ist hier eine Mandantendatenbank. Beispielsweise überprüft
          <programlisting>$::instance_conf-&gt;get_inventory_system eq 'perpetual'</programlisting>
          ob die berüchtigte Bestandsmethode zur Anwendung kommt.</para>
        </sect3>

        <sect3>
          <title>$::dispatcher</title>

          <itemizedlist>
            <listitem>
              <para>Objekt der Klasse
              "<varname>SL::Dispatcher</varname>"</para>
            </listitem>

            <listitem>
              <para>wird pro Serverprozess erstellt.</para>
            </listitem>

            <listitem>
              <para>enthält Informationen über die technische Verbindung zum
              Server</para>
            </listitem>
          </itemizedlist>

          <para>Der dritte Punkt ist auch der einzige Grund warum das Objekt
          global gespeichert wird. Wird vermutlich irgendwann in einem anderen
          Objekt untergebracht.</para>
        </sect3>

        <sect3>
          <title>$::request</title>

          <itemizedlist>
            <listitem>
              <para>Hashref (evtl später Objekt)</para>
            </listitem>

            <listitem>
              <para>Wird pro Request neu initialisiert.</para>
            </listitem>

            <listitem>
              <para>Keine Unterstruktur garantiert.</para>
            </listitem>
          </itemizedlist>

          <para><varname>$::request</varname> ist ein generischer Platz um
          Daten "für den aktuellen Request" abzulegen. Sollte nicht für action
          at a distance benutzt werden, sondern um lokales memoizing zu
          ermöglichen, das garantiert am Ende des Requests zerstört
          wird.</para>

          <para>Vieles von dem, was im moment in <varname>$::form</varname>
          liegt, sollte eigentlich hier liegen. Die groben
          Differentialkriterien sind:</para>

          <itemizedlist>
            <listitem>
              <para>Kommt es vom User, und soll unverändert wieder an den
              User? Dann <varname>$::form</varname>, steht da eh schon</para>
            </listitem>

            <listitem>
              <para>Sind es Daten aus der Datenbank, die nur bis zum Ende des
              Requests gebraucht werden? Dann
              <varname>$::request</varname></para>
            </listitem>

            <listitem>
              <para>Muss ich von anderen Teilen des Programms lesend drauf
              zugreifen? Dann <varname>$::request</varname>, aber Zugriff über
              Wrappermethode</para>
            </listitem>
          </itemizedlist>
        </sect3>
      </sect2>

      <sect2>
        <title>Ehemalige globale Variablen</title>

        <para>Die folgenden Variablen waren einmal im Programm, und wurden
        entfernt.</para>

        <sect3>
          <title>$::cgi</title>

          <itemizedlist>
            <listitem>
              <para>war nötig, weil cookie Methoden nicht als
              Klassenfunktionen funktionieren</para>
            </listitem>

            <listitem>
              <para>Aufruf als Klasse erzeugt Dummyobjekt was im
              Klassennamespace gehalten wird und über Requestgrenzen
              leaked</para>
            </listitem>

            <listitem>
              <para>liegt jetzt unter
              <varname>$::request-&gt;{cgi}</varname></para>
            </listitem>
          </itemizedlist>
        </sect3>

        <sect3>
          <title>$::all_units</title>

          <itemizedlist>
            <listitem>
              <para>war nötig, weil einige Funktionen in Schleifen zum Teil
              ein paar hundert mal pro Request eine Liste der Einheiten
              brauchen, und de als Parameter durch einen Riesenstack von
              Funktionen geschleift werden müssten.</para>
            </listitem>

            <listitem>
              <para>Liegt jetzt unter
              <varname>$::request-&gt;{cache}{all_units}</varname></para>
            </listitem>

            <listitem>
              <para>Wird nur in
              <function>AM-&gt;retrieve_all_units()</function> gesetzt oder
              gelesen.</para>
            </listitem>
          </itemizedlist>
        </sect3>

        <sect3>
          <title>%::called_subs</title>

          <itemizedlist>
            <listitem>
              <para>wurde benutzt um callsub deep recursions
              abzufangen.</para>
            </listitem>

            <listitem>
              <para>Wurde entfernt, weil callsub nur einen Bruchteil der
              möglichen Rekursioenen darstellt, und da nie welche
              auftreten.</para>
            </listitem>

            <listitem>
              <para>komplette recursion protection wurde entfernt.</para>
            </listitem>
          </itemizedlist>
        </sect3>
      </sect2>
    </sect1>

    <sect1 id="devel.fcgi">
      <title>Entwicklung unter FastCGI</title>

      <sect2 id="devel.fcgi.general">
        <title>Allgemeines</title>

        <para>Wenn Änderungen in der Konfiguration von kivitendo gemacht
        werden, muss der Webserver neu gestartet werden.</para>

        <para>Bei der Entwicklung für FastCGI ist auf ein paar Fallstricke zu
        achten. Dadurch, dass das Programm in einer Endlosschleife läuft,
        müssen folgende Aspekte beachtet werden.</para>
      </sect2>

      <sect2 id="devel.fcgi.exiting">
        <title>Programmende und Ausnahmen</title>

        <para>Betrifft die Funktionen <function>warn</function>,
        <function>die</function>, <function>exit</function>,
        <function>carp</function> und <function>confess</function>.</para>

        <para>Fehler, die dass Programm normalerweise sofort beenden (fatale
        Fehler), werden mit dem FastCGI Dispatcher abgefangen, um das Programm
        am Laufen zu halten. Man kann mit <function>die</function>,
        <function>confess</function> oder <function>carp</function> Fehler
        ausgeben, die dann vom Dispatcher angezeigt werden. Die kivitendo
        eigene <function>$::form-</function>error()&gt; tut im Prinzip das
        Gleiche, mit ein paar Extraoptionen. <function>warn</function> und
        <function>exit</function> hingegen werden nicht abgefangen.
        <function>warn</function> wird direkt nach STDERR, also in Server Log
        eine Nachricht schreiben (sofern in der Konfiguration nicht die
        Warnungen in das kivitendo Log umgeleitet wurden), und
        <function>exit</function> wird die Ausführung beenden.</para>

        <para>Prinzipiell ist es kein Beinbruch, wenn sich der Prozess
        beendet, fcgi wird ihn sofort neu starten. Allerdings sollte das die
        Ausnahme sein. Quintessenz: Bitte kein <function>exit</function>
        benutzen, alle anderen Exceptionmechanismen sind ok.</para>
      </sect2>

      <sect2 id="devel.fcgi.globals">
        <title>Globale Variablen</title>

        <para>Um zu vermeiden, dass Informationen von einem Request in einen
        anderen gelangen, müssen alle globalen Variablen vor einem Request
        sauber initialisiert werden. Das ist besonders wichtig im
        <varname>$::cgi</varname> und <varname>$::auth</varname> Objekt, weil
        diese nicht gelöscht werden pro Instanz, sondern persistent gehalten
        werden.</para>

        <para>In <classname>SL::Dispatcher</classname> gibt es einen sauber
        abgetrennten Block, der alle kanonischen globalen Variablen listet und
        erklärt. Bitte keine anderen einführen ohne das sauber zu
        dokumentieren.</para>

        <para>Datenbankverbindungen wird noch ein Guide verfasst werden, wie
        man sicher geht, dass man die richtige erwischt.</para>
      </sect2>

      <sect2 id="devel.fcgi.performance">
        <title>Performance und Statistiken</title>

        <para>Die kritischen Pfade des Programms sind die Belegmasken, und
        unter diesen ganz besonders die Verkaufsrechnungsmaske. Ein Aufruf der
        Rechnungsmaske in kivitendo 2.4.3 stable dauert auf einem Core2duo mit
        4GB Arbeitsspeicher und Ubuntu 9.10 eine halbe Sekunde. In der 2.6.0
        sind es je nach Menge der definierten Variablen 1-2s. Ab der
        Moose/Rose::DB Version sind es 5-6s.</para>

        <para>Mit FastCGI ist die neuste Version auf 0,26 Sekunden selbst in
        den kritischen Pfaden, unter 0,15 sonst.</para>
      </sect2>
    </sect1>

    <sect1 id="dev-programmatic-api-calls" xreflabel="Programmatische API-Aufrufe">
      <title>Programmatische API-Aufrufe</title>

      <sect2 id="dev-programmatic-api-calls.introduction" xreflabel="Einführung in programmatische API-Aufrufe">
        <title>Einführung</title>

        <para>
         Es ist möglich, Funktionen in kivitendo programmatisch aus anderen Programmen aufzurufen. Dazu ist nötig, dass
         Authentifizierungsinformationen in jedem Aufruf mitgegeben werden. Dafür gibt es zwei Methoden: die HTTP-»Basic«-Authentifizierung
         oder die Übergabe als spziell benannte GET-Parameter. Neben den Authentifizierungsinformationen muss auch der zu verwendende Mandant
         übergeben werden.
        </para>
      </sect2>

      <sect2 id="dev-programmatic-api-calls.client_selection" xreflabel="Mandantenauswahl bei programmatischen API-Aufrufen">
        <title>Wahl des Mandanten</title>

        <para>
         Der zu verwendende Mandant kann als Parameter <varname>{AUTH}client_id</varname> mit jedem Request mitgeschickt werden. Der Wert
         muss dabei die Datenbank-ID des Mandanten sein. kivitendo prüft, ob der Account, der über die Authentifizierungsinformationen
         übergeben wurde, Zugriff auf den angegebenen Mandanten hat.
        </para>

        <para>
         Wird in einem Request kein Mandant mitgegeben, so wird derjenige Mandant genommen, wer als Standardmandant markiert wurde. Gibt es
         keinen solchen, kommt es zu einer Fehlermeldung.
        </para>
      </sect2>

      <sect2 id="dev-programmatic-api-calls.http_basic_authentication" xreflabel="Programmatische API-Aufrufe mit HTTP-»Basic« authentifizieren">
        <title>HTTP-»Basic«-Authentifizierung</title>

        <para>
         Für diese Methode muss jedem Request der bekannte HTTP-Header <constant>Authorization</constant> mitgeschickt werden (siehe <ulink
         url="https://tools.ietf.org/html/rfc7617">RFC 7617</ulink>). Unterstützt wird ausschließlich die »Basic«-Methode. Loginname und
         Passwort werden bei dieser Methode durch einen Doppelpunkt getrennt und Base64-encodiert im genannten HTTP-Header übertragen.
        </para>

        <para>
         Diese Informationen müssen einen vorhandenen Account benennen. kivitendo prüft genau wie bei Benutzung über den Webbrowser, ob
         dieser Account Zugriff auf den Mandanten sowie auf die angeforderte Funktion hat.
        </para>

        <para>
         Da die Logininformationen im Klartext im Request stehen, sollte der Zugriff auf kivitendo ausschließlich über HTTPS verschlüsselt
         erfolgen.
        </para>
      </sect2>

      <sect2 id="dev-programmatic-api-calls.authentication_via_parameters" xreflabel="Programmatische API-Aufrufe mit Parametern authentifizieren">
        <title>Authentifizierung mit Parametern</title>

        <para>
         Für diese Methode müssen jedem Request zwei Parameter mitgegeben werden: <varname>{AUTH}login</varname> und
         <varname>{AUTH}password</varname>. Diese Informationen müssen einen vorhandenen Account benennen. kivitendo prüft genau wie bei
         Benutzung über den Webbrowser, ob dieser Account Zugriff auf den Mandanten sowie auf die angeforderte Funktion hat.
        </para>

        <para>
         Da die Logininformationen im Klartext im Request stehen, sollte der Zugriff auf kivitendo ausschließlich über HTTPS verschlüsselt
         erfolgen.
        </para>

        <note>
         <para>
          Die Verwendung dieser Methode ist veraltet. Statt dessen sollte die oben erwähnte HTTP-»Basic«-Authentifizierung verwendet werden.
         </para>
        </note>
      </sect2>

      <sect2 id="dev-programmatic-api-calls.examples">
        <title>Beispiele</title>

        <para>
         Das folgende Beispiel nutzt das Kommandozeilenprogramm »curl« und ruft die Funktion auf, die eine vorhandene Telefonnummer in den
         Ansprechpersonen sucht und dazu Informationen zurückliefert. Dabei wird die HTTP-»Basic«-Authentifizierung genutzt.
        </para>

        <programlisting>$ curl --silent --user 'jdoe:SecretPassword!' \
  'https://…/controller.pl?action=PhoneNumber/look_up&amp;number=053147110815'</programlisting>
      </sect2>
    </sect1>

    <sect1 id="db-upgrade-files" xreflabel="Datenbank-Upgradedateien">
      <title>SQL-Upgradedateien</title>

      <sect2 id="db-upgrade-files.introduction"
             xreflabel="Einführung in die Datenbank-Upgradedateien">
        <title>Einführung</title>

        <para>Datenbankupgrades werden über einzelne Upgrade-Scripte
        gesteuert, die sich im Verzeichnis
        <filename>sql/Pg-upgrade2</filename> befinden. In diesem Verzeichnis
        muss pro Datenbankupgrade eine Datei existieren, die neben den
        eigentlich auszuführenden SQL- oder Perl-Befehlen einige
        Kontrollinformationen enthält.</para>

        <para>Kontrollinformationen definieren Abhängigkeiten und Prioritäten,
        sodass Datenbankscripte zwar in einer sicheren Reihenfolge ausgeführt
        werden (z.B. darf ein <literal>ALTER TABLE</literal> erst ausgeführt
        werden, wenn die Tabelle mit <literal>CREATE TABLE</literal> angelegt
        wurde), diese Reihenfolge aber so flexibel ist, dass man keine
        Versionsnummern braucht.</para>

        <para>kivitendo merkt sich dabei, welches der Upgradescripte in
        <filename>sql/Pg-upgrade2</filename> bereits durchgeführt wurde und
        führt diese nicht erneut aus. Dazu dient die Tabelle
        "<literal>schema_info</literal>", die bei der Anmeldung automatisch
        angelegt wird.</para>
      </sect2>

      <sect2 id="db-upgrade-files.format"
             xreflabel="Format der Upgradedateien">
        <title>Format der Kontrollinformationen</title>

        <para>Die Kontrollinformationen sollten sich am Anfang der jeweiligen
        Upgradedatei befinden. Jede Zeile, die Kontrollinformationen enthält,
        hat dabei das folgende Format:</para>

        <para>Für SQL-Upgradedateien:</para>

        <programlisting>-- @key: value</programlisting>

        <para>Für Perl-Upgradedateien:</para>

        <programlisting># @key: value</programlisting>

        <para>Leerzeichen vor "<varname>value</varname>" werden
        entfernt.</para>

        <para>Die folgenden Schlüsselworte werden verarbeitet:</para>

        <variablelist>
          <varlistentry>
            <term><varname>tag</varname></term>

            <listitem>
              <para>Wird zwingend benötigt. Dies ist der "Name" des Upgrades.
              Dieser "tag" kann von anderen Kontrolldateien in ihren
              Abhängigkeiten verwendet werden (Schlüsselwort
              "<varname>depends</varname>"). Der "tag" ist auch der Name, der
              in der Datenbank eingetragen wird.</para>

              <para>Normalerweise sollte die Kontrolldatei genau so heißen wie
              der "tag", nur mit der Endung ".sql" bzw. "pl".</para>

              <para>Ein Tag darf nur aus alphanumerischen Zeichen sowie den
              Zeichen _ - ( ) bestehen. Insbesondere sind Leerzeichen nicht
              erlaubt und sollten stattdessen mit Unterstrichen ersetzt
              werden.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>charset</varname></term>

            <listitem>
              <para>Empfohlen. Gibt den Zeichensatz an, in dem das Script
              geschrieben wurde, z.B. "<literal>UTF-8</literal>". Aus
              Kompatibilitätsgründen mit alten Upgrade-Scripten wird bei
              Abwesenheit des Tags für SQL-Upgradedateien der Zeichensatz
              "<literal>ISO-8859-15</literal>" angenommen. Perl-Upgradescripte
              hingegen müssen immer in UTF-8 encodiert sein und sollten
              demnach auch ein "<literal>use utf8;</literal>"
              enthalten.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>description</varname></term>

            <listitem>
              <para>Benötigt. Eine Beschreibung, was in diesem Update
              passiert. Diese wird dem Benutzer beim eigentlichen
              Datenbankupdate angezeigt. Während der Tag in Englisch gehalten
              sein sollte, sollte die Beschreibung auf Deutsch
              erfolgen.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>depends</varname></term>

            <listitem>
              <para>Optional. Eine mit Leerzeichen getrennte Liste von "tags",
              von denen dieses Upgradescript abhängt. kivitendo stellt sicher,
              dass die in dieser Liste aufgeführten Scripte bereits
              durchgeführt wurden, bevor dieses Script ausgeführt wird.</para>

              <para>Abhängigkeiten werden rekursiv betrachtet. Wenn also ein
              Script "b" existiert, das von Änderungen in "a" abhängt, und
              eine neue Kontrolldatei für "c" erstellt wird, die von
              Änderungen in "a" und "b" abhängt, so genügt es, in "c" nur den
              Tag "b" als Abhängigkeit zu definieren.</para>

              <para>Es ist nicht erlaubt, sich selbst referenzierende
              Abhängigkeiten zu definieren (z.B. "a" -&gt; "b", "b" -&gt; "c"
              und "c" -&gt; "a").</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>priority</varname></term>

            <listitem>
              <para>Optional. Ein Zahlenwert, der die Reihenfolge bestimmt, in
              der Scripte ausgeführt werden, die die gleichen
              Abhängigkeitstiefen besitzen. Fehlt dieser Parameter, so wird
              der Wert 1000 benutzt.</para>

              <para>Dies ist reine Kosmetik. Für echte Reihenfolgen muss
              "depends" benutzt werden. kivitendo sortiert die auszuführenden
              Scripte zuerst nach der Abhängigkeitstiefe (wenn "z" von "y"
              abhängt und "y" von "x", so hat "z" eine Abhängigkeitstiefe von
              2, "y" von 1 und "x" von 0. "x" würde hier zuerst ausgeführt,
              dann "y", dann "z"), dann nach der Priorität und bei gleicher
              Priorität alphabetisch nach dem "tag".</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><varname>ignore</varname></term>

            <listitem>
              <para>Optional. Falls der Wert auf 1 (true) steht, wird das
              Skript bei der Anmeldung ignoriert und entsprechend nicht
              ausgeführt.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect2>

      <sect2 id="db-upgrade-files.format-perl-files"
             xreflabel="Format von Perl-Upgradedateien">
        <title>Format von in Perl geschriebenen
        Datenbankupgradescripten</title>

        <para>In Perl geschriebene Datenbankscripte werden nicht einfach so
        ausgeführt sondern müssen sich an gewisse Konventionen halten. Dafür
        bekommen sie aber auch einige Komfortfunktionen bereitgestellt.</para>

        <para>Ein Upgradescript stellt dabei eine vollständige Objektklasse
        dar, die vom Elternobjekt "<literal>SL::DBUpgrade2::Base</literal>"
        erben und eine Funktion namens "<literal>run</literal>" zur Verfügung
        stellen muss. Das Script wird ausgeführt, indem eine Instanz dieser
        Klasse erzeugt und darauf die erwähnte "<literal>run</literal>"
        aufgerufen wird.</para>

        <para>Zu beachten ist, dass sich der Paketname der Datei aus dem Wert
        für "<literal>@tag</literal>" ableitet. Dabei werden alle Zeichen, die
        in Paketnamen ungültig wären (gerade Bindestriche), durch Unterstriche
        ersetzt. Insgesamt sieht der Paketname wie folgt aus:
        "<literal>SL::DBUpgrade2::tag</literal>".</para>

        <para>Welche Komfortfunktionen zur Verfügung stehen, erfahren Sie in
        der Perl-Dokumentation zum oben genannten Modul; aufzurufen mit
        "<command>perldoc SL/DBUpgrade2/Base.pm</command>".</para>

        <para>Ein Mindestgerüst eines gültigen Perl-Upgradescriptes sieht wie
        folgt aus:</para>

        <programlisting># @tag: beispiel-upgrade-file42
# @description: Ein schönes Beispielscript
# @depends: release_3_1_0
package SL::DBUpgrade2::beispiel_upgrade_file42;

use strict;
use utf8;

use parent qw(SL::DBUpgrade2::Base);

sub run {
  my ($self) = @_;

  # hier Aktionen ausführen

  return 1;
}

1;
</programlisting>
      </sect2>

      <sect2 id="db-upgrade-files.dbupgrade-tool"
             xreflabel="Hilfsscript dbupgrade2_tool.pl">
        <title>Hilfsscript dbupgrade2_tool.pl</title>

        <para>Um die Arbeit mit den Abhängigkeiten etwas zu erleichtern,
        existiert ein Hilfsscript namens
        "<filename>scripts/dbupgrade2_tool.pl</filename>". Es muss aus dem
        kivitendo-ERP-Basisverzeichnis heraus aufgerufen werden. Dieses Tool
        liest alle Datenbankupgradescripte aus dem Verzeichnis
        <filename>sql/Pg-upgrade2</filename> aus. Es benutzt dafür die
        gleichen Methoden wie kivitendo selber, sodass alle Fehlersituationen
        von der Kommandozeile überprüft werden können.</para>

        <para>Wird dem Script kein weiterer Parameter übergeben, so wird nur
        eine Überprüfung der Felder und Abhängigkeiten vorgenommen. Man kann
        sich aber auch Informationen auf verschiedene Art ausgeben
        lassen:</para>

        <itemizedlist>
          <listitem>
            <para>Listenform: "<command>./scripts/dbupgrade2_tool.pl
            --list</command>"</para>

            <para>Gibt eine Liste aller Scripte aus. Die Liste ist in der
            Reihenfolge sortiert, in der kivitendo die Scripte ausführen
            würde. Es werden neben der Listenposition der Tag, die
            Abhängigkeitstiefe und die Priorität ausgegeben.</para>
          </listitem>

          <listitem>
            <para>Baumform: "<command>./scripts/dbupgrade2_tool.pl
            --tree</command>"</para>

            <para>Listet alle Tags in Baumform basierend auf den
            Abhängigkeiten auf. Die "Wurzelknoten" sind dabei die Scripte, von
            denen keine anderen abhängen. Die Unterknoten sind Scripte, die
            beim übergeordneten Script als Abhängigkeit eingetragen
            sind.</para>
          </listitem>

          <listitem id="db-upgrade-files.dbupgrade-tool.reverse-tree">
            <para>Umgekehrte Baumform: "<command>./scripts/dbupgrade2_tool.pl
            --rtree</command>"</para>

            <para>Listet alle Tags in Baumform basierend auf den
            Abhängigkeiten auf. Die "Wurzelknoten" sind dabei die Scripte mit
            der geringsten Abhängigkeitstiefe. Die Unterknoten sind Scripte,
            die das übergeordnete Script als Abhängigkeit eingetragen
            haben.</para>
          </listitem>

          <listitem>
            <para>Baumform mit Postscriptausgabe:
            "<command>./scripts/dbupgrade2_tool.pl
            --graphviz</command>"</para>

            <para>Benötigt das Tool "<command>graphviz</command>", um mit
            seiner Hilfe die <link
            linkend="db-upgrade-files.dbupgrade-tool.reverse-tree">umgekehrte
            Baumform</link> in eine Postscriptdatei namens
            "<filename>db_dependencies.ps</filename>" auszugeben. Dies ist
            vermutlich die übersichtlichste Form, weil hierbei jeder Knoten
            nur einmal ausgegeben wird. Bei den Textmodusbaumformen hingegen
            können Knoten und all ihre Abhängigkeiten mehrfach ausgegeben
            werden.</para>
          </listitem>

          <listitem>
            <para>Scripte, von denen kein anderes Script abhängt:
            "<command>./scripts/dbupgrade2_tool.pl --nodeps</command>"</para>

            <para>Listet die Tags aller Scripte auf, von denen keine anderen
            Scripte abhängen.</para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>

    <sect1 id="translations-languages" xreflabel="Translations and languages">
      <title>Translations and languages</title>

      <sect2 id="translations-languages.introduction"
             xreflabel="Introduction to translations and languages">
        <title>Introduction</title>

        <note>
          <para>Dieser Abschnitt ist in Englisch geschrieben, um
          internationalen Übersetzern die Arbeit zu erleichtern.</para>
        </note>

        <para>This section describes how localization packages in kivitendo
        are built. Currently the only language fully supported is German, and
        since most of the internal messages are held in English the English
        version is usable too.</para>
      </sect2>

      <sect2 id="translations-languages.character-set"
             xreflabel="Character set">
        <title>Character set</title>

        <para>All files included in a language pack must use UTF-8 as their
        encoding.</para>
      </sect2>

      <sect2 id="translations-languages.file-structure"
             xreflabel="File structure">
        <title>File structure</title>

        <para>The structure of locales in kivitendo is:</para>

        <programlisting>kivitendo/locale/&lt;langcode&gt;/</programlisting>

        <para>where &lt;langcode&gt; stands for an abbreviation of the
        language package. The builtin packages use two letter <ulink
        url="http://en.wikipedia.org/wiki/ISO_639-1">ISO 639-1</ulink> codes,
        but the actual name is not relevant for the program and can easily be
        extended to <ulink
        url="http://en.wikipedia.org/wiki/IETF_language_tag">IETF language
        tags</ulink> (i.e. "en_GB"). In fact the original language packages
        from SQL Ledger are named in this way.</para>

        <para>In such a language directory the following files are
        recognized:</para>

        <variablelist>
          <varlistentry>
            <term>LANGUAGE</term>

            <listitem>
              <para>This file is mandatory.</para>

              <para>The <filename>LANGUAGE</filename> file contains the self
              descripted name of the language. It should contain a native
              representation first, and in parenthesis an english translation
              after that. Example:</para>

              <programlisting>Deutsch (German)</programlisting>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>all</term>

            <listitem>
              <para>This file is mandatory.</para>

              <para>The central translation file. It is essentially an inline
              Perl script autogenerated by <command>locales.pl</command>. To
              generate it, generate the directory and the two files mentioned
              above, and execute the following command:</para>

              <programlisting>scripts/locales.pl &lt;langcode&gt;</programlisting>

              <para>Otherwise you can simply copy one of the other languages.
              You will be told how many are missing like this:</para>

              <programlisting>$ scripts/locales.pl en
English - 0.6% - 2015/2028 missing</programlisting>

              <para>A file named "<filename>missing</filename>" will be
              generated and can be edited. You can also edit the
              "<filename>all</filename>" file directly. Edit everything you
              like to fit the target language and execute
              <command>locales.pl</command> again. See how the missing words
              get fewer.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Num2text</term>

            <listitem>
              <para>Legacy code from SQL Ledger. It provides a means for
              numbers to be converted into natural language, like
              <literal>1523 =&gt; one thousand five hundred twenty
              three</literal>. If you want to provide it, it must be inlinable
              Perl code which provides a <function>num2text</function> sub. If
              an <function>init</function> sub exists it will be executed
              first.</para>

              <para>Only used in the check and receipt printing module.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>special_chars</term>

            <listitem>
              <para>kivitendo comes with a lot of interfaces to different
              formats, some of which are rather picky with their accepted
              charset. The <filename>special_chars</filename> file contains a
              listing of chars not suited for different file format and
              provides substitutions. It is written in "Simple Ini" style,
              containing a block for every file format.</para>

              <para>First entry should be the order of substitution for
              entries as a whitespace separated list. All entries are
              interpolated, so <literal>\n</literal>, <literal>\x20</literal>
              and <literal>\\</literal> all work.</para>

              <para>After that every entry is a special char that should be
              translated when writing text into such a file.</para>

              <para>Example:</para>

              <programlisting>[Template/XML]
order=&amp; &lt; &gt; \n
&amp;=&amp;amp;
&lt;=&amp;lt;
&gt;=&amp;gt;
\n=&lt;br&gt;</programlisting>

              <para>Note the importance of the order in this example.
              Substituting &lt; and &gt; befor &amp; would lead to $gt; become
              &amp;amp;gt;</para>

              <para>For a list of valid formats, see the German
              <filename>special_chars</filename> entry. As of this writing the
              following are recognized:</para>

              <programlisting>HTML
URL@HTML
Template/HTML
Template/XML
Template/LaTeX
Template/OpenDocument
filenames</programlisting>

              <para>The last of which is very machine dependent. Remember that
              a lot of characters are forbidden by some filesystems, for
              example MS Windows doesn't like ':' in its files where Linux
              doesn't mind that. If you want the files created with your
              language pack to be portable, find all chars that could cause
              trouble.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>missing</term>

            <listitem>
              <para>This file is not a part of the language package
              itself.</para>

              <para>This is a file generated by
              <command>scripts/locales.pl</command> while processing your
              locales. It's only to have the missing entries singled out and
              does not belong to a language package.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>lost</term>

            <listitem>
              <para>This file is not a part of the language package
              itself.</para>

              <para>Another file generated by
              <command>scripts/locales.pl</command>. If for any reason a
              translation does not appear anymore and can be deleted, it gets
              moved here. The last 50 or so entries deleted are saved here in
              case you made a typo, so that you don't have to translate
              everything again. If a tranlsation is missing, the lost file is
              checked first. If you maintain a language package, you might
              want to keep this safe somewhere.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>more/all</term>

            <listitem>
              <para>This subdir and file is not a part of the language package
              itself.</para>

              <para>If the directory more exists and contains a file called
              all it will be parsed in addition to the mandatory all (see
              above). The file is useful if you want to change some
              translations for the current installation without conflicting
              further upgrades. The file is not autogenerated and has the same
              format as the all, but needs another key (more_texts). See the
              german translation for an example or copy the following code:
              <programlisting>
#!/usr/bin/perl
# -*- coding: utf-8; -*-
# vim: fenc=utf-8

use utf8;

# These are additional texts for custom translations.
# The format is the same as for the normal file all, only
# with another key (more_texts instead of texts).
# The file has the form of 'english text'  =&gt; 'foreign text',

$self-&gt;{more_texts} = {

  'Ship via'                    =&gt; 'Terms of delivery',
  'Shipping Point'              =&gt; 'Delivery time',
}
              </programlisting></para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect2>
    </sect1>

    <sect1 id="devel.testsuite">
      <title>Die kivitendo-Test-Suite</title>

      <sect2 id="devel.testsuite.intro">
        <title>Einführung</title>

        <para>kivitendo enthält eine Suite für automatisierte Tests. Sie
        basiert auf dem Standard-Perl-Modul
        <literal>Test::More</literal>.</para>

        <para>Die grundlegenden Fakten sind:</para>

        <itemizedlist>
          <listitem>
            <para>Alle Tests liegen im Unterverzeichnis
            <filename>t/</filename>.</para>
          </listitem>

          <listitem>
            <para>Ein Script (bzw. ein Test) in <filename>t/</filename>
            enthält einen oder mehrere Testfälle.</para>
          </listitem>

          <listitem>
            <para>Alle Dateinamen von Tests enden auf <literal>.t</literal>.
            Es sind selbstständig ausführbare Perl-Scripte.</para>
          </listitem>

          <listitem>
            <para>Die Test-Suite besteht aus der Gesamtheit aller Tests,
            sprich aller Scripte in <filename>t/</filename>, deren Dateiname
            auf <literal>.t</literal> endet.</para>
          </listitem>
        </itemizedlist>
      </sect2>

      <sect2 id="devel.testsuite.prerequisites">
        <title>Voraussetzungen</title>

        <para>Für die Ausführung werden neben den für kivitendo eh schon
        benötigten Module noch weitere Perl-Module benötigt. Diese
        sind:</para>

        <itemizedlist>
          <listitem>
            <para><literal>Test::Deep</literal> (Debian-Paketname:
            <literal>libtest-deep-perl</literal>; Fedora:
            <literal>perl-Test-Deep</literal>; openSUSE:
            <literal>perl-Test-Deep</literal>)</para>
          </listitem>

          <listitem>
            <para><literal>Test::Exception</literal> (Debian-Paketname:
            <literal>libtest-exception-perl</literal>; Fedora:
            <literal>perl-Test-Exception</literal>; openSUSE:
            <literal>perl-Test-Exception</literal>)</para>
          </listitem>

          <listitem>
            <para><literal>Test::Output</literal> (Debian-Paketname:
            <literal>libtest-output-perl</literal>; Fedora:
            <literal>perl-Test-Output</literal>; openSUSE:
            <literal>perl-Test-Output</literal>)</para>
          </listitem>

          <listitem>
            <para><literal>Test::Harness</literal> 3.0.0 oder höher. Dieses
            Modul ist ab Perl 5.10.1 Bestandteil der Perl-Distribution und
            kann für frühere Versionen aus dem <ulink
            url="http://www.cpan.org">CPAN</ulink> bezogen werden.</para>
          </listitem>

          <listitem>
            <para><literal>LWP::Simple</literal> aus dem Paket
            <literal>libwww-perl</literal> (Debian-Panetname:
            <literal>libwww-perl</literal>; Fedora:
            <literal>perl-libwww-perl</literal>; openSUSE:
            <literal>perl-libwww-perl</literal>)</para>
          </listitem>

          <listitem>
            <para><literal>URI::Find</literal> (Debian-Panetname:
            <literal>liburi-find-perl</literal>; Fedora:
            <literal>perl-URI-Find</literal>; openSUSE:
            <literal>perl-URI-Find</literal>)</para>
          </listitem>

          <listitem>
            <para><literal>Sys::CPU</literal> (Debian-Panetname:
            <literal>libsys-cpu-perl</literal>; Fedora und openSUSE: nicht
            vorhanden)</para>
          </listitem>

          <listitem>
            <para><literal>Thread::Pool::Simple</literal> (Debian-Panetname:
            <literal>libthread-pool-simple-perl</literal>; Fedora und
            openSUSE: nicht vorhanden)</para>
          </listitem>
        </itemizedlist>

        <para>Weitere Voraussetzung ist, dass die Testsuite ihre eigene
        Datenbank anlegen kann, um Produktivdaten nicht zu gefährden. Dazu
        müssen in der Konfigurationsdatei im Abschnit
        <literal>testing/database</literal> Datenbankverbindungsparameter
        angegeben werden. Der hier angegebene Benutzer muss weiterhin das
        Recht haben, Datenbanken anzulegen und zu löschen.</para>

        <para>Der so angegebene Benutzer muss nicht zwingend über
        Super-User-Rechte verfügen. Allerdings gibt es einige
        Datenbank-Upgrades, die genau diese Rechte benötigen. Für den Fall
        kann man in diesem Konfigurationsabschnitt einen weiteren
        Benutzeraccount angeben, der dann über Super-User-Rechte verfügt, und
        mit dem die betroffenen Upgrades durchgeführt werden. In der
        Beispiel-Konfigurationsdatei finden Sie die benötigten
        Parameter.</para>
      </sect2>

      <sect2 id="devel.testsuite.execution">
        <title>Existierende Tests ausführen</title>

        <para>Es gibt mehrere Möglichkeiten zum Ausführen der Tests: entweder,
        man lässt alle Tests auf einmal ausführen, oder man führt gezielt
        einzelne Scripte aus. Für beide Fälle gibt es das Helferscript
        <filename>t/test.pl</filename>.</para>

        <para>Will man die komplette Test-Suite ausführen, so muss man einfach
        nur <filename>t/test.pl</filename> ohne weitere Parameter aus dem
        kivitendo-Basisverzeichnis heraus ausführen.</para>

        <para>Um einzelne Test-Scripte auszuführen, übergibt man deren Namen
        an <filename>t/test.pl</filename>. Beispielsweise:</para>

        <programlisting>t/test.pl t/form/format_amount.t t/background_job/known_jobs.t</programlisting>
      </sect2>

      <sect2 id="devel.testsuite.meaning_of_scripts">
        <title>Bedeutung der verschiedenen Test-Scripte</title>

        <para>Die Test-Suite umfasst Tests sowohl für Funktionen als auch für
        Programmierstil. Einige besonders zu erwähnende, weil auch während der
        Entwicklung nützliche Tests sind:</para>

        <itemizedlist>
          <listitem>
            <para><filename>t/001compile.t</filename> -- compiliert alle
            Quelldateien und bricht bei Fehlern sofort ab</para>
          </listitem>

          <listitem>
            <para><filename>t/002goodperl.t</filename> -- überprüft alle
            Perl-Dateien auf Anwesenheit von '<literal>use
            strict</literal>'-Anweisungen</para>
          </listitem>

          <listitem>
            <para><filename>t/003safesys.t</filename> -- überprüft Aufrufe von
            <function>system()</function> und <function>exec()</function> auf
            Gültigkeit</para>
          </listitem>

          <listitem>
            <para><filename>t/005no_tabs.t</filename> -- überprüft, ob Dateien
            Tab-Zeichen enthalten</para>
          </listitem>

          <listitem>
            <para><filename>t/006spelling.t</filename> -- sucht nach häufigen
            Rechtschreibfehlern</para>
          </listitem>

          <listitem>
            <para><filename>t/011pod.t</filename> -- überprüft die Syntax von
            Dokumentation im POD-Format auf Gültigkeit</para>
          </listitem>
        </itemizedlist>

        <para>Weitere Test-Scripte überprüfen primär die Funktionsweise
        einzelner Funktionen und Module.</para>
      </sect2>

      <sect2 id="devel.testsuite.create_new">
        <title>Neue Test-Scripte erstellen</title>

        <para>Es wird sehr gern gesehen, wenn neue Funktionalität auch gleich
        mit einem Test-Script abgesichert wird. Auch bestehende Funktion darf
        und soll ausdrücklich nachträglich mit Test-Scripten abgesichert
        werden.</para>

        <sect3 id="devel.testsuite.ideas_for_non_function_tests">
          <title>Ideen für neue Test-Scripte, die keine konkreten Funktionen
          testen</title>

          <para>Ideen, die abgesehen von Funktionen noch nicht umgesetzt
          wurden:</para>

          <itemizedlist>
            <listitem>
              <para>Überprüfung auf fehlende symbolische Links</para>
            </listitem>

            <listitem>
              <para>Suche nach Nicht-ASCII-Zeichen in Perl-Code-Dateien (mit
              gewissen Einschränkungen wie das Erlauben von deutschen
              Umlauten)</para>
            </listitem>

            <listitem>
              <para>Test auf DOS-Zeilenenden (\r\n anstelle von nur \n)</para>
            </listitem>

            <listitem>
              <para>Überprüfung auf Leerzeichen am Ende von Zeilen</para>
            </listitem>

            <listitem>
              <para>Test, ob alle zu übersetzenden Strings in
              <filename>locale/de/all</filename> vorhanden sind</para>
            </listitem>

            <listitem>
              <para>Test, ob alle Webseiten-Templates in
              <filename>templates/webpages</filename> mit vom Perl-Modul
              <literal>Template</literal> compiliert werden können</para>
            </listitem>
          </itemizedlist>
        </sect3>

        <sect3 id="devel.testsuite.directory_and_test_names">
          <title>Konvention für Verzeichnis- und Dateinamen</title>

          <para>Es gibt momentan eine wenige Richtlinien, wie Test-Scripte zu
          benennen sind. Bitte die folgenden Punkte als Richtlinie betrachten
          und ihnen soweit es geht folgen:</para>

          <itemizedlist>
            <listitem>
              <para>Die Dateiendung muss <filename>.t</filename>
              lauten.</para>
            </listitem>

            <listitem>
              <para>Namen sind englisch, komplett klein geschrieben und
              einzelne Wörter mit Unterstrichten getrennt (beispielsweise
              <filename>bad_function_params.t</filename>).</para>
            </listitem>

            <listitem>
              <para>Unterverzeichnisse sollten grob nach dem Themenbereich
              benannt sein, mit dem sich die Scripte darin befassen
              (beispielsweise <filename>background_jobs</filename> für Tests
              rund um Hintergrund-Jobs).</para>
            </listitem>

            <listitem>
              <para>Test-Scripte sollten einen überschaubaren Bereich von
              Funktionalität testen, der logisch zusammenhängend ist (z.B. nur
              Tests für eine einzelne Funktion in einem Modul). Lieber mehrere
              Test-Scripte schreiben.</para>
            </listitem>
          </itemizedlist>
        </sect3>

        <sect3 id="devel.testsuite.minimal_example">
          <title>Minimales Skelett für eigene Scripte</title>

          <para>Der folgenden Programmcode enthält das kleinstmögliche
          Testscript und kann als Ausgangspunkt für eigene Tests verwendet
          werden:</para>

          <programlisting>use Test::More tests =&gt; 0;

use lib 't';

use Support::TestSetup;

Support::TestSetup::login();</programlisting>

          <para>Wird eine vollständig initialisierte kivitendo-Umgebung
          benötigt (Stichwort: alle globalen Variablen wie
          <varname>$::auth</varname>, <varname>$::form</varname> oder
          <varname>$::lxdebug</varname>), so muss in der Konfigurationsdatei
          <filename>config/kivitendo.conf</filename> im Abschnitt
          <literal>testing.login</literal> ein gültiger Login-Name eingetragen
          sein. Dieser wird für die Datenbankverbindung benötigt.</para>

          <para>Wir keine vollständig initialisierte Umgebung benötigt, so
          kann die letzte Zeile <programlisting>Support::TestSetup::login();</programlisting>
          weggelassen werden, was die Ausführungszeit des Scripts leicht
          verringert.</para>
        </sect3>
      </sect2>
    </sect1>

    <sect1 id="devel.style-guide">
      <title>Stil-Richtlinien</title>

      <para>Die folgenden Regeln haben das Ziel, den Code möglichst gut les-
      und wartbar zu machen. Dazu gehört zum Einen, dass der Code einheitlich
      eingerückt ist, aber auch, dass Mehrdeutigkeit so weit es geht vermieden
      wird (Stichworte "Klammern" oder "Hash-Keys").</para>

      <para>Diese Regeln sind keine Schikane sondern erleichtern allen das
      Leben!</para>

      <para>Jeder, der einen Patch schickt, sollte seinen Code vorher
      überprüfen. Einige der Regeln lassen sich automatisch überprüfen, andere
      nicht.</para>

      <orderedlist>
        <listitem>
          <para>Es werden keine echten Tabs sondern Leerzeichen
          verwendet.</para>
        </listitem>

        <listitem>
          <para>Die Einrückung beträgt zwei Leerzeichen. Beispiel:</para>

          <programlisting>foreach my $row (@data) {
  if ($flag) {
    # do something with $row
  }

  if ($use_modules) {
    $row-&gt;{modules} = MODULE-&gt;retrieve(
      id   =&gt; $row-&gt;{id},
      date =&gt; $use_now ? localtime() : $row-&gt;{time},
    );
  }

  $report-&gt;add($row);
}</programlisting>
        </listitem>

        <listitem>
          <para>Öffnende geschweifte Klammern befinden sich auf der gleichen
          Zeile wie der letzte Befehl. Beispiele:</para>

          <programlisting>sub debug {
  ...
}</programlisting>

          <para>oder</para>

          <programlisting>if ($form-&gt;{item_rows} &gt; 0) {
  ...
}</programlisting>
        </listitem>

        <listitem>
          <para>Schließende geschweifte Klammern sind so weit eingerückt wie
          der Befehl / die öffnende schließende Klammer, die den Block
          gestartet hat, und nicht auf der Ebene des Inhalts. Die gleichen
          Beispiele wie bei 3. gelten.</para>
        </listitem>

        <listitem>
          <para>Die Wörter "<function>else</function>",
          "<function>elsif</function>", "<function>while</function>" befinden
          sich auf der gleichen Zeile wie schließende geschweifte Klammern.
          Beispiele:</para>

          <programlisting>if ($form-&gt;{sum} &gt; 1000) {
  ...
} elsif ($form-&gt;{sum} &gt; 0) {
  ...
} else {
  ...
}

do {
  ...
} until ($a &gt; 0);</programlisting>
        </listitem>

        <listitem>
          <para>Parameter von Funktionsaufrufen müssen mit runden Klammern
          versehen werden. Davon nicht betroffen sind interne Perl-Funktionen,
          und grep-ähnliche Operatoren. Beispiel:</para>

          <programlisting>$main::lxdebug-&gt;message("Could not find file.");
%options = map { $_ =&gt; 1 } grep { !/^#/ } @config_file;</programlisting>
        </listitem>

        <listitem>
          <para>Verschiedene Klammern, Ihre Ausdrücke und Leerzeichen:</para>

          <para>Generell gilt: Hashkeys und Arrayindices sollten nicht durch
          Leerzeichen abgesetzt werden. Logische Klammerungen ebensowenig,
          Blöcke schon. Beispiel:</para>

          <programlisting>if (($form-&gt;{debug} == 1) &amp;&amp; ($form-&gt;{sum} - 100 &lt; 0)) {
  ...
}

$array[$i + 1]             = 4;
$form-&gt;{sum}              += $form-&gt;{"row_$i"};
$form-&gt;{ $form-&gt;{index} } += 1;

map { $form-&gt;{sum} += $form-&gt;{"row_$_"} } 1..$rowcount;</programlisting>
        </listitem>

        <listitem>
          <para>Mehrzeilige Befehle</para>

          <orderedlist>
            <listitem>
              <para>Werden die Parameter eines Funktionsaufrufes auf mehrere
              Zeilen aufgeteilt, so sollten diese bis zu der Spalte eingerückt
              werden, in der die ersten Funktionsparameter in der ersten Zeile
              stehen. Beispiel:</para>

              <programlisting>$sth = $dbh-&gt;prepare("SELECT * FROM some_table WHERE col = ?",
                    $form-&gt;{some_col_value});</programlisting>
            </listitem>

            <listitem>
              <para>Ein Spezialfall ist der ternäre Operator "?:", der am
              besten in einer übersichtlichen Tabellenstruktur organisiert
              wird. Beispiel:</para>

              <programlisting>my $rowcount = $form-&gt;{"row_$i"} ? $i
             : $form-&gt;{oldcount} ? $form-&gt;{oldcount} + 1
             :                     $form-&gt;{rowcount} - $form-&gt;{rowbase};</programlisting>
            </listitem>
          </orderedlist>
        </listitem>

        <listitem>
          <para>Kommentare</para>

          <orderedlist>
            <listitem>
              <para>Kommentare, die alleine in einer Zeile stehen, sollten
              soweit wie der Code eingerückt sein.</para>
            </listitem>

            <listitem>
              <para>Seitliche hängende Kommentare sollten einheitlich
              formatiert werden.</para>
            </listitem>

            <listitem>
              <para>Sämtliche Kommentare und Sonstiges im Quellcode ist bitte
              auf Englisch zu verfassen. So wie ich keine Lust habe,
              französischen Quelltext zu lesen, sollte auch der kivitendo
              Quelltext für nicht-Deutschsprachige lesbar sein.
              Beispiel:</para>

              <programlisting>my $found = 0;
while (1) {
  last if $found;

  # complicated check
  $found = 1 if //
}

$i  = 0        # initialize $i
$n  = $i;      # save $i
$i *= $const;  # do something crazy
$i  = $n;      # recover $i</programlisting>
            </listitem>
          </orderedlist>
        </listitem>

        <listitem>
          <para>Hashkeys sollten nur in Anführungszeichen stehen, wenn die
          Interpolation gewünscht ist. Beispiel:</para>

          <programlisting>$form-&gt;{sum}      = 0;
$form-&gt;{"row_$i"} = $form-&gt;{"row_$i"} - 5;
$some_hash{42}    = 54;</programlisting>
        </listitem>

        <listitem>
          <para>Die maximale Zeilenlänge ist nicht beschränkt. Zeilenlängen
          unterhalb von 79 Zeichen helfen unter bestimmten Bedingungen, aber
          wenn die Lesbarkeit unter kurzen Zeilen leidet (wie zum Biespiel in
          grossen Tabellen), dann ist Lesbarkeit vorzuziehen.</para>

          <para>Als Beispiel sei die Funktion
          <function>print_options</function> aus
          <filename>bin/mozilla/io.pl</filename> angeführt.</para>
        </listitem>

        <listitem>
          <para>Trailing Whitespace, d.h. Leerzeichen am Ende von Zeilen sind
          unerwünscht. Sie führen zu unnötigen Whitespaceänderungen, die diffs
          verfälschen.</para>

          <para>Emacs und vim haben beide recht einfache Methoden zur
          Entfernung von trailing whitespace. Emacs kennt das Kommande
          <command>nuke-trailing-whitespace</command>, vim macht das gleiche
          manuell über <literal>:%s/\s\+$//e</literal> Mit <literal>:au
          BufWritePre * :%s/\s\+$//e</literal> wird das an Speichern
          gebunden.</para>
        </listitem>

        <listitem>
          <para>Es wird kein <command>perltidy</command> verwendet.</para>

          <para>In der Vergangenheit wurde versucht,
          <command>perltidy</command> zu verwenden, um einen einheitlichen
          Stil zu erlangen. Es hat sich aber gezeigt, dass
          <command>perltidy</command>s sehr eigenwilliges Verhalten, was
          Zeilenumbrüche angeht, oftmals gut formatierten Code zerstört. Für
          den Interessierten sind hier die
          <command>perltidy</command>-Optionen, die grob den beschriebenen
          Richtlinien entsprechen:</para>

          <programlisting>-syn -i=2 -nt -pt=2 -sbt=2 -ci=2 -ibc -hsc -noll -nsts -nsfs -asc -dsm
-aws -bbc -bbs -bbb -mbl=1 -nsob -ce -nbl -nsbl -cti=0 -bbt=0 -bar -l=79
-lp -vt=1 -vtc=1</programlisting>
        </listitem>

        <listitem>
          <para><varname>STDERR</varname> ist tabu. Unkonditionale
          Debugmeldungen auch.</para>

          <para>kivitendo bietet mit dem Modul <classname>LXDebug</classname>
          einen brauchbaren Trace-/Debug-Mechanismus. Es gibt also keinen
          Grund, nach <varname>STDERR</varname> zu schreiben.</para>

          <para>Die <classname>LXDebug</classname>-Methode
          "<function>message</function>" nimmt als ersten Paramter außerdem
          eine Flagmaske, für die die Meldung angezeigt wird, wobei "0" immer
          angezeigt wird. Solche Meldungen sollten nicht eingecheckt werden
          und werden in den meisten Fällen auch vom Repository
          zurückgewiesen.</para>
        </listitem>

        <listitem>
          <para>Alle neuen Module müssen use strict verwenden.</para>

          <para><varname>$form</varname>, <varname>$auth</varname>,
          <varname>$locale</varname>, <varname>$lxdebug</varname> und
          <varname>%myconfig</varname> werden derzeit aus dem main package
          importiert (siehe <xref linkend="devel.globals"/>. Alle anderen
          Konstrukte sollten lexikalisch lokal gehalten werden.</para>
        </listitem>
      </orderedlist>
    </sect1>

    <sect1 id="devel.build-doc" xreflabel="Dokumentation erstellen">
      <title>Dokumentation erstellen</title>

      <sect2 id="devel.build-doc.introduction">
        <title>Einführung</title>

        <para>Diese Dokumentation ist in <productname>DocBook</productname>
        XML geschrieben. Zum Bearbeiten reicht grundsätzlich ein Text-Editor.
        Mehr Komfort bekommt man, wenn man einen dedizierten XML-fähigen
        Editor nutzt, der spezielle Unterstützung für
        <productname>DocBook</productname> mitbringt. Wir empfehlen dafür den
        <ulink url="http://www.xmlmind.com/xmleditor/">XMLmind XML
        Editor</ulink>, der bei nicht kommerzieller Nutzung kostenlos
        ist.</para>
      </sect2>

      <sect2 id="devel.build-doc.required-software">
        <title>Benötigte Software</title>

        <para>Bei <productname>DocBook</productname> ist Prinzip, dass
        ausschließlich die XML-Quelldatei bearbeitet wird. Aus dieser werden
        dann mit entsprechenden Stylesheets andere Formate wie PDF oder HTML
        erzeugt. Bei kivitendo übernimmt diese Aufgabe das Shell-Script
        <command>scripts/build_doc.sh</command>.</para>

        <para>Das Script benötigt zur Konvertierung verschiedene
        Softwarekomponenten, die im normalen kivitendo-Betrieb nicht benötigt
        werden:</para>

        <itemizedlist>
          <listitem>
            <para><ulink
            url="http://www.oracle.com/technetwork/java/index.html">Java</ulink>
            in einer halbwegs aktuellen Version</para>
          </listitem>

          <listitem>
            <para>Das Java-Build-System <ulink
            url="http://ant.apache.org/">Apache Ant</ulink></para>
          </listitem>

          <listitem>
            <para>Das Dokumentations-System Dobudish für
            <productname>DocBook</productname> 4.5, eine Zusammenstellung
            diverser Stylesheets und Grafiken zur Konvertierung von
            <productname>DocBook</productname> XML in andere Formate. Das
            Paket, das benötigt wird, ist zum Zeitpunkt der
            Dokumentationserstellung
            <filename>dobudish-nojre-1.1.4.zip</filename>, aus auf <ulink
            url="https://code.google.com/archive/p/dobudish/downloads">code.google.com</ulink>
            bereitsteht.</para>
          </listitem>
        </itemizedlist>

        <para>Apache Ant sowie ein dazu passendes Java Runtime Environment
        sind auf allen gängigen Plattformen verfügbar. Beispiel für
        Debian/Ubuntu:</para>

        <programlisting>apt-get install ant openjdk-7-jre</programlisting>

        <para>Nach dem Download von Dobudish muss Dobudish im Unterverzeichnis
        <filename>doc/build</filename> entpackt werden. Beispiel unter der
        Annahme, das <productname>Dobudish</productname> in
        <filename>$HOME/Downloads</filename> heruntergeladen wurde:</para>

        <programlisting>cd doc/build
unzip $HOME/Downloads/dobudish-nojre-1.1.4.zip</programlisting>
      </sect2>

      <sect2 id="devel.build-doc.build">
        <title>PDFs und HTML-Seiten erstellen</title>

        <para>Die eigentliche Konvertierung erfolgt nach Installation der
        benötigten Software mit einem einfachen Aufruf direkt aus dem
        kivitendo-Installationsverzeichnis heraus:</para>

        <programlisting>./scripts/build_doc.sh</programlisting>
      </sect2>

      <sect2 id="devel.build-doc.repository">
        <title>Einchecken in das Git-Repository</title>

        <para>Sowohl die XML-Datei als auch die erzeugten PDF- und
        HTML-Dateien sind Bestandteil des Git-Repositories. Daraus folgt, dass
        nach Änderungen am XML die PDF- und HTML-Dokumente ebenfalls gebaut
        und alles zusammen in einem Commit eingecheckt werden sollten.</para>

        <para>Die "<filename>dobudish</filename>"-Verzeichnisse bzw.
        symbolischen Links gehören hingegen nicht in das Repository.</para>
      </sect2>
    </sect1>
  </chapter>
</book>
